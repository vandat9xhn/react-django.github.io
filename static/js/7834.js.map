{"version":3,"sources":["webpack://my_webpack/./src/_icons_svg/icons_edit/IconsEdit.js","webpack://my_webpack/./src/pages/user_post/_main/UserPost.js"],"names":["IconsEdit","size_icon","x","y","color","is_editing","className","width","height","viewBox","d","fill","cx","cy","r","propTypes","PropTypes","number","string","bool","defaultProps","UserPost","props","setPostState","post_state","post_arr","has_fetched","API_Post_RD","id","res","mounted","data","open_input_id_arr","match","params","useState","initial_posts","useMounted","useEffect","getData_API_Post","posts","is_fetching"],"mappings":"0JAAA,I,IAAA,U,IACA,U,mDAwBA,SAASA,EAAT,GAA2D,IAAtCC,EAAsC,EAAtCA,UAAWC,EAA2B,EAA3BA,EAAGC,EAAwB,EAAxBA,EAAGC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAEzC,OACI,+BACIC,UAAU,sBACVC,MAAON,EACPO,OAAQP,EACRQ,QAAYP,EAAZ,IAAiBC,EAAjB,YAGA,gCACIG,UAAU,gBACVI,EAAE,0CACFC,KAAMP,IAQV,6BACIE,UAAWD,EAAa,mBAAqB,eAC7CM,KAAK,mBAEL,kCAAQC,GAAG,KAAKC,GAAG,MAAMC,EAAE,OAC3B,kCAAQF,GAAG,MAAMC,GAAG,MAAMC,EAAE,OAC5B,kCAAQF,GAAG,MAAMC,GAAG,MAAMC,EAAE,SAjD5C,SAGAd,EAAUe,UAAY,CAClBb,EAAGc,UAAUC,OACbd,EAAGa,UAAUC,OACbhB,UAAWe,UAAUE,OACrBd,MAAOY,UAAUE,OACjBb,WAAYW,UAAUG,MAG1BnB,EAAUoB,aAAe,CACrBlB,EAAG,EACHC,EAAG,EACHF,UAAW,SACXG,MAAO,cACPC,YAAY,G,UAuCDL,G,qPC1Df,W,OAGA,G,EAFA,UAEA,UAEA,WAEA,W,IAEA,U,mDAQA,SAASqB,EAASC,GAAO,I,EAAA,K,EAAA,yBAwBrB,0GACIC,OACOC,EADP,CAEIC,SAAU,GACVC,aAAa,KAJrB,UAOsB,IAAAC,aAAYC,EAAI,OAPtC,OAOUC,EAPV,OASIC,GACIP,EAAa,CACTE,SAAU,CAACI,EAAIE,MACfL,aAAa,EACbM,kBAAmB,CAACH,EAAIE,KAAKH,MAbzC,+CAxBqB,E,4QAAA,4CAEbA,EAAON,EAAMW,MAAMC,OAAnBN,GAFa,E,2YAAA,EAKc,IAAAO,UAAS,CACxCV,SAAUW,gBACVV,aAAa,EACbM,kBAAmB,KARF,GAKdR,EALc,KAKFD,EALE,KAWbE,EAA6CD,EAA7CC,SAAUC,EAAmCF,EAAnCE,YAAaM,EAAsBR,EAAtBQ,kBAGzBF,GAAU,IAAAO,cA4BhB,OAzBA,IAAAC,YAAU,WACNC,MACD,CAACX,IAwBA,+BAAKtB,UAAU,YACX,+BAAKA,UAAU,0BACX,+BAAKA,UAAU,kBACX,wBAAC,UAAD,CACIkC,MAAOf,EACPC,YAAaA,EACbe,aAAa,EACbT,kBAAmBA,OAxD3C,QAGAX,EAASN,UAAY,G,UA6DNM,G","file":"static/js/7834.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './IconsEdit.scss';\r\n\r\n//\r\nIconsEdit.propTypes = {\r\n    x: PropTypes.number,\r\n    y: PropTypes.number,\r\n    size_icon: PropTypes.string,\r\n    color: PropTypes.string,\r\n    is_editing: PropTypes.bool,\r\n};\r\n\r\nIconsEdit.defaultProps = {\r\n    x: 0,\r\n    y: 0,\r\n    size_icon: '1.5rem',\r\n    color: 'var(--blue)',\r\n    is_editing: false,\r\n};\r\n\r\n/**\r\n * icons edit: pen_edit + dot edit\r\n */\r\nfunction IconsEdit({ size_icon, x, y, color, is_editing }) {\r\n    //\r\n    return (\r\n        <svg\r\n            className=\"IconsEdit size-icon\"\r\n            width={size_icon}\r\n            height={size_icon}\r\n            viewBox={`${x} ${y} 200 200`}\r\n        >\r\n            {/* Pen Edit x=0 y=0 */}\r\n            <path\r\n                className=\"IconsEdit_pen\"\r\n                d=\"M0,200 L15,160 L175,0 L200,25 L40,185 Z\"\r\n                fill={color}\r\n            />\r\n            {/* <g stroke=\"white\" strokeWidth=\"15\">\r\n                <line x1=\"150\" y1=\"25\" x2=\"175\" y2=\"50\" />\r\n                <line x1=\"20\" y1=\"155\" x2=\"45\" y2=\"180\" />\r\n            </g> */}\r\n\r\n            {/* dot waiting */}\r\n            <g\r\n                className={is_editing ? 'EditIcons_active' : 'display-none'}\r\n                fill=\"var(--md-color)\"\r\n            >\r\n                <circle cx=\"80\" cy=\"190\" r=\"10\" />\r\n                <circle cx=\"130\" cy=\"190\" r=\"10\" />\r\n                <circle cx=\"180\" cy=\"190\" r=\"10\" />\r\n            </g>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default IconsEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { API_Post_RD } from '../../../api/api_django/user/user_post/UserPost';\r\n\r\nimport { initial_posts } from '../../../_initial/post/InitialPosts';\r\n//\r\nimport { useMounted } from '../../../_hooks/useMounted';\r\n//\r\nimport Posts from '../../../component/posts/_posts/_main/Posts';\r\n//\r\nimport './UserPost.scss';\r\n\r\n//\r\nUserPost.propTypes = {};\r\n\r\n//\r\nfunction UserPost(props) {\r\n    //\r\n    const { id } = props.match.params;\r\n\r\n    //\r\n    const [post_state, setPostState] = useState({\r\n        post_arr: initial_posts,\r\n        has_fetched: false,\r\n        open_input_id_arr: [],\r\n    });\r\n\r\n    const { post_arr, has_fetched, open_input_id_arr } = post_state;\r\n\r\n    //\r\n    const mounted = useMounted();\r\n\r\n    //\r\n    useEffect(() => {\r\n        getData_API_Post();\r\n    }, [id]);\r\n\r\n    // --------\r\n\r\n    //\r\n    async function getData_API_Post() {\r\n        setPostState({\r\n            ...post_state,\r\n            post_arr: [],\r\n            has_fetched: false,\r\n        });\r\n\r\n        const res = await API_Post_RD(id, 'GET');\r\n\r\n        mounted &&\r\n            setPostState({\r\n                post_arr: [res.data],\r\n                has_fetched: true,\r\n                open_input_id_arr: [res.data.id],\r\n            });\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div className=\"UserPost\">\r\n            <div className=\"UserPost_contain bg-fb\">\r\n                <div className=\"UserPost_posts\">\r\n                    <Posts\r\n                        posts={post_arr}\r\n                        has_fetched={has_fetched}\r\n                        is_fetching={false}\r\n                        open_input_id_arr={open_input_id_arr}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserPost;\r\n"],"sourceRoot":""}