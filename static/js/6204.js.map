{"version":3,"sources":["webpack://my_webpack/./src/_hooks/useInputDate.js","webpack://my_webpack/./src/_icons_svg/icons_eye/IconsEye.js","webpack://my_webpack/./src/_some_function/getDaysInMonth.js","webpack://my_webpack/./src/_some_function/makeRange.js","webpack://my_webpack/./src/api/api_django_no_token/signup/Signup.js","webpack://my_webpack/./src/component/button/button_ripple/ButtonRipple.js","webpack://my_webpack/./src/component/input/date/_main/InputDate.js","webpack://my_webpack/./src/component/input/date/day/InputDay.js","webpack://my_webpack/./src/component/input/input_password/InputPassword.js","webpack://my_webpack/./src/component/input/input_text/InputText.js","webpack://my_webpack/./src/pages/registration/_initial/ResgitrationInitial.js","webpack://my_webpack/./src/pages/registration/_main/Registration.js","webpack://my_webpack/./src/redux/action/action_location.js"],"names":["initial_day","initial_month","initial_year","useState","day","month","year","input_date_state","setInputDateState","handleChangeMonthYear","value","month_year_str","last_day","getLastDayOfMonth","handleChangeDay","e","target","handleChangeMonth","handleChangeYear","IconsEye","props","size_icon","x","y","close_eye","className","height","width","viewBox","stroke","fill","strokeLinecap","d","strokeWidth","cx","cy","r","x1","y1","x2","y2","propTypes","PropTypes","string","color","number","bool","defaultProps","Date","Array","from","length","_","k","start","end","SignupRequest","data","API_FakeReal","default_login","method","url","ButtonRipple","children","onClick","type","disabled","ripple_type","title","any","func","InputDate","min_year","max_year","invalid","title_invalid","options","makeRange","current_option","onSelectOption","InputDay","getDaysInMonth","InputPassword","field","form","label","placeholder","max_length","help","name","touched","errors","showError","type_password","setType","maxLength","Icon","IconsAction","object","InputText","is_textarea","dataList","onChange","dataListId","makeAutoHeight","list","id","map","item","index","key","array","Yup","initialValues","username","password","password_confirm","email","first_name","last_name","validationSchema","shape","matches","required","oneOf","ref","min","max","trim","fields","Registration","values","handleScrollSmooth","window","scroll","formData","handleScreenFetching","is_fetching","res","setUserExisted","setEmailExisted","sessionStorage","new_member","setDataUser","picture","white_person","console","log","useContext","context_api","user","dispatch","useDispatch","username_existed","email_existed","setInvalid","ref_register_elm","useRef","useScreenFetching","useInputDate","closeMoreError","useEffect","actionLocationRegister","document","documentElement","setAttribute","localStorage","light_mode","Formik","onSubmit","actions","form_props","Form","autoComplete","FastField","component","startsWith","dirty","err_keys","Object","keys","current","querySelector","scrollIntoView","birth","preventDefault","handleErrorBeforeSubmit","is_register","payload"],"mappings":"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","file":"static/js/6204.js","sourcesContent":["import { useState } from 'react';\r\n//\r\nimport { getLastDayOfMonth } from '../_some_function/getDaysInMonth';\r\n\r\n//\r\nexport function useInputDate({\r\n    initial_day = 1,\r\n    initial_month = 1,\r\n    initial_year = 2000,\r\n}) {\r\n    //\r\n    const [input_date_state, setInputDateState] = useState({\r\n        day: initial_day,\r\n        month: initial_month,\r\n        year: initial_year,\r\n    });\r\n\r\n    const { day, month, year } = input_date_state;\r\n\r\n    /* --------- COMMON---------- */\r\n\r\n    //\r\n    function handleChangeMonthYear(value, month_year_str = 'month' || 'year') {\r\n        const last_day =\r\n            month_year_str == 'month'\r\n                ? getLastDayOfMonth(+value, +year)\r\n                : getLastDayOfMonth(+month, +value);\r\n\r\n        setInputDateState((input_date_state) => ({\r\n            ...input_date_state,\r\n            [month_year_str]: value,\r\n            day:\r\n                input_date_state.day > last_day\r\n                    ? last_day\r\n                    : input_date_state.day,\r\n        }));\r\n    }\r\n\r\n    /* ------------------- */\r\n\r\n    //\r\n    function handleChangeDay(e) {\r\n        setInputDateState((input_date_state) => ({\r\n            ...input_date_state,\r\n            day: e.target.value,\r\n        }));\r\n    }\r\n\r\n    //\r\n    function handleChangeMonth(e) {\r\n        handleChangeMonthYear(e.target.value, 'month');\r\n    }\r\n\r\n    //\r\n    function handleChangeYear(e) {\r\n        handleChangeMonthYear(e.target.value, 'year');\r\n    }\r\n\r\n    //\r\n    return {\r\n        day,\r\n        month,\r\n        year,\r\n\r\n        handleChangeDay,\r\n        handleChangeMonth,\r\n        handleChangeYear,\r\n    };\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// import './IconsEye.scss';\r\n\r\n//\r\nIconsEye.propTypes = {\r\n    size_icon: PropTypes.string,\r\n    color: PropTypes.string,\r\n    x: PropTypes.number,\r\n    y: PropTypes.number,\r\n    close_eye: PropTypes.bool,\r\n};\r\n\r\nIconsEye.defaultProps = {\r\n    x: 0,\r\n    y: 0,\r\n    size_icon: '1.5rem',\r\n    close_eye: true,\r\n};\r\n\r\n/**\r\n    IconsEye: (x, y)\r\n        1. Eye show password: (200, 200)\r\n*/\r\nfunction IconsEye(props){\r\n    const { size_icon, x, y, close_eye } = props;\r\n    return (\r\n        <svg\r\n            className=\"IconsEye\"\r\n            height={size_icon}\r\n            width={size_icon}\r\n            viewBox={`${x} ${y} 200 200`}\r\n            stroke=\"var(--black-brown)\"\r\n            fill=\"var(--black-brown)\"\r\n            strokeLinecap=\"round\"\r\n        >\r\n\r\n            {/* Eye for showing password x=200 y=200 Toggle:close_eye */}\r\n            <path\r\n                d=\"M200,300 Q300,200 400,300 Q300,400 200,300\"\r\n                fill=\"none\"\r\n                strokeWidth=\"10\"\r\n            />\r\n            <circle\r\n                className={close_eye ? 'display-none' : ''}\r\n                cx=\"300\"\r\n                cy=\"300\"\r\n                r=\"30\"\r\n            />\r\n            <g className={close_eye ? '' : 'display-none'}>\r\n                <path d=\"M200,300 Q300,350 400,300\" fill=\"none\" strokeWidth=\"20\"/>\r\n                <line x1=\"210\" y1=\"210\" x2=\"390\" y2=\"390\" strokeWidth=\"30\"/>\r\n            </g>\r\n\r\n        </svg>\r\n    );\r\n};\r\n\r\n\r\nexport default IconsEye;\r\n","//\r\nexport function getLastDayOfMonth(month, year) {\r\n    if (month == 12) {\r\n        return 31;\r\n    }\r\n\r\n    return (\r\n        (new Date(`${year}-${+month + 1}`) - new Date(`${year}-${month}`)) /\r\n        86400000\r\n    );\r\n}\r\n\r\n//\r\nexport function getDaysInMonth(month, year) {\r\n    const last_day = getLastDayOfMonth(+month, +year);\r\n\r\n    return Array.from({ length: last_day }, (_, k) => k + 1);\r\n}\r\n","//\r\nexport function makeRange(start = 0, end = 1) {\r\n    return Array.from({ length: end - start }, (_, k) => k + start);\r\n}\r\n","import axiosClientNoToken from '../_axios/AxiosNoToken';\r\n//\r\nimport { API_FakeReal, csrftoken } from '../../_ConstAPI';\r\nimport { default_login } from '../../../pages/login_form/_default/DefaultLogin';\r\n\r\n// registration\r\nexport const SignupRequest = (data) =>\r\n    API_FakeReal(\r\n        default_login,\r\n        () => axiosClientNoToken({\r\n            method: 'POST',\r\n            data: data,\r\n            url: '/registration/sign-up/',\r\n        })\r\n    );\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport './ButtonRipple.scss';\r\n\r\n//\r\nButtonRipple.propTypes = {\r\n    type: PropTypes.string,\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    ripple_type: PropTypes.string,\r\n\r\n    children: PropTypes.any,\r\n    onClick: PropTypes.func,\r\n};\r\n\r\nButtonRipple.defaultProps = {\r\n    title: '',\r\n    type: 'text',\r\n    ripple_type: 'right',\r\n    disabled: false,\r\n};\r\n\r\n/**\r\n * ripple_type is one of ['right', 'left', 'center']\r\n */\r\nfunction ButtonRipple({\r\n    children,\r\n    onClick,\r\n    type,\r\n    disabled,\r\n    ripple_type,\r\n    title,\r\n}) {\r\n    //\r\n    return (\r\n        <button\r\n            className={`ButtonRipple btn label-field ${\r\n                disabled ? 'opacity-05 pointer-events-none' : 'cursor-pointer'\r\n            }`}\r\n            type={type}\r\n            title={title}\r\n            disabled={disabled}\r\n            onClick={onClick}\r\n        >\r\n            <div\r\n                className={`ButtonRipple_common ButtonRipple_${ripple_type} ${\r\n                    disabled ? 'display-none' : ''\r\n                }`}\r\n            />\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default ButtonRipple;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { makeRange } from '../../../../_some_function/makeRange';\r\n//\r\nimport InputDay from '../day/InputDay';\r\nimport Select from '../../select/Select';\r\n//\r\nimport './InputDate.scss';\r\n\r\n//\r\nInputDate.propTypes = {};\r\n\r\n//\r\nfunction InputDate({\r\n    day,\r\n    month,\r\n    year,\r\n\r\n    min_year,\r\n    max_year,\r\n\r\n    invalid,\r\n    title_invalid,\r\n\r\n    handleChangeDay,\r\n    handleChangeMonth,\r\n    handleChangeYear,\r\n}) {\r\n    //\r\n    return (\r\n        <div className=\"InputDate\">\r\n            <div>\r\n                <div className=\"InputDate_row display-flex align-items-center\">\r\n                    <div className=\"InputDate_item\">\r\n                        <div className=\"InputDate_item-contain\">\r\n                            <InputDay\r\n                                day={day}\r\n                                month={month}\r\n                                year={year}\r\n                                handleChangeDay={handleChangeDay}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"InputDate_item\">\r\n                        <div className=\"InputDate_item-contain\">\r\n                            <Select\r\n                                options={makeRange(1, 13)}\r\n                                current_option={month}\r\n                                onSelectOption={handleChangeMonth}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"InputDate_item\">\r\n                        <div className=\"InputDate_item-contain\">\r\n                            <Select\r\n                                options={makeRange(min_year, max_year + 1)}\r\n                                current_option={year}\r\n                                onSelectOption={handleChangeYear}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {invalid ? (\r\n                <div className=\"text-red font-12px font-italic\">\r\n                    {title_invalid ? title_invalid : 'Date is invalid!'}\r\n                </div>\r\n            ) : (\r\n                <div></div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputDate;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { getDaysInMonth } from '../../../../_some_function/getDaysInMonth';\r\n//\r\nimport Select from '../../select/Select';\r\n\r\n//\r\nInputDay.propTypes = {};\r\n\r\n//\r\nfunction InputDay({ month, year, day, handleChangeDay }) {\r\n    //\r\n    const options = getDaysInMonth(month, year);\r\n\r\n    //\r\n    return (\r\n        <Select\r\n            options={options}\r\n            current_option={day}\r\n            onSelectOption={handleChangeDay}\r\n        />\r\n    );\r\n}\r\n\r\nexport default InputDay;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport IconsEye from '../../../_icons_svg/icons_eye/IconsEye';\r\nimport IconsAction from '../../../_icons_svg/icons_action/IconsAction';\r\n//\r\nimport IconDiv from '../../some_div/icon_div/IconDiv';\r\n//\r\nimport './InputPassword.scss';\r\n\r\n//\r\nInputPassword.propTypes = {\r\n    field: PropTypes.object,\r\n    form: PropTypes.object,\r\n    label: PropTypes.string,\r\n    max_length: PropTypes.number,\r\n    placeholder: PropTypes.string,\r\n};\r\n\r\nInputPassword.defaultProps = {\r\n    max_length: 15,\r\n};\r\n\r\n//\r\nfunction InputPassword({ field, form, label, placeholder, max_length, help }) {\r\n    //\r\n    const { name } = field;\r\n    const { touched, errors } = form;\r\n    const showError = touched[name] && errors[name];\r\n\r\n    //\r\n    const [type_password, setType] = useState(true);\r\n\r\n    //\r\n    const ChangeTypePassword = () => {\r\n        setType(!type_password);\r\n    };\r\n\r\n    //\r\n    return (\r\n        <div>\r\n            <div>\r\n                <label className=\"label-field\">{label}</label>\r\n            </div>\r\n\r\n            <div className=\"InputPassword_password position-rel\">\r\n                <input\r\n                    className={`InputPassword_input w-100per padding-8px brs-5px ${\r\n                        touched[name] && !errors[name]\r\n                            ? 'InputPassword_valid'\r\n                            : ''\r\n                    } ${\r\n                        touched[name] && !!errors[name]\r\n                            ? 'InputPassword_invalid'\r\n                            : ''\r\n                    }`}\r\n                    {...field}\r\n                    maxLength={max_length}\r\n                    placeholder={placeholder}\r\n                    type={type_password ? 'password' : 'text'}\r\n                />\r\n\r\n                <div className=\"InputPassword__eye\">\r\n                    <div onClick={ChangeTypePassword}>\r\n                        <IconsEye x={200} y={200} close_eye={type_password} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {help && (\r\n                <div className=\"help-text\">\r\n                    <IconDiv Icon={IconsAction} x={600}>\r\n                        * {help}\r\n                    </IconDiv>\r\n                </div>\r\n            )}\r\n\r\n            {showError && (\r\n                <div className=\"error-field\">\r\n                    <IconDiv Icon={IconsAction} x={400} y={400}>\r\n                        {errors[name]}\r\n                    </IconDiv>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputPassword;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n//\nimport IconDiv from '../../some_div/icon_div/IconDiv';\nimport IconsAction from '../../../_icons_svg/icons_action/IconsAction';\n//\nimport TextareaNotSend from '../textarea/TextareaNotSend';\n//\nimport './InputText.scss';\nimport { makeAutoHeight } from '../../../_some_function/makeAutoHeight';\n\n//\nInputText.propTypes = {\n    // formik\n    field: PropTypes.object,\n    form: PropTypes.object,\n    //\n    is_textarea: PropTypes.bool,\n    type: PropTypes.string,\n    label: PropTypes.string,\n    placeholder: PropTypes.string,\n    dataList: PropTypes.array,\n    help: PropTypes.string,\n    max_length: PropTypes.number,\n};\n\nInputText.defaultProps = {\n    is_textarea: false,\n    dataList: [],\n    type: 'text',\n};\n\n//\nfunction InputText({\n    field,\n    form,\n\n    is_textarea,\n    type,\n    label,\n    placeholder,\n    dataList,\n    help,\n    max_length,\n}) {\n    //\n    const { name, onChange } = field;\n    const { touched, errors } = form;\n    const showError = touched[name] && errors[name];\n    const dataListId = `list_${name}_${label}`;\n\n    //\n    function handleChange(e) {\n        onChange(e);\n        makeAutoHeight(e);\n    }\n\n    //\n    return (\n        <div className=\"InputText\">\n            <div>\n                <label className=\"label-field\">{label}</label>\n            </div>\n\n            <div>\n                {is_textarea ? (\n                    <textarea\n                        className={`InputText_input InputText_textarea scroll-thin brs-5px ${\n                            touched[name] && !errors[name]\n                                ? 'InputText_valid'\n                                : ''\n                        } ${\n                            touched[name] && !!errors[name]\n                                ? 'InputText_invalid'\n                                : ''\n                        }`}\n                        {...field}\n                        onChange={handleChange}\n                        placeholder={placeholder}\n                        type={type}\n                        maxLength={max_length}\n                    />\n                ) : (\n                    <input\n                        className={`InputText_input brs-5px ${\n                            touched[name] && !errors[name]\n                                ? 'InputText_valid'\n                                : ''\n                        } ${\n                            touched[name] && !!errors[name]\n                                ? 'InputText_invalid'\n                                : ''\n                        }`}\n                        {...field}\n                        placeholder={placeholder}\n                        type={type}\n                        list={dataListId}\n                        maxLength={max_length}\n                    />\n                )}\n            </div>\n\n            <datalist id={dataListId}>\n                {dataList.map((item, index) => (\n                    <option key={`InputText_${index}`}>{item}</option>\n                ))}\n            </datalist>\n\n            {help && (\n                <div className=\"help-text\">\n                    <IconDiv Icon={IconsAction} x={600}>\n                        * {help}\n                    </IconDiv>\n                </div>\n            )}\n\n            {showError && (\n                <div className=\"error-field\">\n                    <IconDiv Icon={IconsAction} x={400} y={400}>\n                        {errors[name]}\n                    </IconDiv>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default InputText;\n","import * as Yup from 'yup';\r\n\r\n// const\r\nexport const initialValues = {\r\n    username: '',\r\n    password: '',\r\n    password_confirm: '',\r\n    email: '',\r\n    first_name: '',\r\n    last_name: '',\r\n};\r\n\r\nexport const validationSchema = Yup.object().shape({\r\n    username: Yup.string()\r\n        .matches(/^[a-zA-Z0-9]{5,15}$/, 'Username is invalid')\r\n        .required(),\r\n\r\n    password: Yup.string()\r\n        .matches(/^[a-zA-Z0-9]{5,15}$/ && /[A-Z]/, 'Password is invalid')\r\n        .required(),\r\n\r\n    password_confirm: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Password is not right')\r\n        .required(),\r\n\r\n    email: Yup.string()\r\n        .email('Invalid email')\r\n        .matches(/^\\S{4,10}@[a-z]mail\\.com$/, 'Invalid email')\r\n        .required(),\r\n\r\n    first_name: Yup.string()\r\n        .matches(/^\\S/, 'First name is invalid')\r\n        .min(1, 'First name is invalid')\r\n        .max(20, 'First name is invalid')\r\n        .trim('First name is invalid')\r\n        .required(),\r\n\r\n    last_name: Yup.string()\r\n        .matches(/^\\S/, 'First name is invalid')\r\n        .min(1, 'Last name is invalid')\r\n        .max(20, 'Last name is invalid')\r\n        .trim('Last name is invalid')\r\n        .required(),\r\n});\r\n\r\n//\r\nexport const fields = [\r\n    {\r\n        name: 'username',\r\n        type: 'text',\r\n        label: 'Username',\r\n        help: '5-15 english letters and no space',\r\n        max_length: 15,\r\n    },\r\n    {\r\n        name: 'password',\r\n        type: 'password',\r\n        label: 'Password',\r\n        help: '5-15 english letters, no space and at least 1 uppercase letter',\r\n        max_length: 15,\r\n    },\r\n    {\r\n        name: 'password_confirm',\r\n        type: 'password',\r\n        label: 'Password confirm',\r\n        help: 'Confirm your password',\r\n        max_length: 15,\r\n    },\r\n    {\r\n        name: 'email',\r\n        type: 'email',\r\n        label: 'Email',\r\n        help: '****@*mail.com',\r\n    },\r\n    {\r\n        name: 'first_name',\r\n        type: 'text',\r\n        label: 'First name',\r\n        help: '1-20 letters, spaces and start with a letter',\r\n        max_length: 20,\r\n    },\r\n    {\r\n        name: 'last_name',\r\n        type: 'text',\r\n        label: 'Last name',\r\n        help: '1-15 letters, spaces and start with a letter',\r\n        max_length: 15,\r\n    },\r\n];\r\n","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Formik, Form, FastField } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { context_api } from '../../../_context/ContextAPI';\r\n//\r\nimport { SignupRequest } from '../../../api/api_django_no_token/signup/Signup';\r\n//\r\nimport { useScreenFetching } from '../../../_hooks/UseScreenFetching';\r\nimport { useInputDate } from '../../../_hooks/useInputDate';\r\n//\r\nimport makeFormData from '../../../_some_function/makeFormData';\r\nimport { handleScrollSmooth } from '../../../_some_function/handleScrollSmooth';\r\n//\r\nimport IconsAction from '../../../_icons_svg/icons_action/IconsAction';\r\n//\r\nimport { actionLocationRegister } from '../../../redux/action/action_location';\r\n//\r\nimport ButtonRipple from '../../../component/button/button_ripple/ButtonRipple';\r\nimport IconDiv from '../../../component/some_div/icon_div/IconDiv';\r\nimport FetchingDiv from '../../../component/some_div/fetching/FetchingDiv';\r\nimport InputText from '../../../component/input/input_text/InputText';\r\nimport InputPassword from '../../../component/input/input_password/InputPassword';\r\n//\r\nimport {\r\n    fields,\r\n    initialValues,\r\n    validationSchema,\r\n} from '../_initial/ResgitrationInitial';\r\n//\r\nimport InputDate from '../../../component/input/date/_main/InputDate';\r\n//\r\nimport white_person from '../../../../image/white_person.svg';\r\nimport './Registration.scss';\r\n\r\n//\r\nRegistration.propTypes = {};\r\n\r\n//\r\nfunction Registration(props) {\r\n    //\r\n    const { user, setDataUser } = useContext(context_api);\r\n\r\n    //\r\n    const dispatch = useDispatch();\r\n\r\n    //\r\n    const [username_existed, setUserExisted] = useState(false);\r\n    const [email_existed, setEmailExisted] = useState(false);\r\n    const [invalid, setInvalid] = useState(false);\r\n\r\n    //\r\n    const ref_register_elm = useRef(null);\r\n\r\n    //\r\n    const handleScreenFetching = useScreenFetching();\r\n\r\n    const {\r\n        day,\r\n        month,\r\n        year,\r\n\r\n        handleChangeDay,\r\n        handleChangeMonth,\r\n        handleChangeYear,\r\n    } = useInputDate({});\r\n\r\n    //\r\n    useEffect(() => {\r\n        dispatch(actionLocationRegister(true));\r\n\r\n        return () => {\r\n            dispatch(actionLocationRegister(false));\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        document.title = 'Registration';\r\n        document.documentElement.setAttribute('data-theme', 'light');\r\n\r\n        return () => {\r\n            localStorage.light_mode != 1 &&\r\n                document.documentElement.setAttribute('data-theme', 'dark');\r\n        };\r\n    }, []);\r\n\r\n    //\r\n    function handleErrorBeforeSubmit(e, form_props) {\r\n        if (form_props.dirty) {\r\n            const err_keys = Object.keys(form_props.errors);\r\n\r\n            if (err_keys.length) {\r\n                handleScrollSmooth(() => {\r\n                    ref_register_elm.current\r\n                        .querySelector(`[name=${err_keys[0]}]`)\r\n                        .scrollIntoView(false);\r\n                });\r\n            }\r\n        }\r\n\r\n        //\r\n        const birth = new Date(year, month, day);\r\n\r\n        if (birth > new Date() || birth <= new Date(1960)) {\r\n            setInvalid(true);\r\n\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    //\r\n    async function onSubmit(values) {\r\n        handleScrollSmooth(() => {\r\n            window.scroll(0, 0);\r\n        });\r\n\r\n        const { username, password, email } = values;\r\n\r\n        const first_name = values.first_name.trim();\r\n        const last_name = values.last_name.trim();\r\n\r\n        const formData = makeFormData({\r\n            username: username,\r\n            password: password,\r\n            email: email,\r\n            first_name: first_name,\r\n            last_name: last_name,\r\n            day: day,\r\n            month: month,\r\n            year: year,\r\n        });\r\n\r\n        try {\r\n            const res = await handleScreenFetching(\r\n                () => SignupRequest(formData),\r\n                <FetchingDiv is_fetching={true} />\r\n            );\r\n            const data = res.data;\r\n\r\n            if (data == 'username_existed') {\r\n                setUserExisted(true);\r\n            } else if (data == 'email_existed') {\r\n                setEmailExisted(true);\r\n            } else {\r\n                sessionStorage.new_member = first_name + ' ' + last_name;\r\n\r\n                setDataUser({\r\n                    id: data.id,\r\n                    first_name: first_name,\r\n                    last_name: last_name,\r\n                    picture: white_person,\r\n                });\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    //\r\n    function closeMoreError() {\r\n        username_existed && setUserExisted(false);\r\n        email_existed && setEmailExisted(false);\r\n        invalid && setInvalid(false);\r\n    }\r\n\r\n    //\r\n    // if (user.id) {\r\n    //     return <Redirect to=\"/home\" />;\r\n    // }\r\n\r\n    //\r\n    return (\r\n        <div ref={ref_register_elm}>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, actions) => {\r\n                    onSubmit(values);\r\n                }}\r\n            >\r\n                {(form_props) => (\r\n                    <Form\r\n                        autoComplete=\"off\"\r\n                        className=\"Registration_form App_Form brs-5px-md padding-8px\"\r\n                        onClick={closeMoreError}\r\n                    >\r\n                        <h2 className=\"App_title margin-0\">Sign up</h2>{' '}\r\n                        <hr className=\"App_hr-bg\" />\r\n                        <div\r\n                            className={`Registration_error text-red ${\r\n                                username_existed || email_existed\r\n                                    ? ''\r\n                                    : 'display-none'\r\n                            }`}\r\n                        >\r\n                            <IconDiv Icon={IconsAction} x={400} y={400}>\r\n                                {username_existed ? 'Username' : 'Email'} was\r\n                                existed\r\n                            </IconDiv>\r\n                        </div>\r\n                        <div>\r\n                            {fields.map((item, index) => (\r\n                                <div\r\n                                    key={`Registration_${index}`}\r\n                                    className=\"Registration_input\"\r\n                                >\r\n                                    <FastField\r\n                                        name={item.name}\r\n                                        component={\r\n                                            item.name.startsWith('password')\r\n                                                ? InputPassword\r\n                                                : InputText\r\n                                        }\r\n                                        label={item.label}\r\n                                        placeholder={`${item.label}...`}\r\n                                        help={item.help}\r\n                                        max_length={item.max_length}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n\r\n                            <div>\r\n                                <div>\r\n                                    <div className=\"label-field\">Birth day</div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <InputDate\r\n                                        day={day}\r\n                                        month={month}\r\n                                        year={year}\r\n                                        //\r\n                                        min_year={1960}\r\n                                        max_year={2021}\r\n                                        //\r\n                                        invalid={invalid}\r\n                                        title_invalid=\"Birth must be from 1960 to now\"\r\n                                        //\r\n                                        handleChangeDay={handleChangeDay}\r\n                                        handleChangeMonth={handleChangeMonth}\r\n                                        handleChangeYear={handleChangeYear}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <div className=\"App_submit display-flex-center\">\r\n                            <ButtonRipple\r\n                                type=\"submit\"\r\n                                onClick={(e) =>\r\n                                    handleErrorBeforeSubmit(e, form_props)\r\n                                }\r\n                            >\r\n                                Sign up\r\n                            </ButtonRipple>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Registration;\r\n","//\r\nexport const actionLocationRegister = (is_register = false) => {\r\n    return {\r\n        type: 'REGISTER',\r\n        payload: is_register,\r\n    };\r\n};\r\n"],"sourceRoot":""}