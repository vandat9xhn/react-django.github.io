{"version":3,"sources":["webpack://my_webpack/./src/_icons_svg/icons_eye/IconsEye.js","webpack://my_webpack/./src/api/api_django_no_token/signup/Signup.js","webpack://my_webpack/./src/component/button/button_ripple/ButtonRipple.js","webpack://my_webpack/./src/component/input/input_password/InputPassword.js","webpack://my_webpack/./src/component/input/input_text/InputText.js","webpack://my_webpack/./src/component/some_div/fetching/BlurFetchingDiv.js","webpack://my_webpack/./src/pages/registration/_default/DefaultResgitration.js","webpack://my_webpack/./src/pages/registration/_main/Registration.js"],"names":["IconsEye","props","size_icon","x","y","close_eye","className","height","width","viewBox","stroke","fill","strokeLinecap","d","strokeWidth","cx","cy","r","x1","y1","x2","y2","propTypes","PropTypes","string","color","number","bool","defaultProps","SignupRequest","data","API_FakeReal","default_login","method","url","ButtonRipple","children","onClick","type","disabled","ripple_type","title","any","func","InputPassword","useState","type_password","setType","field","form","label","placeholder","max_length","help","name","touched","errors","showError","htmlFor","maxLength","Icon","IconsAction","object","InputText","is_textarea","dataList","onChange","dataListId","e","makeAutoHeight","list","id","map","item","index","key","array","BlurFetchingDiv","is_fetching","FetchingComponent","Yup","initialValues","username","password","password_confirm","email","first_name","last_name","validationSchema","shape","matches","required","oneOf","ref","trim","fields","Registration","values","window","scroll","setSubmitting","formData","res","setUserExisted","setEmailExisted","sessionStorage","new_member","setDataUser","user_id","picture","console","log","alert","submitting","username_existed","email_existed","closeMoreError","useEffect","document","localStorage","is_login","Redirect","to","Formik","onSubmit","actions","Form","autoComplete","FastField","component","startsWith","FetchingDiv"],"mappings":"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","file":"static/js/6204.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// import './IconsEye.scss';\r\n\r\n//\r\nIconsEye.propTypes = {\r\n    size_icon: PropTypes.string,\r\n    color: PropTypes.string,\r\n    x: PropTypes.number,\r\n    y: PropTypes.number,\r\n    close_eye: PropTypes.bool,\r\n};\r\n\r\nIconsEye.defaultProps = {\r\n    x: 0,\r\n    y: 0,\r\n    size_icon: '1.5rem',\r\n    close_eye: true,\r\n};\r\n\r\n/**\r\n    IconsEye: (x, y)\r\n        1. Eye show password: (200, 200)\r\n*/\r\nfunction IconsEye(props){\r\n    const { size_icon, x, y, close_eye } = props;\r\n    return (\r\n        <svg\r\n            className=\"IconsEye\"\r\n            height={size_icon}\r\n            width={size_icon}\r\n            viewBox={`${x} ${y} 200 200`}\r\n            stroke=\"var(--black-brown)\"\r\n            fill=\"var(--black-brown)\"\r\n            strokeLinecap=\"round\"\r\n        >\r\n\r\n            {/* Eye for showing password x=200 y=200 Toggle:close_eye */}\r\n            <path\r\n                d=\"M200,300 Q300,200 400,300 Q300,400 200,300\"\r\n                fill=\"none\"\r\n                strokeWidth=\"10\"\r\n            />\r\n            <circle\r\n                className={close_eye ? 'display-none' : ''}\r\n                cx=\"300\"\r\n                cy=\"300\"\r\n                r=\"30\"\r\n            />\r\n            <g className={close_eye ? '' : 'display-none'}>\r\n                <path d=\"M200,300 Q300,350 400,300\" fill=\"none\" strokeWidth=\"20\"/>\r\n                <line x1=\"210\" y1=\"210\" x2=\"390\" y2=\"390\" strokeWidth=\"30\"/>\r\n            </g>\r\n\r\n        </svg>\r\n    );\r\n};\r\n\r\n\r\nexport default IconsEye;\r\n","import axiosClientNoToken from '../_axios/AxiosNoToken';\r\n//\r\nimport { API_FakeReal, csrftoken } from '../../_ConstAPI';\r\nimport { default_login } from '../../../pages/login_form/_default/DefaultLogin';\r\n\r\n// registration\r\nexport const SignupRequest = (data) =>\r\n    API_FakeReal(\r\n        default_login,\r\n        () => axiosClientNoToken({\r\n            method: 'POST',\r\n            data: data,\r\n            url: '/registration/sign-up/',\r\n        })\r\n    );\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport './ButtonRipple.scss';\r\n\r\n//\r\nButtonRipple.propTypes = {\r\n    type: PropTypes.string,\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    ripple_type: PropTypes.string,\r\n\r\n    children: PropTypes.any,\r\n    onClick: PropTypes.func,\r\n};\r\n\r\nButtonRipple.defaultProps = {\r\n    title: '',\r\n    type: 'text',\r\n    ripple_type: 'right',\r\n    disabled: false,\r\n};\r\n\r\n/**\r\n * ripple_type is one of ['right', 'left', 'center']\r\n */\r\nfunction ButtonRipple({\r\n    children,\r\n    onClick,\r\n    type,\r\n    disabled,\r\n    ripple_type,\r\n    title,\r\n}) {\r\n    //\r\n    return (\r\n        <button\r\n            className={`ButtonRipple label-field ${\r\n                disabled ? 'opacity-5 pointer-events-none' : 'cursor-pointer'\r\n            }`}\r\n            type={type}\r\n            title={title}\r\n            disabled={disabled}\r\n            onClick={onClick}\r\n        >\r\n            <div\r\n                className={`ButtonRipple_common ButtonRipple_${ripple_type} ${\r\n                    disabled ? 'display-none' : ''\r\n                }`}\r\n            />\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default ButtonRipple;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport IconsEye from '../../../_icons_svg/icons_eye/IconsEye';\r\nimport IconsAction from '../../../_icons_svg/icons_action/IconsAction';\r\nimport IconDiv from '../../some_div/icon_div/IconDiv';\r\nimport './InputPassword.scss';\r\n\r\n// class\r\nfunction InputPassword(props) {\r\n    // state\r\n    const [type_password, setType] = useState(true)\r\n\r\n    // change type\r\n    const ChangeTypePassword = () => {\r\n        setType(!type_password)\r\n    };\r\n\r\n    const { field, form, label, placeholder, max_length, help} = props;\r\n    const { name } = field;\r\n    const { touched, errors } = form;\r\n    const showError = touched[name] && errors[name];\r\n\r\n    return (           \r\n        <div>\r\n\r\n            {/* label */}\r\n            <div>\r\n                <label className=\"label-field\" htmlFor={name}>\r\n                    {label}\r\n                </label>\r\n            </div>\r\n\r\n            {/* input */}\r\n            <div className=\"InputPassword_password\">\r\n                <input\r\n                     className={`InputPassword_input brs-5px ${touched[name] && !errors[name] ? 'InputPassword_valid' : ''} ${touched[name] && !!errors[name] ? 'InputPassword_invalid' : ''}`}\r\n                    {...field}\r\n                    maxLength={max_length}\r\n                    placeholder={placeholder}\r\n                    type={type_password ? 'password' : 'text'}\r\n                />\r\n\r\n                {/* eye */}\r\n                <div className=\"InputPassword__eye\">\r\n                    <div onClick={ChangeTypePassword}>\r\n                        <IconsEye x={200} y ={200} close_eye={type_password} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* help text */}\r\n            {help && \r\n                <div className=\"help-text\">\r\n                    <IconDiv Icon={IconsAction} x={600}>\r\n\t\t\t\t\t\t* {help}\r\n\t\t\t\t\t</IconDiv>\r\n                </div>\r\n            }\r\n\r\n            {/* error */}\r\n\t\t\t{showError && \r\n\t\t\t\t<div className=\"error-field\">\r\n\t\t\t\t\t<IconDiv Icon={IconsAction} x={400} y={400}>\r\n\t\t\t\t\t\t{errors[name]}\r\n\t\t\t\t\t</IconDiv>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\r\n        </div>                \r\n    );\r\n}\r\n\r\n\r\nInputPassword.propTypes = {\r\n    field: PropTypes.object,\r\n    form: PropTypes.object,\r\n    label: PropTypes.string,\r\n    max_length: PropTypes.number,\r\n    placeholder: PropTypes.string,\r\n};\r\n\r\nInputPassword.defaultProps = {\r\n    max_length: 15,\r\n};\r\n\r\nexport default InputPassword;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n//\nimport IconDiv from '../../some_div/icon_div/IconDiv';\nimport IconsAction from '../../../_icons_svg/icons_action/IconsAction';\n//\nimport TextareaNotSend from '../textarea/TextareaNotSend';\n//\nimport './InputText.scss';\nimport { makeAutoHeight } from '../../../_some_function/makeAutoHeight';\n\n//\nInputText.propTypes = {\n    // formik\n    field: PropTypes.object,\n    form: PropTypes.object,\n    //\n    is_textarea: PropTypes.bool,\n    type: PropTypes.string,\n    label: PropTypes.string,\n    placeholder: PropTypes.string,\n    dataList: PropTypes.array,\n    help: PropTypes.string,\n    max_length: PropTypes.number,\n};\n\nInputText.defaultProps = {\n    is_textarea: false,\n    dataList: [],\n    type: 'text',\n};\n\n//\nfunction InputText({\n    field,\n    form,\n\n    is_textarea,\n    type,\n    label,\n    placeholder,\n    dataList,\n    help,\n    max_length,\n}) {\n    //\n    const { name, onChange } = field;\n    const { touched, errors } = form;\n    const showError = touched[name] && errors[name];\n    const dataListId = `list_${name}_${label}`;\n\n    //\n    function handleChange(e) {\n        onChange(e);\n        makeAutoHeight(e);\n    }\n\n    //\n    return (\n        <div className=\"InputText\">\n            <div>\n                <label className=\"label-field\">{label}</label>\n            </div>\n\n            <div>\n                {is_textarea ? (\n                    <textarea\n                        className={`InputText_input InputText_textarea scroll-thin brs-5px ${\n                            touched[name] && !errors[name]\n                                ? 'InputText_valid'\n                                : ''\n                        } ${\n                            touched[name] && !!errors[name]\n                                ? 'InputText_invalid'\n                                : ''\n                        }`}\n                        {...field}\n                        onChange={handleChange}\n                        placeholder={placeholder}\n                        type={type}\n                        maxLength={max_length}\n                    />\n                ) : (\n                    <input\n                        className={`InputText_input brs-5px ${\n                            touched[name] && !errors[name]\n                                ? 'InputText_valid'\n                                : ''\n                        } ${\n                            touched[name] && !!errors[name]\n                                ? 'InputText_invalid'\n                                : ''\n                        }`}\n                        {...field}\n                        placeholder={placeholder}\n                        type={type}\n                        list={dataListId}\n                        maxLength={max_length}\n                    />\n                )}\n            </div>\n\n            <datalist id={dataListId}>\n                {dataList.map((item, index) => (\n                    <option key={`InputText_${index}`}>{item}</option>\n                ))}\n            </datalist>\n\n            {help && (\n                <div className=\"help-text\">\n                    <IconDiv Icon={IconsAction} x={600}>\n                        * {help}\n                    </IconDiv>\n                </div>\n            )}\n\n            {showError && (\n                <div className=\"error-field\">\n                    <IconDiv Icon={IconsAction} x={400} y={400}>\n                        {errors[name]}\n                    </IconDiv>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default InputText;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './BlurFetchingDiv.scss';\r\n\r\n//\r\nfunction BlurFetchingDiv(props) {\r\n    const {is_fetching, FetchingComponent} = props;\r\n\r\n    return (\r\n        <div className={is_fetching ? 'BlurFetchingDiv' : 'display-none'}>\r\n            <div className=\"BlurFetchingDiv_screen screen-blur\">\r\n                <div className=\"BlurFetchingDiv_fetching\">\r\n                    <FetchingComponent is_fetching={is_fetching}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nBlurFetchingDiv.propTypes = {\r\n    FetchingComponent: PropTypes.func,\r\n    is_fetching: PropTypes.bool,\r\n};\r\n\r\nexport default BlurFetchingDiv;","import * as Yup from 'yup';\r\n\r\n// const\r\nexport const initialValues = {\r\n    username: '',\r\n    password: '',\r\n    password_confirm: '',\r\n    email: '',\r\n    first_name: '',\r\n    last_name: ''\r\n}\r\n\r\nexport const validationSchema = Yup.object().shape({\r\n    username: Yup.string().matches(/^[a-zA-Z0-9]{5,15}$/, 'Username is invalid').required(),\r\n    password: Yup.string().matches(/^[a-zA-Z0-9]{5,15}$/&&/[A-Z]/, 'Password is invalid').required(),\r\n    password_confirm: Yup.string().oneOf([Yup.ref('password'), null], 'Password is not right').required(),\r\n    email: Yup.string().email('Invalid email').matches(/^\\S{3,10}@[a-z]mail\\.com$/, 'Invalid email').required(),\r\n    first_name: Yup.string().matches(/^[a-zA-Z]{1}[a-zA-Z ]{1,20}$/, 'First name is invalid').required().trim('First name is invalid'),\r\n    last_name: Yup.string().matches(/^[a-zA-Z]{1}[a-zA-Z ]{1,14}$/, 'Last name is invalid').required().trim('First name is invalid'),\r\n})\r\n\r\n// \r\nexport const fields = [\r\n    {\r\n        name: 'username',\r\n        type: 'text',\r\n        label: 'Username',\r\n        help: '5-15 letters and no space',\r\n        max_length: 15,\r\n    },\r\n    {\r\n        name: 'password',\r\n        type: 'password',\r\n        label: 'Password',\r\n        help: '5-15 letters, no space and at least 1 uppercase letter',\r\n        max_length: 15,\r\n    },\r\n    {\r\n        name: 'password_confirm',\r\n        type: 'password',\r\n        label: 'Password confirm',\r\n        help: 'Confirm your password',\r\n        max_length: 15,\r\n    },\r\n    {\r\n        name: 'email',\r\n        type: 'email',\r\n        label: 'Email',\r\n        help: '***@*mail.com',\r\n    },\r\n    {\r\n        name: 'first_name',\r\n        type: 'text',\r\n        label: 'First name',\r\n        help: '1-20 letters, spaces and start with a letter',\r\n        max_length: 20,\r\n    },\r\n    {\r\n        name: 'last_name',\r\n        type: 'text',\r\n        label: 'Last name',\r\n        help: '1-15 letters, spaces and start with a letter',\r\n        max_length: 15,\r\n    },\r\n]","import React, { useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Formik, Form, FastField } from 'formik';\r\n//\r\nimport { SignupRequest } from '../../../api/api_django_no_token/signup/Signup';\r\nimport makeFormData from '../../../_some_function/makeFormData';\r\n//\r\nimport ButtonRipple from '../../../component/button/button_ripple/ButtonRipple';\r\nimport BlurFetchingDiv from '../../../component/some_div/fetching/BlurFetchingDiv';\r\nimport IconDiv from '../../../component/some_div/icon_div/IconDiv';\r\nimport IconsAction from '../../../_icons_svg/icons_action/IconsAction';\r\nimport FetchingDiv from '../../../component/some_div/fetching/FetchingDiv';\r\n//\r\nimport {\r\n    fields,\r\n    initialValues,\r\n    validationSchema,\r\n} from '../_default/DefaultResgitration';\r\nimport InputText from '../../../component/input/input_text/InputText';\r\nimport InputPassword from '../../../component/input/input_password/InputPassword';\r\n//\r\nimport './Registration.scss';\r\n\r\n//\r\nRegistration.propTypes = {};\r\n\r\n//\r\nfunction Registration(props) {\r\n    //\r\n    const [submitting, setSubmitting] = useState(false);\r\n    const [username_existed, setUserExisted] = useState(false);\r\n    const [email_existed, setEmailExisted] = useState(false);\r\n\r\n    //\r\n    useEffect(() => {\r\n        document.title = 'Registration';\r\n    }, []);\r\n\r\n    // submit\r\n    async function onSubmit(values) {\r\n        const { username, password, first_name, last_name, email } = values;\r\n        window.scroll(0, 0);\r\n        setSubmitting(true);\r\n        // make form data\r\n        const formData = makeFormData({\r\n            username: username,\r\n            password: password,\r\n            email: email,\r\n            first_name: first_name,\r\n            last_name: last_name,\r\n        });\r\n        //\r\n        try {\r\n            const res = await SignupRequest(formData);\r\n            const data = res.data;\r\n            //\r\n            if (data == 'username_existed') {\r\n                setUserExisted(true);\r\n                setSubmitting(false);\r\n                //\r\n            } else if (data == 'email_existed') {\r\n                setEmailExisted(true);\r\n                setSubmitting(false);\r\n                //\r\n            } else {\r\n                sessionStorage.new_member = 1;\r\n                setDataUser({\r\n                    id: data.user_id,\r\n                    first_name: data.first_name,\r\n                    last_name: data.last_name,\r\n                    picture: data.picture,\r\n                });\r\n            }\r\n            //\r\n        } catch (e) {\r\n            console.log(e);\r\n            alert('Something was wrong');\r\n            setSubmitting(false);\r\n        }\r\n    }\r\n\r\n    // close more error\r\n    function closeMoreError() {\r\n        username_existed && setUserExisted(false);\r\n        email_existed && setEmailExisted(false);\r\n    }\r\n\r\n    // \r\n    if (localStorage.is_login == 1) {\r\n        return <Redirect to=\"/home\" />;\r\n    }\r\n    //\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, actions) => {\r\n                    // console.log(actions);\r\n                    onSubmit(values);\r\n                }}\r\n            >\r\n                {(props) => (\r\n                    <Form\r\n                        autoComplete=\"off\"\r\n                        className=\"Registration_form App_Form brs-5px App_box_shadow\"\r\n                        onClick={closeMoreError}\r\n                    >\r\n                        <div className=\"App_title\">Sign up</div>\r\n                        <hr className=\"App_hr-bg\" />\r\n\r\n                        {/* error */}\r\n                        <div\r\n                            className={`Registration_error text-red ${\r\n                                username_existed || email_existed\r\n                                    ? ''\r\n                                    : 'display-none'\r\n                            }`}\r\n                        >\r\n                            <IconDiv Icon={IconsAction} x={400} y={400}>\r\n                                {username_existed ? 'Username' : 'Email'} was existed\r\n                            </IconDiv>\r\n                        </div>\r\n\r\n                        {/* fields */}\r\n                        {fields.map((item, index) => (\r\n                            <div\r\n                                key={`Registration_${index}`}\r\n                                className=\"Registration_input\"\r\n                            >\r\n                                <FastField\r\n                                    name={item.name}\r\n                                    component={\r\n                                        item.name.startsWith('password')\r\n                                            ? InputPassword\r\n                                            : InputText\r\n                                    }\r\n                                    label={item.label}\r\n                                    placeholder={`${item.label}...`}\r\n                                    help={item.help}\r\n                                    max_length={item.max_length}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                        )\r\n                        \r\n                        <div className=\"App_submit display-flex-center\">\r\n                            <ButtonRipple\r\n                                type=\"submit\"\r\n                                title=\"Sign up\"\r\n                                disabled={submitting}\r\n                            >\r\n                                Sign up\r\n                            </ButtonRipple>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n\r\n            {/* fetching div */}\r\n            <BlurFetchingDiv\r\n                FetchingComponent={FetchingDiv}\r\n                is_fetching={submitting}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Registration;\r\n"],"sourceRoot":""}