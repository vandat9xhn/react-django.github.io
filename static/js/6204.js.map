{"version":3,"sources":["webpack://my_webpack/./src/_icons_svg/icons_eye/IconsEye.js","webpack://my_webpack/./src/api/api_django_no_token/signup/Signup.js","webpack://my_webpack/./src/component/button/button_ripple/ButtonRipple.js","webpack://my_webpack/./src/component/input/input_password/InputPassword.js","webpack://my_webpack/./src/component/input/input_text/InputText.js","webpack://my_webpack/./src/pages/registration/_default/DefaultResgitration.js","webpack://my_webpack/./src/pages/registration/_main/Registration.js","webpack://my_webpack/./src/redux/action/action_location.js"],"names":["IconsEye","props","size_icon","x","y","close_eye","className","height","width","viewBox","stroke","fill","strokeLinecap","d","strokeWidth","cx","cy","r","x1","y1","x2","y2","propTypes","PropTypes","string","color","number","bool","defaultProps","SignupRequest","data","API_FakeReal","default_login","method","url","ButtonRipple","children","onClick","type","disabled","ripple_type","title","any","func","InputPassword","field","form","label","placeholder","max_length","help","name","touched","errors","showError","useState","type_password","setType","maxLength","Icon","IconsAction","object","InputText","is_textarea","dataList","onChange","dataListId","e","makeAutoHeight","list","id","map","item","index","key","array","Yup","initialValues","username","password","password_confirm","email","first_name","last_name","validationSchema","shape","matches","required","oneOf","ref","trim","fields","Registration","values","window","scroll","formData","handleScreenFetching","FetchingDiv","res","setUserExisted","setEmailExisted","sessionStorage","new_member","setDataUser","picture","console","log","useContext","context_api","user","dispatch","useDispatch","username_existed","email_existed","useScreenFetching","closeMoreError","useEffect","document","actionLocation","Redirect","to","Formik","onSubmit","actions","Form","autoComplete","FastField","component","startsWith","is_register","payload"],"mappings":"0JAAA,I,IAAA,U,IACA,U,mDAwBA,SAASA,EAASC,GAAM,IACZC,EAA+BD,EAA/BC,UAAWC,EAAoBF,EAApBE,EAAGC,EAAiBH,EAAjBG,EAAGC,EAAcJ,EAAdI,UACzB,OACI,+BACIC,UAAU,WACVC,OAAQL,EACRM,MAAON,EACPO,QAAYN,EAAZ,IAAiBC,EAAjB,WACAM,OAAO,qBACPC,KAAK,qBACLC,cAAc,SAId,gCACIC,EAAE,6CACFF,KAAK,OACLG,YAAY,OAEhB,kCACIR,UAAWD,EAAY,eAAiB,GACxCU,GAAG,MACHC,GAAG,MACHC,EAAE,OAEN,6BAAGX,UAAWD,EAAY,GAAK,gBAC3B,gCAAMQ,EAAE,4BAA4BF,KAAK,OAAOG,YAAY,OAC5D,gCAAMI,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMC,GAAG,MAAMP,YAAY,SA9CtEd,EAASsB,UAAY,CACjBpB,UAAWqB,UAAUC,OACrBC,MAAOF,UAAUC,OACjBrB,EAAGoB,UAAUG,OACbtB,EAAGmB,UAAUG,OACbrB,UAAWkB,UAAUI,MAGzB3B,EAAS4B,aAAe,CACpBzB,EAAG,EACHC,EAAG,EACHF,UAAW,SACXG,WAAW,G,UA0CAL,G,qGC5Df,I,OAAA,W,2BAEA,WACA,UAG6B6B,gBAAA,SAACC,GAAD,OACzB,IAAAC,cACIC,iBACA,kBAAM,aAAmB,CACrBC,OAAQ,OACRH,KAAMA,EACNI,IAAK,gC,6ECZjB,I,IAAA,U,IACA,U,mDAyBA,SAASC,EAAT,GAOG,IANCC,EAMD,EANCA,SACAC,EAKD,EALCA,QACAC,EAID,EAJCA,KACAC,EAGD,EAHCA,SACAC,EAED,EAFCA,YACAC,EACD,EADCA,MAGA,OACI,kCACInC,UAAA,6BACIiC,EAAW,gCAAkC,kBAEjDD,KAAMA,EACNG,MAAOA,EACPF,SAAUA,EACVF,QAASA,GAET,+BACI/B,UAAA,oCAA+CkC,EAA/C,KACID,EAAW,eAAiB,MAGnCH,GA/Cb,SAGAD,EAAab,UAAY,CACrBgB,KAAMf,UAAUC,OAChBiB,MAAOlB,UAAUC,OACjBe,SAAUhB,UAAUI,KACpBa,YAAajB,UAAUC,OAEvBY,SAAUb,UAAUmB,IACpBL,QAASd,UAAUoB,MAGvBR,EAAaP,aAAe,CACxBa,MAAO,GACPH,KAAM,OACNE,YAAa,QACbD,UAAU,G,UAmCCJ,G,qPCvDf,W,WACA,U,IAEA,U,IACA,U,IAEA,U,mDAkBA,SAASS,EAAT,GAA8E,IAArDC,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,YAAaC,EAAoB,EAApBA,WAAYC,EAAQ,EAARA,KAE1DC,EAASN,EAATM,KACAC,EAAoBN,EAApBM,QAASC,EAAWP,EAAXO,OACXC,EAAYF,EAAQD,IAASE,EAAOF,GAJgC,E,2YAAA,EAOzC,IAAAI,WAAS,GAPgC,GAOnEC,EAPmE,KAOpDC,EAPoD,KAe1E,OACI,mCACI,mCACI,iCAAOnD,UAAU,eAAeyC,IAGpC,+BAAKzC,UAAU,uCACX,mCACIA,UAAA,qDACI8C,EAAQD,KAAUE,EAAOF,GACnB,sBACA,IAHV,KAKIC,EAAQD,IAAWE,EAAOF,GACpB,wBACA,KAENN,EAVR,CAWIa,UAAWT,EACXD,YAAaA,EACbV,KAAMkB,EAAgB,WAAa,UAGvC,+BAAKlD,UAAU,sBACX,+BAAK+B,QA7BM,WACvBoB,GAASD,KA6BO,wBAAC,UAAD,CAAUrD,EAAG,IAAKC,EAAG,IAAKC,UAAWmD,OAKhDN,GACG,+BAAK5C,UAAU,aACX,wBAAC,UAAD,CAASqD,KAAMC,UAAazD,EAAG,KAA/B,KACO+C,IAKdI,GACG,+BAAKhD,UAAU,eACX,wBAAC,UAAD,CAASqD,KAAMC,UAAazD,EAAG,IAAKC,EAAG,KAClCiD,EAAOF,MAxEhC,SAGAP,EAActB,UAAY,CACtBuB,MAAOtB,UAAUsC,OACjBf,KAAMvB,UAAUsC,OAChBd,MAAOxB,UAAUC,OACjByB,WAAY1B,UAAUG,OACtBsB,YAAazB,UAAUC,QAG3BoB,EAAchB,aAAe,CACzBqB,WAAY,I,UAoEDL,G,0PCxFf,U,IACA,U,IAEA,U,IACA,U,EAEA,UAEA,SACA,e,mDAwBA,SAASkB,EAAT,GAWG,IAVCjB,EAUD,EAVCA,MACAC,EASD,EATCA,KAEAiB,EAOD,EAPCA,YACAzB,EAMD,EANCA,KACAS,EAKD,EALCA,MACAC,EAID,EAJCA,YACAgB,EAGD,EAHCA,SACAd,EAED,EAFCA,KACAD,EACD,EADCA,WAGQE,EAAmBN,EAAnBM,KAAMc,EAAapB,EAAboB,SACNb,EAAoBN,EAApBM,QAASC,EAAWP,EAAXO,OACXC,EAAYF,EAAQD,IAASE,EAAOF,GACpCe,EAAa,QAAQf,EAArB,IAA6BJ,EASnC,OACI,+BAAKzC,UAAU,aACX,mCACI,iCAAOA,UAAU,eAAeyC,IAGpC,mCACKgB,EACG,sCACIzD,UAAA,2DACI8C,EAAQD,KAAUE,EAAOF,GACnB,kBACA,IAHV,KAKIC,EAAQD,IAAWE,EAAOF,GACpB,oBACA,KAENN,EAVR,CAWIoB,SAzBpB,SAAsBE,GAClBF,EAASE,IACT,IAAAC,gBAAeD,IAwBCnB,YAAaA,EACbV,KAAMA,EACNoB,UAAWT,KAGf,mCACI3C,UAAA,4BACI8C,EAAQD,KAAUE,EAAOF,GACnB,kBACA,IAHV,KAKIC,EAAQD,IAAWE,EAAOF,GACpB,oBACA,KAENN,EAVR,CAWIG,YAAaA,EACbV,KAAMA,EACN+B,KAAMH,EACNR,UAAWT,MAKvB,oCAAUqB,GAAIJ,GACTF,EAASO,KAAI,SAACC,EAAMC,GAAP,OACV,kCAAQC,IAAA,aAAkBD,GAAUD,OAI3CtB,GACG,+BAAK5C,UAAU,aACX,wBAAC,UAAD,CAASqD,KAAMC,UAAazD,EAAG,KAA/B,KACO+C,IAKdI,GACG,+BAAKhD,UAAU,eACX,wBAAC,UAAD,CAASqD,KAAMC,UAAazD,EAAG,IAAKC,EAAG,KAClCiD,EAAOF,MA3GhCW,EAAUxC,UAAY,CAElBuB,MAAOtB,UAAUsC,OACjBf,KAAMvB,UAAUsC,OAEhBE,YAAaxC,UAAUI,KACvBW,KAAMf,UAAUC,OAChBuB,MAAOxB,UAAUC,OACjBwB,YAAazB,UAAUC,OACvBwC,SAAUzC,UAAUoD,MACpBzB,KAAM3B,UAAUC,OAChByB,WAAY1B,UAAUG,QAG1BoC,EAAUlC,aAAe,CACrBmC,aAAa,EACbC,SAAU,GACV1B,KAAM,Q,UAkGKwB,G,iIC/Hf,IAAYc,E,wJAAZ,UAG6BC,gBAAA,CACzBC,SAAU,GACVC,SAAU,GACVC,iBAAkB,GAClBC,MAAO,GACPC,WAAY,GACZC,UAAW,IAGiBC,mBAAAR,EAAIf,SAASwB,MAAM,CAC/CP,SAAUF,EAAIpD,SAAS8D,QAAQ,sBAAuB,uBAAuBC,WAC7ER,SAAUH,EAAIpD,SAAS8D,QAA+B,QAAS,uBAAuBC,WACtFP,iBAAkBJ,EAAIpD,SAASgE,MAAM,CAACZ,EAAIa,IAAI,YAAa,MAAO,yBAAyBF,WAC3FN,MAAOL,EAAIpD,SAASyD,MAAM,iBAAiBK,QAAQ,4BAA6B,iBAAiBC,WACjGL,WAAYN,EAAIpD,SAAS8D,QAAQ,+BAAgC,yBAAyBC,WAAWG,KAAK,yBAC1GP,UAAWP,EAAIpD,SAAS8D,QAAQ,+BAAgC,wBAAwBC,WAAWG,KAAK,2BAItFC,SAAA,CAClB,CACIxC,KAAM,WACNb,KAAM,OACNS,MAAO,WACPG,KAAM,4BACND,WAAY,IAEhB,CACIE,KAAM,WACNb,KAAM,WACNS,MAAO,WACPG,KAAM,yDACND,WAAY,IAEhB,CACIE,KAAM,mBACNb,KAAM,WACNS,MAAO,mBACPG,KAAM,wBACND,WAAY,IAEhB,CACIE,KAAM,QACNb,KAAM,QACNS,MAAO,QACPG,KAAM,iBAEV,CACIC,KAAM,aACNb,KAAM,OACNS,MAAO,aACPG,KAAM,+CACND,WAAY,IAEhB,CACIE,KAAM,YACNb,KAAM,OACNS,MAAO,YACPG,KAAM,+CACND,WAAY,M,+dC9DpB,W,OACA,WACA,WACA,WAGA,G,EAFA,UAEA,UAEA,W,IAEA,U,IAEA,U,IAEA,S,IACA,U,IACA,U,IACA,U,IACA,SAEA,WAMA,QACA,eACA,W,mDAMA,SAAS2C,EAAa3F,GAAO,I,EAAA,K,EAAA,yBA0BzB,WAAwB4F,GAAxB,2GACIC,OAAOC,OAAO,EAAG,GAETjB,EAAqDe,EAArDf,SAAUC,EAA2Cc,EAA3Cd,SAAUG,EAAiCW,EAAjCX,WAAYC,EAAqBU,EAArBV,UAAWF,EAAUY,EAAVZ,MAE7Ce,GAAW,aAAa,CAC1BlB,SAAUA,EACVC,SAAUA,EACVE,MAAOA,EACPC,WAAYA,EACZC,UAAWA,IAVnB,kBAc0Bc,GACd,kBAAM,IAAApE,eAAcmE,KACpBE,WAhBZ,OAccC,EAdd,OAoBoB,qBAFNrE,EAAOqE,EAAIrE,MAGbsE,GAAe,GACA,iBAARtE,EACPuE,GAAgB,IAEhBC,eAAeC,WAAa,EAE5BC,EAAY,CACRlC,GAAIxC,EAAKwC,GACTY,WAAYpD,EAAKoD,WACjBC,UAAWrD,EAAKqD,UAChBsB,QAAS3E,EAAK2E,WA/B9B,kDAmCQC,QAAQC,IAAR,MAnCR,yDA1ByB,E,4QAAA,gDAEK,IAAAC,YAAWC,eAAjCC,EAFiB,EAEjBA,KAAMN,EAFW,EAEXA,YAGRO,GAAW,IAAAC,eALQ,GAQkB,IAAAzD,WAAS,GAR3B,SAQlB0D,EARkB,KAQAb,EARA,QASgB,IAAA7C,WAAS,GATzB,SASlB2D,EATkB,KASHb,EATG,KAYnBJ,GAAuB,IAAAkB,qBAsD7B,SAASC,IACLH,GAAoBb,GAAe,GACnCc,GAAiBb,GAAgB,GAGrC,OAxDA,IAAAgB,YAAU,WAKN,OAJAC,SAAS7E,MAAQ,eAEjBsE,GAAS,IAAAQ,iBAAe,IAEjB,WACHR,GAAS,IAAAQ,iBAAe,OAE7B,IAgDCT,EAAKxC,GACE,wBAAC,EAAAkD,SAAD,CAAUC,GAAG,UAKpB,mCACI,wBAAC,EAAAC,OAAD,CACI7C,cAAeA,gBACfO,iBAAkBA,mBAClBuC,SAAU,SAAC9B,EAAQ+B,GACfD,EAAS9B,MAGZ,SAAC5F,GAAD,OACG,wBAAC,EAAA4H,KAAD,CACIC,aAAa,MACbxH,UAAU,oDACV+B,QAAS+E,GAET,8BAAI9G,UAAU,sBAAd,WAAgD,IAChD,8BAAIA,UAAU,cACd,+BACIA,UAAA,gCACI2G,GAAoBC,EACd,GACA,iBAGV,wBAAC,UAAD,CAASvD,KAAMC,UAAazD,EAAG,IAAKC,EAAG,KAClC6G,EAAmB,WAAa,QADrC,iBAKHtB,SAAOpB,KAAI,SAACC,EAAMC,GAAP,OACR,+BACIC,IAAA,gBAAqBD,EACrBnE,UAAU,sBAEV,wBAAC,EAAAyH,UAAD,CACI5E,KAAMqB,EAAKrB,KACX6E,UACIxD,EAAKrB,KAAK8E,WAAW,YACfrF,UACAkB,UAEVf,MAAOyB,EAAKzB,MACZC,YAAgBwB,EAAKzB,MAArB,MACAG,KAAMsB,EAAKtB,KACXD,WAAYuB,EAAKvB,iBAI7B,+BAAK3C,UAAU,kCACX,wBAAC,UAAD,CAAcgC,KAAK,UAAnB,iBAhI5BsD,EAAatE,UAAY,G,UAyIVsE,G,4ECrKe2B,iBAAA,WAAyB,IAAxBW,EAAwB,wDACnD,MAAO,CACH5F,KAAM,WACN6F,QAASD,K","file":"static/js/6204.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// import './IconsEye.scss';\r\n\r\n//\r\nIconsEye.propTypes = {\r\n    size_icon: PropTypes.string,\r\n    color: PropTypes.string,\r\n    x: PropTypes.number,\r\n    y: PropTypes.number,\r\n    close_eye: PropTypes.bool,\r\n};\r\n\r\nIconsEye.defaultProps = {\r\n    x: 0,\r\n    y: 0,\r\n    size_icon: '1.5rem',\r\n    close_eye: true,\r\n};\r\n\r\n/**\r\n    IconsEye: (x, y)\r\n        1. Eye show password: (200, 200)\r\n*/\r\nfunction IconsEye(props){\r\n    const { size_icon, x, y, close_eye } = props;\r\n    return (\r\n        <svg\r\n            className=\"IconsEye\"\r\n            height={size_icon}\r\n            width={size_icon}\r\n            viewBox={`${x} ${y} 200 200`}\r\n            stroke=\"var(--black-brown)\"\r\n            fill=\"var(--black-brown)\"\r\n            strokeLinecap=\"round\"\r\n        >\r\n\r\n            {/* Eye for showing password x=200 y=200 Toggle:close_eye */}\r\n            <path\r\n                d=\"M200,300 Q300,200 400,300 Q300,400 200,300\"\r\n                fill=\"none\"\r\n                strokeWidth=\"10\"\r\n            />\r\n            <circle\r\n                className={close_eye ? 'display-none' : ''}\r\n                cx=\"300\"\r\n                cy=\"300\"\r\n                r=\"30\"\r\n            />\r\n            <g className={close_eye ? '' : 'display-none'}>\r\n                <path d=\"M200,300 Q300,350 400,300\" fill=\"none\" strokeWidth=\"20\"/>\r\n                <line x1=\"210\" y1=\"210\" x2=\"390\" y2=\"390\" strokeWidth=\"30\"/>\r\n            </g>\r\n\r\n        </svg>\r\n    );\r\n};\r\n\r\n\r\nexport default IconsEye;\r\n","import axiosClientNoToken from '../_axios/AxiosNoToken';\r\n//\r\nimport { API_FakeReal, csrftoken } from '../../_ConstAPI';\r\nimport { default_login } from '../../../pages/login_form/_default/DefaultLogin';\r\n\r\n// registration\r\nexport const SignupRequest = (data) =>\r\n    API_FakeReal(\r\n        default_login,\r\n        () => axiosClientNoToken({\r\n            method: 'POST',\r\n            data: data,\r\n            url: '/registration/sign-up/',\r\n        })\r\n    );\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport './ButtonRipple.scss';\r\n\r\n//\r\nButtonRipple.propTypes = {\r\n    type: PropTypes.string,\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    ripple_type: PropTypes.string,\r\n\r\n    children: PropTypes.any,\r\n    onClick: PropTypes.func,\r\n};\r\n\r\nButtonRipple.defaultProps = {\r\n    title: '',\r\n    type: 'text',\r\n    ripple_type: 'right',\r\n    disabled: false,\r\n};\r\n\r\n/**\r\n * ripple_type is one of ['right', 'left', 'center']\r\n */\r\nfunction ButtonRipple({\r\n    children,\r\n    onClick,\r\n    type,\r\n    disabled,\r\n    ripple_type,\r\n    title,\r\n}) {\r\n    //\r\n    return (\r\n        <button\r\n            className={`ButtonRipple label-field ${\r\n                disabled ? 'opacity-5 pointer-events-none' : 'cursor-pointer'\r\n            }`}\r\n            type={type}\r\n            title={title}\r\n            disabled={disabled}\r\n            onClick={onClick}\r\n        >\r\n            <div\r\n                className={`ButtonRipple_common ButtonRipple_${ripple_type} ${\r\n                    disabled ? 'display-none' : ''\r\n                }`}\r\n            />\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default ButtonRipple;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport IconsEye from '../../../_icons_svg/icons_eye/IconsEye';\r\nimport IconsAction from '../../../_icons_svg/icons_action/IconsAction';\r\n//\r\nimport IconDiv from '../../some_div/icon_div/IconDiv';\r\n//\r\nimport './InputPassword.scss';\r\n\r\n//\r\nInputPassword.propTypes = {\r\n    field: PropTypes.object,\r\n    form: PropTypes.object,\r\n    label: PropTypes.string,\r\n    max_length: PropTypes.number,\r\n    placeholder: PropTypes.string,\r\n};\r\n\r\nInputPassword.defaultProps = {\r\n    max_length: 15,\r\n};\r\n\r\n//\r\nfunction InputPassword({ field, form, label, placeholder, max_length, help }) {\r\n    //\r\n    const { name } = field;\r\n    const { touched, errors } = form;\r\n    const showError = touched[name] && errors[name];\r\n\r\n    //\r\n    const [type_password, setType] = useState(true);\r\n\r\n    //\r\n    const ChangeTypePassword = () => {\r\n        setType(!type_password);\r\n    };\r\n\r\n    //\r\n    return (\r\n        <div>\r\n            <div>\r\n                <label className=\"label-field\">{label}</label>\r\n            </div>\r\n\r\n            <div className=\"InputPassword_password position-rel\">\r\n                <input\r\n                    className={`InputPassword_input w-100per padding-8px brs-5px ${\r\n                        touched[name] && !errors[name]\r\n                            ? 'InputPassword_valid'\r\n                            : ''\r\n                    } ${\r\n                        touched[name] && !!errors[name]\r\n                            ? 'InputPassword_invalid'\r\n                            : ''\r\n                    }`}\r\n                    {...field}\r\n                    maxLength={max_length}\r\n                    placeholder={placeholder}\r\n                    type={type_password ? 'password' : 'text'}\r\n                />\r\n\r\n                <div className=\"InputPassword__eye\">\r\n                    <div onClick={ChangeTypePassword}>\r\n                        <IconsEye x={200} y={200} close_eye={type_password} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {help && (\r\n                <div className=\"help-text\">\r\n                    <IconDiv Icon={IconsAction} x={600}>\r\n                        * {help}\r\n                    </IconDiv>\r\n                </div>\r\n            )}\r\n\r\n            {showError && (\r\n                <div className=\"error-field\">\r\n                    <IconDiv Icon={IconsAction} x={400} y={400}>\r\n                        {errors[name]}\r\n                    </IconDiv>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputPassword;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n//\nimport IconDiv from '../../some_div/icon_div/IconDiv';\nimport IconsAction from '../../../_icons_svg/icons_action/IconsAction';\n//\nimport TextareaNotSend from '../textarea/TextareaNotSend';\n//\nimport './InputText.scss';\nimport { makeAutoHeight } from '../../../_some_function/makeAutoHeight';\n\n//\nInputText.propTypes = {\n    // formik\n    field: PropTypes.object,\n    form: PropTypes.object,\n    //\n    is_textarea: PropTypes.bool,\n    type: PropTypes.string,\n    label: PropTypes.string,\n    placeholder: PropTypes.string,\n    dataList: PropTypes.array,\n    help: PropTypes.string,\n    max_length: PropTypes.number,\n};\n\nInputText.defaultProps = {\n    is_textarea: false,\n    dataList: [],\n    type: 'text',\n};\n\n//\nfunction InputText({\n    field,\n    form,\n\n    is_textarea,\n    type,\n    label,\n    placeholder,\n    dataList,\n    help,\n    max_length,\n}) {\n    //\n    const { name, onChange } = field;\n    const { touched, errors } = form;\n    const showError = touched[name] && errors[name];\n    const dataListId = `list_${name}_${label}`;\n\n    //\n    function handleChange(e) {\n        onChange(e);\n        makeAutoHeight(e);\n    }\n\n    //\n    return (\n        <div className=\"InputText\">\n            <div>\n                <label className=\"label-field\">{label}</label>\n            </div>\n\n            <div>\n                {is_textarea ? (\n                    <textarea\n                        className={`InputText_input InputText_textarea scroll-thin brs-5px ${\n                            touched[name] && !errors[name]\n                                ? 'InputText_valid'\n                                : ''\n                        } ${\n                            touched[name] && !!errors[name]\n                                ? 'InputText_invalid'\n                                : ''\n                        }`}\n                        {...field}\n                        onChange={handleChange}\n                        placeholder={placeholder}\n                        type={type}\n                        maxLength={max_length}\n                    />\n                ) : (\n                    <input\n                        className={`InputText_input brs-5px ${\n                            touched[name] && !errors[name]\n                                ? 'InputText_valid'\n                                : ''\n                        } ${\n                            touched[name] && !!errors[name]\n                                ? 'InputText_invalid'\n                                : ''\n                        }`}\n                        {...field}\n                        placeholder={placeholder}\n                        type={type}\n                        list={dataListId}\n                        maxLength={max_length}\n                    />\n                )}\n            </div>\n\n            <datalist id={dataListId}>\n                {dataList.map((item, index) => (\n                    <option key={`InputText_${index}`}>{item}</option>\n                ))}\n            </datalist>\n\n            {help && (\n                <div className=\"help-text\">\n                    <IconDiv Icon={IconsAction} x={600}>\n                        * {help}\n                    </IconDiv>\n                </div>\n            )}\n\n            {showError && (\n                <div className=\"error-field\">\n                    <IconDiv Icon={IconsAction} x={400} y={400}>\n                        {errors[name]}\n                    </IconDiv>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default InputText;\n","import * as Yup from 'yup';\r\n\r\n// const\r\nexport const initialValues = {\r\n    username: '',\r\n    password: '',\r\n    password_confirm: '',\r\n    email: '',\r\n    first_name: '',\r\n    last_name: ''\r\n}\r\n\r\nexport const validationSchema = Yup.object().shape({\r\n    username: Yup.string().matches(/^[a-zA-Z0-9]{5,15}$/, 'Username is invalid').required(),\r\n    password: Yup.string().matches(/^[a-zA-Z0-9]{5,15}$/&&/[A-Z]/, 'Password is invalid').required(),\r\n    password_confirm: Yup.string().oneOf([Yup.ref('password'), null], 'Password is not right').required(),\r\n    email: Yup.string().email('Invalid email').matches(/^\\S{3,10}@[a-z]mail\\.com$/, 'Invalid email').required(),\r\n    first_name: Yup.string().matches(/^[a-zA-Z]{1}[a-zA-Z ]{1,20}$/, 'First name is invalid').required().trim('First name is invalid'),\r\n    last_name: Yup.string().matches(/^[a-zA-Z]{1}[a-zA-Z ]{1,14}$/, 'Last name is invalid').required().trim('First name is invalid'),\r\n})\r\n\r\n// \r\nexport const fields = [\r\n    {\r\n        name: 'username',\r\n        type: 'text',\r\n        label: 'Username',\r\n        help: '5-15 letters and no space',\r\n        max_length: 15,\r\n    },\r\n    {\r\n        name: 'password',\r\n        type: 'password',\r\n        label: 'Password',\r\n        help: '5-15 letters, no space and at least 1 uppercase letter',\r\n        max_length: 15,\r\n    },\r\n    {\r\n        name: 'password_confirm',\r\n        type: 'password',\r\n        label: 'Password confirm',\r\n        help: 'Confirm your password',\r\n        max_length: 15,\r\n    },\r\n    {\r\n        name: 'email',\r\n        type: 'email',\r\n        label: 'Email',\r\n        help: '***@*mail.com',\r\n    },\r\n    {\r\n        name: 'first_name',\r\n        type: 'text',\r\n        label: 'First name',\r\n        help: '1-20 letters, spaces and start with a letter',\r\n        max_length: 20,\r\n    },\r\n    {\r\n        name: 'last_name',\r\n        type: 'text',\r\n        label: 'Last name',\r\n        help: '1-15 letters, spaces and start with a letter',\r\n        max_length: 15,\r\n    },\r\n]","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Formik, Form, FastField } from 'formik';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { context_api } from '../../../_context/ContextAPI';\r\n//\r\nimport { SignupRequest } from '../../../api/api_django_no_token/signup/Signup';\r\n//\r\nimport makeFormData from '../../../_some_function/makeFormData';\r\n//\r\nimport IconsAction from '../../../_icons_svg/icons_action/IconsAction';\r\n//\r\nimport ButtonRipple from '../../../component/button/button_ripple/ButtonRipple';\r\nimport IconDiv from '../../../component/some_div/icon_div/IconDiv';\r\nimport FetchingDiv from '../../../component/some_div/fetching/FetchingDiv';\r\nimport InputText from '../../../component/input/input_text/InputText';\r\nimport InputPassword from '../../../component/input/input_password/InputPassword';\r\n//\r\nimport {\r\n    fields,\r\n    initialValues,\r\n    validationSchema,\r\n} from '../_default/DefaultResgitration';\r\n//\r\nimport './Registration.scss';\r\nimport { useScreenFetching } from '../../../_custom_hooks/UseScreenFetching';\r\nimport { actionLocation } from '../../../redux/action/action_location';\r\n\r\n//\r\nRegistration.propTypes = {};\r\n\r\n//\r\nfunction Registration(props) {\r\n    //\r\n    const { user, setDataUser } = useContext(context_api);\r\n\r\n    //\r\n    const dispatch = useDispatch();\r\n\r\n    //\r\n    const [username_existed, setUserExisted] = useState(false);\r\n    const [email_existed, setEmailExisted] = useState(false);\r\n\r\n    //\r\n    const handleScreenFetching = useScreenFetching();\r\n\r\n    //\r\n    useEffect(() => {\r\n        document.title = 'Registration';\r\n\r\n        dispatch(actionLocation(true));\r\n\r\n        return () => {\r\n            dispatch(actionLocation(false));\r\n        };\r\n    }, []);\r\n\r\n    //\r\n    async function onSubmit(values) {\r\n        window.scroll(0, 0);\r\n\r\n        const { username, password, first_name, last_name, email } = values;\r\n\r\n        const formData = makeFormData({\r\n            username: username,\r\n            password: password,\r\n            email: email,\r\n            first_name: first_name,\r\n            last_name: last_name,\r\n        });\r\n\r\n        try {\r\n            const res = await handleScreenFetching(\r\n                () => SignupRequest(formData),\r\n                FetchingDiv\r\n            );\r\n            const data = res.data;\r\n\r\n            if (data == 'username_existed') {\r\n                setUserExisted(true);\r\n            } else if (data == 'email_existed') {\r\n                setEmailExisted(true);\r\n            } else {\r\n                sessionStorage.new_member = 1;\r\n\r\n                setDataUser({\r\n                    id: data.id,\r\n                    first_name: data.first_name,\r\n                    last_name: data.last_name,\r\n                    picture: data.picture,\r\n                });\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    //\r\n    function closeMoreError() {\r\n        username_existed && setUserExisted(false);\r\n        email_existed && setEmailExisted(false);\r\n    }\r\n\r\n    if (user.id) {\r\n        return <Redirect to=\"/home\" />;\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, actions) => {\r\n                    onSubmit(values);\r\n                }}\r\n            >\r\n                {(props) => (\r\n                    <Form\r\n                        autoComplete=\"off\"\r\n                        className=\"Registration_form App_Form brs-5px App_box_shadow\"\r\n                        onClick={closeMoreError}\r\n                    >\r\n                        <h2 className=\"App_title margin-0\">Sign up</h2>{' '}\r\n                        <hr className=\"App_hr-bg\" />\r\n                        <div\r\n                            className={`Registration_error text-red ${\r\n                                username_existed || email_existed\r\n                                    ? ''\r\n                                    : 'display-none'\r\n                            }`}\r\n                        >\r\n                            <IconDiv Icon={IconsAction} x={400} y={400}>\r\n                                {username_existed ? 'Username' : 'Email'} was\r\n                                existed\r\n                            </IconDiv>\r\n                        </div>\r\n                        {fields.map((item, index) => (\r\n                            <div\r\n                                key={`Registration_${index}`}\r\n                                className=\"Registration_input\"\r\n                            >\r\n                                <FastField\r\n                                    name={item.name}\r\n                                    component={\r\n                                        item.name.startsWith('password')\r\n                                            ? InputPassword\r\n                                            : InputText\r\n                                    }\r\n                                    label={item.label}\r\n                                    placeholder={`${item.label}...`}\r\n                                    help={item.help}\r\n                                    max_length={item.max_length}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                        <div className=\"App_submit display-flex-center\">\r\n                            <ButtonRipple type=\"submit\">Sign up</ButtonRipple>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Registration;\r\n","\r\n\r\n// \r\nexport const actionLocation = (is_register = false) => {\r\n    return {\r\n        type: 'REGISTER',\r\n        payload: is_register,\r\n    }\r\n}"],"sourceRoot":""}