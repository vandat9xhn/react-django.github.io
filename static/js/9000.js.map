{"version":3,"sources":["webpack://my_webpack/./src/_some_function/GetIdSlug.js","webpack://my_webpack/./src/component/_chat/mobile/_main/ChatMobile.js"],"names":["is_id","id_slug","params","useParams","err","parseInt","location","pathname","split","slice","ChatMobile","props","useState","room_chat","GetIdSlug","chat_item","initial_chat_item","ws","has_fetched","chat_obj","setChatObj","useEffect","openRoomChat","new_room_chat","handle_API_ChatZoom_R","data","makeNewChat","getRoomChatWebsocket","className","chat_ix","is_two_chat","index","scroll_y","propTypes"],"mappings":"qKAGO,WAAiD,IAA9BA,IAA8B,yDAAhBC,EAAgB,uDAAN,KAC9C,IACI,IAAMC,GAAS,IAAAC,aAEf,OAAOH,GAASE,EAAOD,GAAWC,EAAOD,GAC3C,MAAOG,GACL,OAAIJ,EACOK,SAASC,SAASC,SAASC,MAAM,KAAKC,OAAO,GAAG,IAGpDH,SAASC,SAASC,MAAM,KAAKC,OAAO,GAAG,KAbtD,gB,qPCAA,W,OAGA,G,EAFA,UAEA,UACA,WAEA,UAEA,WAEA,W,IAEA,U,mDAQA,SAASC,EAAWC,GAAO,a,2YAAA,EAEQ,IAAAC,UAAS,CACpCC,WAAW,IAAAC,aACXC,WAAW,IAAAC,qBACXC,GAAI,KACJC,aAAa,IANM,GAEhBC,EAFgB,KAENC,EAFM,KASfP,EAA0CM,EAA1CN,UAAWE,EAA+BI,EAA/BJ,UAAWE,EAAoBE,EAApBF,GAAIC,EAAgBC,EAAhBD,aAGlC,IAAAG,YAAU,WACNC,EAAaT,KACd,IAGH,I,EAAM,EAAAS,G,EAAA,yBAAe,WAAOC,GAAP,uGACE,IAAAC,uBAAsBD,GADxB,OACXE,EADW,OAGjBL,OACOD,EADP,CAEIN,UAAWU,EACXR,WAAW,IAAAW,aAAYD,GACvBR,IAAI,IAAAU,sBAAqBJ,GACzBL,aAAa,KARA,4CAAf,E,4QAAA,6CAaN,OAAKA,EAMD,+BAAKU,UAAU,cACX,wBAAC,UAAD,CACIC,QAAS,EACTC,aAAa,EAEbC,MAAO,EACPd,GAAIA,EACJe,SAAU,EACVnB,UAAWA,EACXE,UAAWA,KAdZ,KAlCfL,EAAWuB,UAAY,G,UAsDRvB","file":"static/js/9000.js","sourcesContent":["import { useParams } from 'react-router-dom';\r\n\r\n//\r\nexport function GetIdSlug(is_id = true, id_slug = 'id') {\r\n    try {\r\n        const params = useParams();\r\n\r\n        return is_id ? +params[id_slug] : params[id_slug];\r\n    } catch (err) {\r\n        if (is_id) {\r\n            return parseInt(location.pathname.split('/').slice(-1)[0]);\r\n        }\r\n\r\n        return location.pathname.split('/').slice(-1)[0];\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { GetIdSlug } from '../../../../_some_function/GetIdSlug';\r\nimport { getRoomChatWebsocket } from '../../_func/getRoomChatWs';\r\n//\r\nimport { initial_chat_item } from '../../../../_initial/chat/ChatInitial';\r\n//\r\nimport { handle_API_ChatZoom_R } from '../../../../_handle_api/chat/ChatHandleAPI';\r\n//\r\nimport { makeNewChat } from '../../_func/makeNewChat';\r\n//\r\nimport ChatShow from '../../chat_window/show/_main/ChatShow';\r\n//\r\n// import './Chat.scss';\r\n\r\n//\r\nChatMobile.propTypes = {};\r\n\r\n//\r\nfunction ChatMobile(props) {\r\n    //\r\n    const [chat_obj, setChatObj] = useState({\r\n        room_chat: GetIdSlug(),\r\n        chat_item: initial_chat_item(),\r\n        ws: null,\r\n        has_fetched: false,\r\n    });\r\n\r\n    const { room_chat, chat_item, ws, has_fetched } = chat_obj;\r\n\r\n    //\r\n    useEffect(() => {\r\n        openRoomChat(room_chat);\r\n    }, []);\r\n\r\n    //\r\n    const openRoomChat = async (new_room_chat) => {\r\n        const data = await handle_API_ChatZoom_R(new_room_chat);\r\n\r\n        setChatObj({\r\n            ...chat_obj,\r\n            room_chat: new_room_chat,\r\n            chat_item: makeNewChat(data),\r\n            ws: getRoomChatWebsocket(new_room_chat),\r\n            has_fetched: true,\r\n        });\r\n    };\r\n\r\n    //\r\n    if (!has_fetched) {\r\n        return null;\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div className=\"ChatMobile\">\r\n            <ChatShow\r\n                chat_ix={0}\r\n                is_two_chat={false}\r\n                //\r\n                index={0}\r\n                ws={ws}\r\n                scroll_y={0}\r\n                room_chat={room_chat}\r\n                chat_item={chat_item}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatMobile;\r\n"],"sourceRoot":""}