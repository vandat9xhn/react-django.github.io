{"version":3,"sources":["webpack://my_webpack/./src/_hooks/useObserveVidPic.js","webpack://my_webpack/./src/_some_function/ImageObserve.js","webpack://my_webpack/./src/component/_screen/type/story/mobile/item/ScreenStoryItemMobile.js","webpack://my_webpack/./src/component/_screen/type/story/mobile/menu/ScreenStoryMenuMobile.js","webpack://my_webpack/./src/component/story_fb/face/item/_main/StoryFace.js","webpack://my_webpack/./src/component/story_fb/face/item/name/StoryFaceName.js","webpack://my_webpack/./src/component/story_fb/face/item/user_pic/StoryFaceUserPic.js","webpack://my_webpack/./src/component/story_fb/menu/mobile/_main/StoryMenuMobile.js","webpack://my_webpack/./src/component/story_fb/menu/mobile/create/StoryCreate.js","webpack://my_webpack/./src/component/vid_pic/observe/VidPicObserve.js"],"names":["ref_elm","useState","class_vid_pic","setClassVidPic","useEffect","current","elements","callback","threshold","intersection_observer","IntersectionObserver","entries","observer","forEach","entry","isIntersecting","target","src","dataset","removeAttribute","unobserve","element","observe","openScreenFloor","story_arr","count","active_ix","story_type","FloorComponent","ScreenStoryItemMobile","old_active_ix","length","setStateObj","state_obj","is_fetching","handle_API_FeedStory_L","data","push","closeScreen","useMakeBodyHidden","className","count_story","is_fetching_story","handleNextStoryUser","getData_Story","handlePrevStoryUser","propTypes","story_arr_yours","story_arr_followed","story_arr_suggested","count_story_followed","count_story_yours","count_story_suggested","ScreenStoryMenuMobile","story_arr_friends","count_story_friend","hidden_app","hidden_header","heading","StoryFace","user","count_new","vid_pic","text","top_text","left_text","color_text_ix","scale_text","c_user","useContext","context_api","id","first_name","last_name","picture","img_props","video_props","name","num","StoryFaceName","StoryFaceUserPic","alt","width","height","StoryMenuMobile","map","item","active_step","active_item_ix","has_fetched","old_story_arr","old_count_story","initial_story_menu_obj","ix","key","onClick","openScreenStoryItemMobile","handleChangeStory","list","PropTypes","array","number","string","defaultProps","StoryCreate","props","openScreenCreateStory","y","VidPicObserve","type","type_vid_pic","type_video_or_img","ref_vid_pic","useRef","useObserveVidPic","ref","data-src","object"],"mappings":"2KAKO,SAA0BA,GAAS,M,2YAAA,EAEE,IAAAC,UACpC,6BAHkC,GAE/BC,EAF+B,KAEhBC,EAFgB,KAkBtC,OAXA,IAAAC,YAAU,WACNJ,EAAQK,UACJ,aAAe,CACXC,SAAU,CAACN,EAAQK,SACnBE,SAAU,WACNJ,EAAe,kCAG5B,CAACH,IAGGE,GAvBX,I,EAAA,W,KAEA,W,kHCDe,YAIZ,IAHCI,EAGD,EAHCA,SAGD,IAFCE,iBAED,MAFa,EAEb,MADCD,gBACD,MADY,aACZ,EACOE,EAAwB,IAAIC,sBAC9B,SAACC,EAASC,GACND,EAAQE,SAAQ,SAACC,GACTA,EAAMC,iBACND,EAAME,OAAOC,IAAMH,EAAME,OAAOE,QAAQD,IACxCH,EAAME,OAAOG,gBAAgB,YAC7BP,EAASQ,UAAUN,EAAME,QACzBT,UAIZ,CACIC,UAAWA,IAInBF,EAASO,SAAQ,SAACQ,GACdZ,EAAsBa,QAAQD,Q,kRCZ/B,YAQJ,IAPCE,EAOD,EAPCA,gBAEAC,EAKD,EALCA,UACAC,EAID,EAJCA,MACAC,EAGD,EAHCA,UAEAC,EACD,EADCA,WAEAJ,EAAgB,CACZK,eAAgBC,EAChBL,UAAWA,EACXM,cAAeJ,EACfD,MAAOA,GAASD,EAAUO,OAC1BJ,WAAYA,KAzBpB,e,OAGA,G,EAFA,UAEA,U,IAEA,UAEA,SACA,e,2KAyBA,SAASE,EAAT,GAMG,I,EAAA,K,EAAA,yBAgBC,4GACIG,GAAY,SAACC,GAAD,YACLA,EADK,CAERC,aAAa,OAHrB,UAM2B,IAAAC,wBACnBX,EAAUO,OACVJ,GARR,gBAMYS,EANZ,EAMYA,KAKRZ,EAAUa,KAAV,MAAAb,EAAA,EAAkBY,IAElBJ,GAAY,SAACC,GAAD,YACLA,EADK,CAERP,UAAWA,EAAY,EACvBQ,aAAa,OAhBrB,+CAhBD,E,4QAAA,4CALCV,EAKD,EALCA,UACAC,EAID,EAJCA,MACAK,EAGD,EAHCA,cACAH,EAED,EAFCA,WACAW,EACD,EADCA,YACD,E,2YAAA,EAEkC,IAAArC,UAAS,CACtCyB,UAAWI,EACXI,aAAa,IAJlB,GAEQD,EAFR,KAEmBD,EAFnB,KAQSN,EAA2BO,EAA3BP,UAAWQ,EAAgBD,EAAhBC,YAqDnB,OAlDA,IAAAK,qBAmDI,+BAAKC,UAAU,uDACX,wBAAC,UAAD,CACIhB,UAAWA,EACXiB,YAAahB,EACbC,UAAWA,EACXC,WAAYA,EACZe,kBAAmBR,EACnBS,oBA9BZ,WACQjB,EAAYF,EAAUO,OACtBC,OACOC,EADP,CAEIP,UAAWA,EAAY,KAM/BkB,KAqBQC,oBAjBZ,WACIb,OACOC,EADP,CAEIP,UAAWA,EAAY,MAenBY,YAAaA,KAhF7BT,EAAsBiB,UAAY,G,UAsFnBjB,G,wGCzGR,YASJ,IARCkB,EAQD,EARCA,gBACAC,EAOD,EAPCA,mBACAC,EAMD,EANCA,oBAEAC,EAID,EAJCA,qBACAC,EAGD,EAHCA,kBACAC,EAED,EAFCA,uBAGA7B,EADD,EADCA,iBAEgB,CACZK,eAAgByB,EAEhBN,gBAAiBA,EACjBC,mBAAoBA,EACpBC,oBAAqBA,EAErBC,qBAAsBA,EACtBC,kBAAmBA,EACnBC,sBAAuBA,KA9B/B,I,IAAA,UAGA,G,EAFA,UAEA,U,IAEA,U,IACA,U,mDAgCA,SAASC,EAAT,GAYG,IAXCN,EAWD,EAXCA,gBACAO,EAUD,EAVCA,kBACAN,EASD,EATCA,mBACAC,EAQD,EARCA,oBAEAE,EAMD,EANCA,kBACAI,EAKD,EALCA,mBACAL,EAID,EAJCA,qBACAE,EAGD,EAHCA,sBAYA,OATD,EADCd,aAGA,IAAAC,mBAAkB,CAEdiB,YAAY,EACZC,eAAe,IAKf,+BAAKjB,UAAU,cACX,mCACI,+BAAKA,UAAU,wDACX,wBAAC,UAAD,OAGJ,+BAAKA,UAAU,8BACX,wBAAC,UAAD,CACIhB,UAAWuB,EACXN,YAAaU,EACbxB,WAAW,QACX+B,QAAQ,kBAIhB,+BAAKlB,UAAU,8BACX,wBAAC,UAAD,CACIhB,UAAW8B,EACXb,YAAac,EACb5B,WAAW,UACX+B,QAAQ,sBAIhB,+BAAKlB,UAAU,8BACX,wBAAC,UAAD,CACIhB,UAAWwB,EACXP,YAAaS,EACbvB,WAAW,WACX+B,QAAQ,sBAIhB,+BAAKlB,UAAU,8BACX,wBAAC,UAAD,CACIhB,UAAWyB,EACXR,YAAaW,EACbzB,WAAW,YACX+B,QAAQ,yBA1FhC,SA2BAL,EAAsBP,UAAY,G,UAuEnBO,G,8EC1Gf,e,OAGA,G,EAFA,UAEA,U,IAEA,U,IAEA,U,IAEA,U,IACA,U,IACA,U,mDAQA,SAASM,EAAT,GAUG,IATCC,EASD,EATCA,KACAC,EAQD,EARCA,UACAC,EAOD,EAPCA,QAEAC,EAKD,EALCA,KACAC,EAID,EAJCA,SACAC,EAGD,EAHCA,UACAC,EAED,EAFCA,cACAC,EACD,EADCA,WAGcC,GAAW,IAAAC,YAAWC,eAA5BV,KAGAW,EAAuCX,EAAvCW,GAAIC,EAAmCZ,EAAnCY,WAAYC,EAAuBb,EAAvBa,UAAWC,EAAYd,EAAZc,QAGnC,OACI,+BAAKlC,UAAU,0DACX,+BAAKA,UAAU,2CACX,wBAAC,UAAD,CACIsB,QAASA,EACTa,UAAW,CACPnC,UAAW,2BAEfoC,YAAa,CACTpC,UAAW,8BAKvB,wBAAC,UAAD,CACIuB,KAAMA,EACNC,SAAUA,EACVC,UAAWA,EACXC,cAAeA,EACfC,WAAYA,IAGhB,+BAAK3B,UAAU,iBACX,wBAAC,UAAD,CAAkBqB,UAAWA,EAAWa,QAASA,KAGrD,+BAAKlC,UAAU,kBACX,wBAAC,UAAD,CACIqC,KACIT,EAAOG,IAAMA,EACP,aACAC,EAAa,IAAMC,KAKrC,+BAAKjC,UAAU,aAEf,+BAAKA,UAAU,gBAEf,+BAAKA,UAAU,uBACX,wBAAC,UAAD,CAAUsC,IAAKjB,MAjE/B,SAGAF,EAAUb,UAAY,G,UAoEPa,G,8ECpFf,I,IAAA,U,mDASA,SAASoB,EAAT,GAAiC,IAARF,EAAQ,EAARA,KAErB,OACI,+BAAKrC,UAAU,yBACX,gCAAMA,UAAU,6CACXqC,I,EAbjB,UAEA,SAGAE,EAAcjC,UAAY,G,UAcXiC,G,8ECpBf,I,IAAA,U,mDASA,SAASC,EAAT,GAAkD,IAAtBnB,EAAsB,EAAtBA,UAAWa,EAAW,EAAXA,QAEnC,OACI,+BAAKlC,UAAU,mCACX,+BACIA,UAAA,WACIqB,EAAY,EACN,8BACA,gCAGV,+BACI5C,IAAKyD,EACLO,IAAI,GACJzC,UAAU,+BACV0C,MAAM,KACNC,OAAO,S,EAxB3B,UAEA,SAGAH,EAAiBlC,UAAY,G,UA0BdkC,G,sPChCf,W,WACA,UAEA,WAEA,WAEA,W,IAEA,U,2KAkBA,SAASI,EAAT,GAKG,I,EAAA,K,EAAA,yBAcC,sHAC2B,IAAAjD,wBAAuB,EAAGR,GADrD,iBACYS,EADZ,EACYA,MAEHiD,KAAI,SAACC,GAMN,OALAA,EAAKC,YACiB,GAAlBD,EAAKzB,UAAiB,EAAIyB,EAAK7D,MAAQ6D,EAAKzB,UAChDyB,EAAKE,eAAiB,EACtBF,EAAKG,aAAc,EAEZH,KAGXtD,GAAY,SAACC,GAAD,YACLA,EADK,CAERT,sBAAeS,EAAUT,WAAzB,EAAuCY,IACvCqD,aAAa,OAfrB,+CAdD,E,4QAAA,4CAJYC,EAIZ,EAJClE,UACamE,EAGd,EAHClD,YACAd,EAED,EAFCA,WACA+B,EACD,EADCA,QAGQnC,GAAoB,IAAA8C,YAAWC,eAA/B/C,gBAFT,E,2YAAA,EAKkC,IAAAtB,UAAS,CACtCuB,UAAWkE,GAAiB,CAACE,0BAC7BnD,YAAakD,EACbF,YAAaC,EAAc3D,OAAS,IARzC,GAKQE,EALR,KAKmBD,EALnB,KAWSR,EAA2BS,EAA3BT,UAAWiE,EAAgBxD,EAAhBwD,YAsCnB,OAfA,IAAArF,YAAU,YACLqF,GAAe7C,EAAcjB,KAC/B,IAcC,mCACI,8BAAIa,UAAU,kCAAkCkB,GAEhD,+BAAKlB,UAAciD,EAAc,GAAK,gBAClC,8BAAIjD,UAAU,oCACThB,EAAU6D,KAAI,SAACC,EAAMO,GAAP,OACX,8BACIC,IAAA,GAAQR,EAAK1B,KAAKW,GAClB/B,UAAU,sCACVuD,QAAS,kBApBjC,SAA2BF,IACvB,IAAAG,2BAA0B,CACtBzE,gBAAiBA,EACjBC,UAAWA,EACXE,UAAWmE,EACXlE,WAAYA,IAemBsE,CAAkBJ,KAEjC,+BAAKrD,UAAU,wBACX,wBAAC,UAAD,CACIoB,KAAM0B,EAAK1B,KACXC,UAAWyB,EAAKzB,UAChBC,QAASwB,EAAKY,KAAK,GAAGpC,QACtBC,KAAMuB,EAAKY,KAAK,GAAGnC,KACnBC,SAAUsB,EAAKY,KAAK,GAAGlC,SACvBC,UAAWqB,EAAKY,KAAK,GAAGjC,UACxBC,cAAeoB,EAAKY,KAAK,GAAGhC,cAC5BC,WAAYmB,EAAKY,KAAK,GAAG/B,oBAQjD,+BACI3B,UACIiD,EAAc,eAAiB,8BArGnD,QAGAL,EAAgBtC,UAAY,CACxBtB,UAAW2E,UAAUC,MACrB3D,YAAa0D,UAAUE,OACvB1E,WAAYwE,UAAUG,OACtB5C,QAASyC,UAAUG,QAGvBlB,EAAgBmB,aAAe,CAC3B/E,UAAW,GACXiB,YAAa,G,UAgGF2C,G,8ECvHf,e,OAGA,G,EAFA,UAEA,U,IAEA,U,mDAQA,SAASoB,EAAYC,GAAO,IAEhBC,GAA0B,IAAArC,YAAWC,eAArCoC,sBAGR,OACI,kCACIlE,UAAU,uEACVuD,QAASW,GAET,+BAAKlE,UAAU,uBACX,+BAAKA,UAAU,oBACX,gCAAMA,UAAU,oCAAhB,iBAKJ,+BAAKA,UAAU,qBACX,wBAAC,UAAD,CAAYmE,EAAG,SAxBnC,SAGAH,EAAY1D,UAAY,G,UA4BT0D,G,sPCtCf,W,WACA,UAEA,UAEA,W,mDAgBA,SAASI,EAAT,GAAkE,IAAzC9C,EAAyC,EAAzCA,QAAS+C,EAAgC,EAAhCA,KAAMjC,EAA0B,EAA1BA,YAAaD,EAAa,EAAbA,UAE3CmC,GAAe,IAAAC,mBAAkBjD,EAAS+C,GAG1CG,GAAc,IAAAC,QAAO,MAGrB/G,GAAgB,IAAAgH,kBAAiBF,GAGvC,MAAuB,OAAhBF,EACH,iCACIK,IAAKH,EACLxE,UAAA,GAActC,EACdkH,WAAUtD,EACVmB,IAAI,IACAN,IAEQ,SAAhBmC,EACA,mCACIK,IAAKH,EACLxE,UAAA,GAActC,EACdkH,WAAUtD,GACNc,IAER,KAvCRgC,EAAc9D,UAAY,CACtBgB,QAASqC,UAAUG,OACnBO,KAAMV,UAAUG,OAChB1B,YAAauB,UAAUkB,OACvB1C,UAAWwB,UAAUkB,QAGzBT,EAAcL,aAAe,CACzB3B,YAAa,GACbD,UAAW,I,UAiCAiC,G","file":"static/js/422.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n//\r\nimport observerVidPic from '../_some_function/ImageObserve';\r\n\r\n//\r\nexport function useObserveVidPic(ref_elm) {\r\n    //\r\n    const [class_vid_pic, setClassVidPic] = useState(\r\n        'vid_pic-observe opacity-0'\r\n    );\r\n\r\n    //\r\n    useEffect(() => {\r\n        ref_elm.current &&\r\n            observerVidPic({\r\n                elements: [ref_elm.current],\r\n                callback: () => {\r\n                    setClassVidPic('vid_pic-observe opacity-1');\r\n                },\r\n            });\r\n    }, [ref_elm]);\r\n\r\n    //\r\n    return class_vid_pic;\r\n}\r\n","// \r\nexport default function observerVidPic({\r\n    elements,\r\n    threshold = 0,\r\n    callback = () => {},\r\n}) {\r\n    const intersection_observer = new IntersectionObserver(\r\n        (entries, observer) => {\r\n            entries.forEach((entry) => {\r\n                if (entry.isIntersecting) {\r\n                    entry.target.src = entry.target.dataset.src;\r\n                    entry.target.removeAttribute('data-src');\r\n                    observer.unobserve(entry.target);\r\n                    callback();\r\n                }\r\n            });\r\n        },\r\n        {\r\n            threshold: threshold,\r\n        }\r\n    );\r\n\r\n    elements.forEach((element) => {\r\n        intersection_observer.observe(element);\r\n    });\r\n}\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { useMakeBodyHidden } from '../../../../../../_hooks/useMakeBodyHidden';\r\n//\r\nimport ScreenStoryItem from '../../_components/item/_main/ScreenStoryItem';\r\n//\r\nimport './ScreenStoryItemMobile.scss';\r\nimport { handle_API_FeedStory_L } from '../../../../../../_handle_api/feed/HandleAPIStory';\r\n\r\n//\r\nexport function openScreenStoryItemMobile({\r\n    openScreenFloor,\r\n\r\n    story_arr,\r\n    count,\r\n    active_ix,\r\n\r\n    story_type,\r\n}) {\r\n    openScreenFloor({\r\n        FloorComponent: ScreenStoryItemMobile,\r\n        story_arr: story_arr,\r\n        old_active_ix: active_ix,\r\n        count: count || story_arr.length,\r\n        story_type: story_type,\r\n    });\r\n}\r\n\r\n//\r\nScreenStoryItemMobile.propTypes = {};\r\n\r\n//\r\nfunction ScreenStoryItemMobile({\r\n    story_arr,\r\n    count,\r\n    old_active_ix,\r\n    story_type,\r\n    closeScreen,\r\n}) {\r\n    //\r\n    const [state_obj, setStateObj] = useState({\r\n        active_ix: old_active_ix,\r\n        is_fetching: false,\r\n    });\r\n\r\n    //\r\n    const { active_ix, is_fetching } = state_obj;\r\n\r\n    //\r\n    useMakeBodyHidden();\r\n\r\n    /* ----------- */\r\n\r\n    //\r\n    async function getData_Story() {\r\n        setStateObj((state_obj) => ({\r\n            ...state_obj,\r\n            is_fetching: true,\r\n        }));\r\n\r\n        const { data } = await handle_API_FeedStory_L(\r\n            story_arr.length,\r\n            story_type\r\n        );\r\n\r\n        story_arr.push(...data);\r\n\r\n        setStateObj((state_obj) => ({\r\n            ...state_obj,\r\n            active_ix: active_ix + 1,\r\n            is_fetching: false,\r\n        }));\r\n    }\r\n\r\n    /* ----------- */\r\n\r\n    //\r\n    function handleNextStoryUser() {\r\n        if (active_ix < story_arr.length) {\r\n            setStateObj({\r\n                ...state_obj,\r\n                active_ix: active_ix + 1,\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        getData_Story();\r\n    }\r\n\r\n    //\r\n    function handlePrevStoryUser() {\r\n        setStateObj({\r\n            ...state_obj,\r\n            active_ix: active_ix - 1,\r\n        });\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div className=\"ScreenStoryItemMobile wh-100v padding-8px bg-loader\">\r\n            <ScreenStoryItem\r\n                story_arr={story_arr}\r\n                count_story={count}\r\n                active_ix={active_ix}\r\n                story_type={story_type}\r\n                is_fetching_story={is_fetching}\r\n                handleNextStoryUser={handleNextStoryUser}\r\n                handlePrevStoryUser={handlePrevStoryUser}\r\n                closeScreen={closeScreen}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScreenStoryItemMobile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { useMakeBodyHidden } from '../../../../../../_hooks/useMakeBodyHidden';\r\n//\r\nimport StoryCreate from '../../../../../story_fb/menu/mobile/create/StoryCreate';\r\nimport StoryMenuMobile from '../../../../../story_fb/menu/mobile/_main/StoryMenuMobile';\r\n//\r\nimport './ScreenStoryMenuMobile.scss';\r\n\r\n//\r\nexport function openScreenStoryMenuMobile({\r\n    story_arr_yours,\r\n    story_arr_followed,\r\n    story_arr_suggested,\r\n\r\n    count_story_followed,\r\n    count_story_yours,\r\n    count_story_suggested,\r\n    openScreenFloor,\r\n}) {\r\n    openScreenFloor({\r\n        FloorComponent: ScreenStoryMenuMobile,\r\n\r\n        story_arr_yours: story_arr_yours,\r\n        story_arr_followed: story_arr_followed,\r\n        story_arr_suggested: story_arr_suggested,\r\n\r\n        count_story_followed: count_story_followed,\r\n        count_story_yours: count_story_yours,\r\n        count_story_suggested: count_story_suggested,\r\n    });\r\n}\r\n\r\n//\r\nScreenStoryMenuMobile.propTypes = {};\r\n\r\n//\r\nfunction ScreenStoryMenuMobile({\r\n    story_arr_yours,\r\n    story_arr_friends,\r\n    story_arr_followed,\r\n    story_arr_suggested,\r\n\r\n    count_story_yours,\r\n    count_story_friend,\r\n    count_story_followed,\r\n    count_story_suggested,\r\n\r\n    closeScreen,\r\n}) {\r\n    //\r\n    useMakeBodyHidden({\r\n        // hidden_scroll: true,\r\n        hidden_app: true,\r\n        hidden_header: true,\r\n    });\r\n\r\n    //\r\n    return (\r\n        <div className=\"bg-primary\">\r\n            <div>\r\n                <div className=\"ScreenStoryMenuMobile_create margin-auto padding-8px\">\r\n                    <StoryCreate />\r\n                </div>\r\n\r\n                <div className=\"ScreenStoryMenuMobile_item\">\r\n                    <StoryMenuMobile\r\n                        story_arr={story_arr_yours}\r\n                        count_story={count_story_yours}\r\n                        story_type=\"yours\"\r\n                        heading=\"Your stories\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"ScreenStoryMenuMobile_item\">\r\n                    <StoryMenuMobile\r\n                        story_arr={story_arr_friends}\r\n                        count_story={count_story_friend}\r\n                        story_type=\"friends\"\r\n                        heading=\"Friend's stories\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"ScreenStoryMenuMobile_item\">\r\n                    <StoryMenuMobile\r\n                        story_arr={story_arr_followed}\r\n                        count_story={count_story_followed}\r\n                        story_type=\"followed\"\r\n                        heading=\"Followed stories\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"ScreenStoryMenuMobile_item\">\r\n                    <StoryMenuMobile\r\n                        story_arr={story_arr_suggested}\r\n                        count_story={count_story_suggested}\r\n                        story_type=\"suggested\"\r\n                        heading=\"Suggested for you\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScreenStoryMenuMobile;\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { context_api } from '../../../../../_context/ContextAPI';\r\n//\r\nimport VidPicObserve from '../../../../vid_pic/observe/VidPicObserve';\r\n//\r\nimport BadgeDiv from '../../../../some_div/badge_div/BadgeDiv';\r\n//\r\nimport StoryText from '../../../_components/text/StoryText';\r\nimport StoryFaceUserPic from '../user_pic/StoryFaceUserPic';\r\nimport StoryFaceName from '../name/StoryFaceName';\r\n//\r\nimport './StoryFace.scss';\r\n\r\n//\r\nStoryFace.propTypes = {};\r\n\r\n//\r\nfunction StoryFace({\r\n    user,\r\n    count_new,\r\n    vid_pic,\r\n\r\n    text,\r\n    top_text,\r\n    left_text,\r\n    color_text_ix,\r\n    scale_text,\r\n}) {\r\n    //\r\n    const { user: c_user } = useContext(context_api);\r\n\r\n    //\r\n    const { id, first_name, last_name, picture } = user;\r\n\r\n    //\r\n    return (\r\n        <div className=\"StoryFace position-rel h-100per story-active font-13px\">\r\n            <div className=\"StoryFace_img h-100per story-transition\">\r\n                <VidPicObserve\r\n                    vid_pic={vid_pic}\r\n                    img_props={{\r\n                        className: 'wh-100 object-fit-cover',\r\n                    }}\r\n                    video_props={{\r\n                        className: 'wh-100 object-fit-cover',\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            <StoryText\r\n                text={text}\r\n                top_text={top_text}\r\n                left_text={left_text}\r\n                color_text_ix={color_text_ix}\r\n                scale_text={scale_text}\r\n            />\r\n\r\n            <div className=\"StoryFace_pic\">\r\n                <StoryFaceUserPic count_new={count_new} picture={picture} />\r\n            </div>\r\n\r\n            <div className=\"StoryFace_name\">\r\n                <StoryFaceName\r\n                    name={\r\n                        c_user.id == id\r\n                            ? 'Your story'\r\n                            : first_name + ' ' + last_name\r\n                    }\r\n                />\r\n            </div>\r\n\r\n            <div className=\"story-bg\"></div>\r\n\r\n            <div className=\"story-bg-hv\"></div>\r\n\r\n            <div className=\"StoryFace_count_new\">\r\n                <BadgeDiv num={count_new} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StoryFace;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// \r\nimport './StoryFaceName.scss';\r\n\r\n//\r\nStoryFaceName.propTypes = {};\r\n\r\n//\r\nfunction StoryFaceName({ name }) {\r\n    //\r\n    return (\r\n        <div className=\"StoryFaceName_contain\">\r\n            <span className=\"StoryFaceName_item label-field text-white\">\r\n                {name}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StoryFaceName;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport './StoryFaceUserPic.scss';\r\n\r\n//\r\nStoryFaceUserPic.propTypes = {};\r\n\r\n//\r\nfunction StoryFaceUserPic({ count_new, picture }) {\r\n    //\r\n    return (\r\n        <div className=\"StoryFaceUserPic_contain brs-50\">\r\n            <div\r\n                className={`brs-50 ${\r\n                    count_new > 0\r\n                        ? 'StoryFaceUserPic_border-new'\r\n                        : 'StoryFaceUserPic_border-old'\r\n                }`}\r\n            >\r\n                <img\r\n                    src={picture}\r\n                    alt=\"\"\r\n                    className=\"StoryFaceUserPic_item brs-50\"\r\n                    width=\"35\"\r\n                    height=\"35\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StoryFaceUserPic;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { context_api } from '../../../../../_context/ContextAPI';\r\n//\r\nimport { handle_API_FeedStory_L } from '../../../../../_handle_api/feed/HandleAPIStory';\r\n//\r\nimport { openScreenStoryItemMobile } from '../../../../_screen/type/story/mobile/item/ScreenStoryItemMobile';\r\n//\r\nimport StoryFace from '../../../face/item/_main/StoryFace';\r\n//\r\nimport './StoryMenuMobile.scss';\r\n\r\n//\r\nStoryMenuMobile.propTypes = {\r\n    story_arr: PropTypes.array,\r\n    count_story: PropTypes.number,\r\n    story_type: PropTypes.string,\r\n    heading: PropTypes.string,\r\n};\r\n\r\nStoryMenuMobile.defaultProps = {\r\n    story_arr: [],\r\n    count_story: 0,\r\n};\r\n\r\n//\r\nfunction StoryMenuMobile({\r\n    story_arr: old_story_arr,\r\n    count_story: old_count_story,\r\n    story_type,\r\n    heading,\r\n}) {\r\n    //\r\n    const { openScreenFloor } = useContext(context_api);\r\n\r\n    //\r\n    const [state_obj, setStateObj] = useState({\r\n        story_arr: old_story_arr || [initial_story_menu_obj()],\r\n        count_story: old_count_story,\r\n        has_fetched: old_story_arr.length > 0,\r\n    });\r\n\r\n    const { story_arr, has_fetched } = state_obj;\r\n\r\n    //\r\n    async function getData_Story() {\r\n        const { data } = await handle_API_FeedStory_L(0, story_type);\r\n\r\n        data.map((item) => {\r\n            item.active_step =\r\n                item.count_new == 0 ? 0 : item.count - item.count_new;\r\n            item.active_item_ix = 0;\r\n            item.has_fetched = false;\r\n\r\n            return item;\r\n        });\r\n\r\n        setStateObj((state_obj) => ({\r\n            ...state_obj,\r\n            story_arr: [...state_obj.story_arr, ...data],\r\n            has_fetched: true,\r\n        }));\r\n    }\r\n\r\n    //\r\n    useEffect(() => {\r\n        !has_fetched && getData_Story(story_type);\r\n    }, []);\r\n\r\n    //\r\n    function handleChangeStory(ix) {\r\n        openScreenStoryItemMobile({\r\n            openScreenFloor: openScreenFloor,\r\n            story_arr: story_arr,\r\n            active_ix: ix,\r\n            story_type: story_type,\r\n        });\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div>\r\n            <h2 className=\"margin-0 font-20px padding-8px\">{heading}</h2>\r\n\r\n            <div className={`${has_fetched ? '' : 'display-none'}`}>\r\n                <ul className=\"list-none display-flex flex-wrap\">\r\n                    {story_arr.map((item, ix) => (\r\n                        <li\r\n                            key={`${item.user.id}`}\r\n                            className=\"cursor-pointer hv-bg-ccc story-face\"\r\n                            onClick={() => handleChangeStory(ix)}\r\n                        >\r\n                            <div className=\"StoryMenuMobile_item\">\r\n                                <StoryFace\r\n                                    user={item.user}\r\n                                    count_new={item.count_new}\r\n                                    vid_pic={item.list[0].vid_pic}\r\n                                    text={item.list[0].text}\r\n                                    top_text={item.list[0].top_text}\r\n                                    left_text={item.list[0].left_text}\r\n                                    color_text_ix={item.list[0].color_text_ix}\r\n                                    scale_text={item.list[0].scale_text}\r\n                                />\r\n                            </div>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n\r\n            <div\r\n                className={`${\r\n                    has_fetched ? 'display-none' : 'StoryMenuMobile_skeleton'\r\n                }`}\r\n            ></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StoryMenuMobile;\r\n","import React, { useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { context_api } from '../../../../../_context/ContextAPI';\r\n// \r\nimport IconsArrow from '../../../../../_icons_svg/icons_arrow/IconsArrow';\r\n//\r\nimport './StoryCreate.scss';\r\n\r\n//\r\nStoryCreate.propTypes = {};\r\n\r\n//\r\nfunction StoryCreate(props) {\r\n    //\r\n    const { openScreenCreateStory } = useContext(context_api);\r\n\r\n    //\r\n    return (\r\n        <button\r\n            className=\"StoryCreate btn btn-hv btn-active padding-8px brs-8px cursor-pointer\"\r\n            onClick={openScreenCreateStory}\r\n        >\r\n            <div className=\"flex-between-center\">\r\n                <div className=\"StoryCreate_left\">\r\n                    <span className=\"label-field font-18px text-white\">\r\n                        Create story\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"StoryCreate_right\">\r\n                    <IconsArrow y={400} />\r\n                </div>\r\n            </div>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default StoryCreate;\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { useObserveVidPic } from '../../../_hooks/useObserveVidPic';\r\n//\r\nimport { type_video_or_img } from '../../../_some_function/VideoOrImage';\r\n\r\n//\r\nVidPicObserve.propTypes = {\r\n    vid_pic: PropTypes.string,\r\n    type: PropTypes.string,\r\n    video_props: PropTypes.object,\r\n    img_props: PropTypes.object,\r\n};\r\n\r\nVidPicObserve.defaultProps = {\r\n    video_props: {},\r\n    img_props: {},\r\n};\r\n\r\n//\r\nfunction VidPicObserve({ vid_pic, type, video_props, img_props }) {\r\n    //\r\n    const type_vid_pic = type_video_or_img(vid_pic, type);\r\n\r\n    //\r\n    const ref_vid_pic = useRef(null);\r\n\r\n    //\r\n    const class_vid_pic = useObserveVidPic(ref_vid_pic);\r\n\r\n    //\r\n    return type_vid_pic == 'img' ? (\r\n        <img\r\n            ref={ref_vid_pic}\r\n            className={`${class_vid_pic}`}\r\n            data-src={vid_pic}\r\n            alt=\"\"\r\n            {...img_props}\r\n        />\r\n    ) : type_vid_pic == 'video' ? (\r\n        <video\r\n            ref={ref_vid_pic}\r\n            className={`${class_vid_pic}`}\r\n            data-src={vid_pic}\r\n            {...video_props}\r\n        />\r\n    ) : null;\r\n}\r\n\r\nexport default VidPicObserve;\r\n"],"sourceRoot":""}