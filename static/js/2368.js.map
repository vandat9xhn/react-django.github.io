{"version":3,"sources":["webpack://my_webpack/./src/_custom_hooks/useScrollDown.js","webpack://my_webpack/./src/component/posts/__common/InitialPosts.js","webpack://my_webpack/./src/component/some_div/search_animate_div/SearchAnimateDiv.js","webpack://my_webpack/./src/pages/new_feed/__handle_api/NewFeedHandleAPI.js","webpack://my_webpack/./src/pages/new_feed/__params/NewFeedParams.js","webpack://my_webpack/./src/pages/new_feed/_main/NewFeed.js","webpack://my_webpack/./src/pages/new_feed/search/NewFeedSearch.js"],"names":["useScrollDown","initial_data_arr","handle_API_L","Promise","start_obj_state","setDataState","data_state","is_fetching","data_count","current","data","new_count","count","mounted","has_fetched","data_arr","length","is_max","console","log","just_fetching","thresh_hold","useState","pos","useRef","useMounted","handleGetMoreData","window","pageYOffset","getData_API","handleScroll","WindowScrollDownBool","is_api_fake","getData_API_at_first","resetStopScrollDown","useEffect","addEventListener","removeEventListener","initial_posts","id","user","picture","first_name","last_name","is_online","content_obj","has_more_content","content","vid_pics","likes","arr_unique_like","count_like","vid_pic","comments","count_comment","histories","created_time","updated_time","count_vid_pic","user_type_like","shares","count_share","count_unique_share","count_user_shared","count_history","permission_post","SearchAnimateDiv","props","value","placeholder","handleChange","handleSearch","is_open","setIsOpen","className","onClick","y","type","onChange","e","target","onKeyDown","keyCode","preventDefault","size_icon","propTypes","PropTypes","string","func","defaultProps","c_count","params","API_Post_L","params_new_feed_post_l","res","page","size","is_profile","NewFeed","params_api","handle_API_NewFeedPost_L","post_obj","getData_API_Post_first","post_arr","search","posts","open_fetching","NewFeedSearch","setValue","new_value"],"mappings":"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","file":"static/js/2368.js","sourcesContent":["import { useEffect, useRef, useState } from 'react';\r\n//\r\nimport { is_api_fake } from '../api/_ConstAPI';\r\n\r\nimport { useMounted } from './useMounted';\r\n\r\nimport { WindowScrollDownBool } from '../_some_function/ScrollDown';\r\n\r\n//\r\nexport const useScrollDown = (\r\n    initial_data_arr = [],\r\n    handle_API_L = () => new Promise(),\r\n    thresh_hold = 0.7\r\n) => {\r\n    // state\r\n    const [data_state, setDataState] = useState({\r\n        data_arr: initial_data_arr,\r\n        count: 0,\r\n        is_fetching: false,\r\n        has_fetched: false,\r\n    });\r\n\r\n    // ref\r\n    const pos = useRef(0);\r\n    const is_max = useRef(false);\r\n    const just_fetching = useRef(true);\r\n    const data_count = useRef(0);\r\n\r\n    //\r\n    const mounted = useMounted();\r\n\r\n    //\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, []);\r\n\r\n    /*---------------------------- GET API ---------------------------------*/\r\n\r\n    // get post\r\n    async function getData_API(start_obj_state = {}) {\r\n        try {\r\n            setDataState((data_state) => ({\r\n                ...data_state,\r\n                is_fetching: true,\r\n                ...start_obj_state,\r\n            }));\r\n\r\n            const { data, count: new_count } = await handle_API_L(\r\n                data_count.current\r\n            );\r\n\r\n            mounted &&\r\n                setDataState((data_state) => {\r\n                    const { has_fetched, data_arr, count } = data_state;\r\n\r\n                    data_count.current += data.length;\r\n                    is_max.current = has_fetched\r\n                        ? count <= data_arr.length + new_count\r\n                        : new_count <= data.length;\r\n\r\n                    return {\r\n                        data_arr: has_fetched ? [...data_arr, ...data] : data,\r\n                        count: has_fetched ? count : new_count,\r\n                        is_fetching: false,\r\n                        has_fetched: true,\r\n                    };\r\n                });\r\n        } catch (e) {\r\n            console.log(e);\r\n        } finally {\r\n            just_fetching.current = false;\r\n        }\r\n    }\r\n\r\n    /* --------------------------------------------- */\r\n\r\n    //\r\n    function handleGetMoreData() {\r\n        pos.current = window.pageYOffset;\r\n        just_fetching.current = true;\r\n        getData_API();\r\n    }\r\n\r\n    //\r\n    function handleScroll() {\r\n        if (data_count.current == 0) {\r\n            return;\r\n        }\r\n\r\n        if (\r\n            WindowScrollDownBool(\r\n                pos.current,\r\n                just_fetching.current,\r\n                is_api_fake ? false : is_max.current,\r\n                thresh_hold\r\n            )\r\n        ) {\r\n            handleGetMoreData();\r\n        }\r\n    }\r\n\r\n    //\r\n    function getData_API_at_first() {\r\n        getData_API({\r\n            data_arr: [],\r\n            count: 0,\r\n            has_fetched: false,\r\n        });\r\n    }\r\n\r\n    // \r\n    function resetStopScrollDown() {\r\n        pos.current = 0;\r\n        data_count.current = 0\r\n    }\r\n\r\n    return [data_state, setDataState, getData_API_at_first, resetStopScrollDown];\r\n};\r\n","//\r\nexport const initial_posts = [\r\n    {\r\n        id: 0,\r\n        user: {\r\n            id: 0,\r\n            picture: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            is_online: false,\r\n        },\r\n        content_obj: {\r\n            has_more_content: false,\r\n            content: '',\r\n        },\r\n        vid_pics: [\r\n            {\r\n                id: 0,\r\n                likes: [],\r\n                arr_unique_like: [],\r\n                count_like: 0,\r\n                vid_pic: '',\r\n                content_obj: {\r\n                    has_more_content: false,\r\n                    content: '',\r\n                },\r\n                comments: [],\r\n                count_comment: 0,\r\n                histories: [],\r\n                created_time: '2021-04-01T07:48:48.176630Z',\r\n                updated_time: '2021-04-01T15:18:30.339347Z',\r\n            },\r\n        ],\r\n        count_vid_pic: 0,\r\n        likes: [],\r\n        count_like: 0,\r\n        user_type_like: -1,\r\n        shares: [],\r\n        count_share: 0,\r\n        count_unique_share: 0,\r\n        count_user_shared: 0,\r\n        comments: [],\r\n        count_comment: 0,\r\n        histories: [],\r\n        count_history: 0,\r\n        permission_post: 0,\r\n        created_time: '2021-04-01T07:48:48.176630Z',\r\n        updated_time: '2021-04-01T15:18:30.339347Z',\r\n    },\r\n];\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport IconsInput from '../../../_icons_svg/Icons_input/IconsInput';\r\nimport IconsArrow from '../../../_icons_svg/icons_arrow/IconsArrow';\r\n//\r\nimport './SearchAnimateDiv.scss';\r\n\r\n//\r\nSearchAnimateDiv.propTypes = {\r\n    value: PropTypes.string,\r\n    handleChange: PropTypes.func,\r\n    handleSearch: PropTypes.func,\r\n    placeholder: PropTypes.string,\r\n};\r\nSearchAnimateDiv.defaultProps = {\r\n    value: '',\r\n    placeholder: 'Search...',\r\n}\r\n\r\n//\r\nfunction SearchAnimateDiv(props) {\r\n    const { value, placeholder, handleChange, handleSearch } = props;\r\n    //\r\n    const [is_open, setIsOpen] = useState(false);\r\n\r\n    //\r\n    function onClick() {\r\n        if (is_open) {\r\n            handleSearch();\r\n        } else {\r\n            setIsOpen(true);\r\n        }\r\n    }\r\n    //\r\n    function handleClose() {\r\n        setIsOpen(false);\r\n    }\r\n\r\n    //\r\n    function onChange(e) {\r\n        handleChange(e.target.value);\r\n    }\r\n    //\r\n    function onKeyDown(e) {\r\n        if (e.keyCode == 13) {\r\n            e.preventDefault();\r\n            handleSearch();\r\n        }\r\n    }\r\n    //\r\n    function handleClear() {\r\n        handleChange('');\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div className={`SearchAnimateDiv position-rel ${is_open ? '' : 'SearchAnimateDiv_close'}`}>\r\n            <div className=\"SearchAnimateDiv_key\">\r\n                <div\r\n                    className={`SearchAnimateDiv_key-contain display-flex justify-content-center align-items-center cursor-pointer ${\r\n                        is_open ? 'nav-active' : ''\r\n                    }`}\r\n                    onClick={onClick}\r\n                >\r\n                    <IconsInput y={200} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"SearchAnimateDiv_input\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    placeholder={placeholder}\r\n                    onChange={onChange}\r\n                    onKeyDown={onKeyDown}\r\n                />\r\n\r\n                <div\r\n                    className=\"SearchAnimateDiv_input-clear\"\r\n                    onClick={handleClear}\r\n                >\r\n                    <IconsArrow y={400} size_icon=\"0.8rem\" />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"SearchAnimateDiv_right\">\r\n                <div className=\"SearchAnimateDiv_icon-close display-flex justify-content-center align-items-center\">\r\n                    <div\r\n                        className=\"close-icon-small brs-50 cursor-pointer\"\r\n                        onClick={handleClose}\r\n                    >\r\n                        <IconsArrow y={400} size_icon=\"1rem\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchAnimateDiv;\r\n","import { API_Post_L } from '../../../api/api_django/user/user_post/UserPost';\r\n//\r\nimport { params_new_feed_post_l } from '../__params/NewFeedParams';\r\n\r\n//\r\nexport async function handle_API_NewFeedPost_L(c_count, params={}) {\r\n    const res = await API_Post_L({\r\n        ...params_new_feed_post_l,\r\n        c_count: c_count,\r\n        ...params,\r\n    });\r\n    \r\n    return res.data\r\n}\r\n","\r\n\r\n// \r\nexport const params_new_feed_post_l = {\r\n    page: 1,\r\n    size: 6,\r\n    is_profile: 0,\r\n}","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { useScrollDown } from '../../../_custom_hooks/useScrollDown';\r\n//\r\nimport FetchingDiv from '../../../component/some_div/fetching/FetchingDiv';\r\n//\r\nimport { initial_posts } from '../../../component/posts/__common/InitialPosts';\r\n\r\nimport Posts from '../../../component/posts/_posts/_main/PostsWs';\r\n\r\nimport { handle_API_NewFeedPost_L } from '../__handle_api/NewFeedHandleAPI';\r\n\r\nimport NewFeedSearch from '../search/NewFeedSearch';\r\n//\r\nimport './NewFeed.scss';\r\nimport './NewFeedRes.scss';\r\n\r\n//\r\nfunction NewFeed() {\r\n    //\r\n    const params_api = useRef({});\r\n\r\n    //\r\n    const [post_obj, setPostObj, getData_API_Post_first] = useScrollDown(\r\n        initial_posts,\r\n        (c_count) => handle_API_NewFeedPost_L(c_count, params_api.current)\r\n    );\r\n\r\n    const { data_arr: post_arr, is_fetching, has_fetched } = post_obj;\r\n\r\n    //\r\n    useEffect(() => {\r\n        getData_API_Post_first();\r\n    }, []);\r\n\r\n    /* ---------------------- SEARCH --------------------- */\r\n\r\n    const handleSearch = (search) => {\r\n        params_api.current = {\r\n            search: search,\r\n        }\r\n        getData_API_Post_first();\r\n        console.log(search);\r\n    };\r\n\r\n    //\r\n    return (\r\n        <div className=\"NewFeed\">\r\n            <div className=\"NewFeed_contain bg-fb\">\r\n                <div className=\"NewFeed_search\">\r\n                    <NewFeedSearch handleSearch={handleSearch} />\r\n                </div>\r\n\r\n                <div className=\"NewFeed_row\">\r\n                    <div className=\"NewFeed_col-left\"></div>\r\n\r\n                    <div className=\"NewFeed_col-center\">\r\n                        <div>\r\n                            <Posts posts={has_fetched ? post_arr : [{}]} />\r\n                        </div>\r\n\r\n                        <div className=\"width-fit-content margin-auto\">\r\n                            <FetchingDiv open_fetching={is_fetching} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"NewFeed_col-right\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nNewFeed.propTypes = {};\r\n\r\nexport default NewFeed;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport SearchAnimateDiv from '../../../component/some_div/search_animate_div/SearchAnimateDiv';\r\n//\r\nimport './NewFeedSearch.scss';\r\n\r\n//\r\nNewFeedSearch.propTypes = {\r\n    handleSearch: PropTypes.func,\r\n};\r\n\r\n//\r\nfunction NewFeedSearch(props) {\r\n    const { handleSearch } = props;\r\n    //\r\n    const [value, setValue] = useState('');\r\n\r\n    //\r\n    function handleChange(new_value) {\r\n        setValue(new_value);\r\n    }\r\n    //\r\n    function onSearch() {\r\n        handleSearch(value);\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div className=\"NewFeedSearch\">\r\n            <div>\r\n                <SearchAnimateDiv\r\n                    value={value}\r\n                    placeholder=\"Search...\"\r\n                    handleChange={handleChange}\r\n                    handleSearch={onSearch}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewFeedSearch;\r\n"],"sourceRoot":""}