{"version":3,"sources":["webpack://my_webpack/./src/_hooks/useInputDate.js","webpack://my_webpack/./src/_icons_svg/icons_eye/IconsEye.js","webpack://my_webpack/./src/_initial/register/RegistrationInitial.js","webpack://my_webpack/./src/_some_function/getDaysInMonth.js","webpack://my_webpack/./src/_some_function/makeRange.js","webpack://my_webpack/./src/api/api_django_no_token/signup/Signup.js","webpack://my_webpack/./src/component/button/button_ripple/ButtonRipple.js","webpack://my_webpack/./src/component/input/date/_main/InputDate.js","webpack://my_webpack/./src/component/input/date/day/InputDay.js","webpack://my_webpack/./src/component/input/input_password/InputPassword.js","webpack://my_webpack/./src/component/input/input_text/InputText.js","webpack://my_webpack/./src/pages/registration/_main/RegisterCommon.js","webpack://my_webpack/./src/pages/registration/one_page/Registration.js","webpack://my_webpack/./src/pages/registration/step_by_step/_main/RegisterStep.js","webpack://my_webpack/./src/pages/registration/step_by_step/account/RegisterAccount.js","webpack://my_webpack/./src/pages/registration/step_by_step/birth/RegisterBirth.js","webpack://my_webpack/./src/pages/registration/step_by_step/email/RegisterEmail.js","webpack://my_webpack/./src/pages/registration/step_by_step/name/RegisterName.js","webpack://my_webpack/./src/pages/registration/step_by_step/next_prev/RegisterNexPrev.js"],"names":["initial_day","initial_month","initial_year","useState","day","month","year","input_date_state","setInputDateState","handleChangeMonthYear","value","month_year_str","last_day","getLastDayOfMonth","handleChangeDay","e","target","handleChangeMonth","handleChangeYear","IconsEye","size_icon","x","y","close_eye","className","height","width","viewBox","stroke","fill","strokeLinecap","d","strokeWidth","cx","cy","r","x1","y1","x2","y2","propTypes","PropTypes","string","color","number","bool","defaultProps","Yup","register_step_obj","0","part","fields","form_valid","1","2","3","name_validation","register_step_count","Object","keys","length","initialValues","first_name","last_name","email","username","password","password_confirm","matches","min","max","trim","required","email_validation","account_validation","field_username","validationSchema","object","shape","oneOf","ref","name","type","label","help","max_length","Date","Array","from","_","k","start","end","SignupRequest","data","API_FakeReal","default_login","method","url","ButtonRipple","children","onClick","disabled","ripple_type","title","any","func","InputDate","min_year","max_year","invalid","title_invalid","options","makeRange","current_option","onSelectOption","InputDay","getDaysInMonth","InputPassword","field","form","placeholder","touched","errors","showError","type_password","setType","maxLength","Icon","IconsAction","InputText","is_textarea","dataList","onChange","dataListId","makeAutoHeight","list","id","map","item","index","key","array","RegisterCommon","props","localStorage","is_mobile","innerWidth","Registration","values","handleScrollSmooth","window","scroll","formData","handleScreenFetching","is_fetching","res","setUserExisted","setEmailExisted","sessionStorage","new_member","setDataUser","picture","white_person","console","log","useContext","context_api","user","username_existed","email_existed","setInvalid","ref_register_elm","useRef","useScreenFetching","useInputDate","closeMoreError","useEffect","document","documentElement","setAttribute","light_mode","Formik","onSubmit","actions","form_props","Form","autoComplete","FastField","component","startsWith","dirty","err_keys","current","querySelector","scrollIntoView","birth","preventDefault","handleErrorBeforeSubmit","RegisterStep","c_step","setCStep","handleFormValid","field_arr","handleOtherValid","is_invalid","handleNextPrevStep","is_next","new_c_step","is_valid","style","transform","RegisterAccount","RegisterBirth","RegisterEmail","RegisterName","RegisterNexPrev"],"mappings":"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","file":"static/js/4186.js","sourcesContent":["import { useState } from 'react';\r\n//\r\nimport { getLastDayOfMonth } from '../_some_function/getDaysInMonth';\r\n\r\n//\r\nexport function useInputDate({\r\n    initial_day = 1,\r\n    initial_month = 1,\r\n    initial_year = 2000,\r\n}) {\r\n    //\r\n    const [input_date_state, setInputDateState] = useState({\r\n        day: initial_day,\r\n        month: initial_month,\r\n        year: initial_year,\r\n    });\r\n\r\n    const { day, month, year } = input_date_state;\r\n\r\n    /* --------- COMMON---------- */\r\n\r\n    //\r\n    function handleChangeMonthYear(value, month_year_str = 'month' || 'year') {\r\n        const last_day =\r\n            month_year_str == 'month'\r\n                ? getLastDayOfMonth(+value, +year)\r\n                : getLastDayOfMonth(+month, +value);\r\n\r\n        setInputDateState((input_date_state) => ({\r\n            ...input_date_state,\r\n            [month_year_str]: value,\r\n            day:\r\n                input_date_state.day > last_day\r\n                    ? last_day\r\n                    : input_date_state.day,\r\n        }));\r\n    }\r\n\r\n    /* ------------------- */\r\n\r\n    //\r\n    function handleChangeDay(e) {\r\n        setInputDateState((input_date_state) => ({\r\n            ...input_date_state,\r\n            day: e.target.value,\r\n        }));\r\n    }\r\n\r\n    //\r\n    function handleChangeMonth(e) {\r\n        handleChangeMonthYear(e.target.value, 'month');\r\n    }\r\n\r\n    //\r\n    function handleChangeYear(e) {\r\n        handleChangeMonthYear(e.target.value, 'year');\r\n    }\r\n\r\n    //\r\n    return {\r\n        day,\r\n        month,\r\n        year,\r\n\r\n        handleChangeDay,\r\n        handleChangeMonth,\r\n        handleChangeYear,\r\n    };\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// import './IconsEye.scss';\r\n\r\n//\r\nIconsEye.propTypes = {\r\n    size_icon: PropTypes.string,\r\n    color: PropTypes.string,\r\n    x: PropTypes.number,\r\n    y: PropTypes.number,\r\n    close_eye: PropTypes.bool,\r\n};\r\n\r\nIconsEye.defaultProps = {\r\n    x: 0,\r\n    y: 0,\r\n    size_icon: '1.5rem',\r\n    close_eye: true,\r\n};\r\n\r\n/**\r\n    IconsEye: (x, y)\r\n        1. Eye show password: (200, 200)\r\n*/\r\nfunction IconsEye({size_icon, x, y, close_eye}){\r\n    // \r\n    return (\r\n        <svg\r\n            className=\"IconsEye\"\r\n            height={size_icon}\r\n            width={size_icon}\r\n            viewBox={`${x} ${y} 200 200`}\r\n            stroke=\"var(--black-brown)\"\r\n            fill=\"var(--black-brown)\"\r\n            strokeLinecap=\"round\"\r\n        >\r\n\r\n            {/* Eye for showing password x=200 y=200 Toggle:close_eye */}\r\n            <path\r\n                d=\"M200,300 Q300,200 400,300 Q300,400 200,300\"\r\n                fill=\"none\"\r\n                strokeWidth=\"10\"\r\n            />\r\n            <circle\r\n                className={close_eye ? 'display-none' : ''}\r\n                cx=\"300\"\r\n                cy=\"300\"\r\n                r=\"30\"\r\n            />\r\n            <g className={close_eye ? '' : 'display-none'}>\r\n                <path d=\"M200,300 Q300,350 400,300\" fill=\"none\" strokeWidth=\"20\"/>\r\n                <line x1=\"210\" y1=\"210\" x2=\"390\" y2=\"390\" strokeWidth=\"30\"/>\r\n            </g>\r\n\r\n        </svg>\r\n    );\r\n};\r\n\r\n\r\nexport default IconsEye;\r\n","import * as Yup from 'yup';\r\n\r\n//\r\nexport const register_step_obj = {\r\n    0: { part: 'name', fields: ['first_name', 'last_name'], form_valid: true },\r\n    1: { part: 'birth', fields: ['birth'], form_valid: false },\r\n    2: { part: 'email', fields: ['email'], form_valid: true },\r\n    3: { part: 'account', fields: ['username', 'password'], form_valid: true },\r\n};\r\n\r\nexport const register_step_count = Object.keys(register_step_obj).length;\r\n\r\n//\r\nexport const initialValues = {\r\n    first_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    username: '',\r\n    password: '',\r\n    password_confirm: '',\r\n};\r\n\r\n//\r\nconst name_validation = {\r\n    first_name: Yup.string()\r\n        .matches(/^\\S/, 'First name is invalid')\r\n        .min(1, 'First name is invalid')\r\n        .max(20, 'First name is invalid')\r\n        .trim('First name is invalid')\r\n        .required('First name is required'),\r\n\r\n    last_name: Yup.string()\r\n        .matches(/^\\S/, 'Last name is invalid')\r\n        .min(1, 'Last name is invalid')\r\n        .max(20, 'Last name is invalid')\r\n        .trim('Last name is invalid')\r\n        .required('Last name is required'),\r\n};\r\nconst email_validation = {\r\n    email: Yup.string()\r\n        .email('Invalid email')\r\n        .matches(/^\\S{4,30}@[a-z]mail\\.com$/, 'Invalid email')\r\n        .required('Email is required'),\r\n};\r\nconst account_validation = {\r\n    username: Yup.string()\r\n        .matches(/^[a-zA-Z0-9]{5,15}$/, 'Username is invalid')\r\n        .required('Username is required'),\r\n\r\n    password: Yup.string()\r\n        .matches(/^[a-zA-Z0-9]{5,15}$/, 'Password is invalid')\r\n        .matches(/[A-Z]/, 'Password is invalid')\r\n        .required('Password is required'),\r\n};\r\n\r\nexport const validationSchema = Yup.object().shape({\r\n    ...name_validation,\r\n    ...email_validation,\r\n    ...account_validation,\r\n\r\n    password_confirm: Yup.string()\r\n        .oneOf([Yup.ref('password'), null], 'Password is not right')\r\n        .required('Confirm password is required'),\r\n});\r\n\r\n//\r\nexport const field_username = {\r\n    name: 'username',\r\n    type: 'text',\r\n    label: 'Username',\r\n    help: '5-15 english letters and no space',\r\n    max_length: 15,\r\n};\r\n\r\nconst field_password = {\r\n    name: 'password',\r\n    type: 'password',\r\n    label: 'Password',\r\n    help: '5-15 english letters, no space and at least 1 uppercase letter',\r\n    max_length: 15,\r\n};\r\n\r\nconst field_password_confirm = {\r\n    name: 'password_confirm',\r\n    type: 'password',\r\n    label: 'Password confirm',\r\n    help: 'Confirm your password',\r\n    max_length: 15,\r\n};\r\n\r\nconst field_email = {\r\n    name: 'email',\r\n    type: 'email',\r\n    label: 'Email',\r\n    help: '****@*mail.com',\r\n};\r\n\r\nconst field_first_name = {\r\n    name: 'first_name',\r\n    type: 'text',\r\n    label: 'First name',\r\n    help: '1-20 letters, spaces and start with a letter',\r\n    max_length: 20,\r\n};\r\n\r\nconst field_last_name = {\r\n    name: 'last_name',\r\n    type: 'text',\r\n    label: 'Last name',\r\n    help: '1-15 letters, spaces and start with a letter',\r\n    max_length: 15,\r\n};\r\n\r\n//\r\nexport const fields = [\r\n    field_username,\r\n    field_password,\r\n    field_password_confirm,\r\n    field_email,\r\n    field_first_name,\r\n    field_last_name,\r\n];\r\n","//\r\nexport function getLastDayOfMonth(month, year) {\r\n    if (month == 12) {\r\n        return 31;\r\n    }\r\n\r\n    return (\r\n        (new Date(`${year}-${+month + 1}`) - new Date(`${year}-${month}`)) /\r\n        86400000\r\n    );\r\n}\r\n\r\n//\r\nexport function getDaysInMonth(month, year) {\r\n    const last_day = getLastDayOfMonth(+month, +year);\r\n\r\n    return Array.from({ length: last_day }, (_, k) => k + 1);\r\n}\r\n","//\r\nexport function makeRange(start = 0, end = 1) {\r\n    return Array.from({ length: end - start }, (_, k) => k + start);\r\n}\r\n","import axiosClientNoToken from '../_axios/AxiosNoToken';\r\n//\r\nimport { API_FakeReal, csrftoken } from '../../_ConstAPI';\r\nimport { default_login } from '../../../_default/login/DefaultLogin';\r\n\r\n// registration\r\nexport const SignupRequest = (data) =>\r\n    API_FakeReal(\r\n        default_login,\r\n        () => axiosClientNoToken({\r\n            method: 'POST',\r\n            data: data,\r\n            url: '/registration/sign-up/',\r\n        })\r\n    );\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport './ButtonRipple.scss';\r\n\r\n//\r\nButtonRipple.propTypes = {\r\n    type: PropTypes.string,\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    ripple_type: PropTypes.string,\r\n\r\n    children: PropTypes.any,\r\n    onClick: PropTypes.func,\r\n};\r\n\r\nButtonRipple.defaultProps = {\r\n    title: '',\r\n    type: 'text',\r\n    ripple_type: 'right',\r\n    disabled: false,\r\n};\r\n\r\n/**\r\n * ripple_type is one of ['right', 'left', 'center']\r\n */\r\nfunction ButtonRipple({\r\n    children,\r\n    onClick,\r\n    type,\r\n    disabled,\r\n    ripple_type,\r\n    title,\r\n}) {\r\n    //\r\n    return (\r\n        <button\r\n            className={`ButtonRipple btn label-field ${\r\n                disabled ? 'opacity-05 pointer-events-none' : 'cursor-pointer'\r\n            }`}\r\n            type={type}\r\n            title={title}\r\n            disabled={disabled}\r\n            onClick={onClick}\r\n        >\r\n            <div\r\n                className={`ButtonRipple_common ButtonRipple_${ripple_type} ${\r\n                    disabled ? 'display-none' : ''\r\n                }`}\r\n            />\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default ButtonRipple;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { makeRange } from '../../../../_some_function/makeRange';\r\n//\r\nimport InputDay from '../day/InputDay';\r\nimport Select from '../../select/Select';\r\n//\r\nimport './InputDate.scss';\r\n\r\n//\r\nInputDate.propTypes = {};\r\n\r\n//\r\nfunction InputDate({\r\n    day,\r\n    month,\r\n    year,\r\n\r\n    min_year,\r\n    max_year,\r\n\r\n    invalid,\r\n    title_invalid,\r\n\r\n    handleChangeDay,\r\n    handleChangeMonth,\r\n    handleChangeYear,\r\n}) {\r\n    //\r\n    return (\r\n        <div className=\"InputDate\">\r\n            <div>\r\n                <div className=\"InputDate_row display-flex align-items-center\">\r\n                    <div className=\"InputDate_item\">\r\n                        <div className=\"InputDate_item-contain\">\r\n                            <InputDay\r\n                                day={day}\r\n                                month={month}\r\n                                year={year}\r\n                                handleChangeDay={handleChangeDay}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"InputDate_item\">\r\n                        <div className=\"InputDate_item-contain\">\r\n                            <Select\r\n                                options={makeRange(1, 13)}\r\n                                current_option={month}\r\n                                onSelectOption={handleChangeMonth}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"InputDate_item\">\r\n                        <div className=\"InputDate_item-contain\">\r\n                            <Select\r\n                                options={makeRange(min_year, max_year + 1)}\r\n                                current_option={year}\r\n                                onSelectOption={handleChangeYear}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {invalid ? (\r\n                <div className=\"text-red font-12px font-italic\">\r\n                    {title_invalid ? title_invalid : 'Date is invalid!'}\r\n                </div>\r\n            ) : (\r\n                <div></div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputDate;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { getDaysInMonth } from '../../../../_some_function/getDaysInMonth';\r\n//\r\nimport Select from '../../select/Select';\r\n\r\n//\r\nInputDay.propTypes = {};\r\n\r\n//\r\nfunction InputDay({ month, year, day, handleChangeDay }) {\r\n    //\r\n    const options = getDaysInMonth(month, year);\r\n\r\n    //\r\n    return (\r\n        <Select\r\n            options={options}\r\n            current_option={day}\r\n            onSelectOption={handleChangeDay}\r\n        />\r\n    );\r\n}\r\n\r\nexport default InputDay;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport IconsEye from '../../../_icons_svg/icons_eye/IconsEye';\r\nimport IconsAction from '../../../_icons_svg/icons_action/IconsAction';\r\n//\r\nimport IconDiv from '../../some_div/icon_div/IconDiv';\r\n//\r\nimport './InputPassword.scss';\r\n\r\n//\r\nInputPassword.propTypes = {\r\n    field: PropTypes.object,\r\n    form: PropTypes.object,\r\n    label: PropTypes.string,\r\n    max_length: PropTypes.number,\r\n    placeholder: PropTypes.string,\r\n};\r\n\r\nInputPassword.defaultProps = {\r\n    max_length: 15,\r\n};\r\n\r\n//\r\nfunction InputPassword({ field, form, label, placeholder, max_length, help }) {\r\n    //\r\n    const { name } = field;\r\n    const { touched, errors } = form;\r\n    const showError = touched[name] && errors[name];\r\n\r\n    //\r\n    const [type_password, setType] = useState(true);\r\n\r\n    //\r\n    const ChangeTypePassword = () => {\r\n        setType(!type_password);\r\n    };\r\n\r\n    //\r\n    return (\r\n        <div>\r\n            <div>\r\n                <label className=\"label-field\">{label}</label>\r\n            </div>\r\n\r\n            <div className=\"InputPassword_password position-rel\">\r\n                <input\r\n                    className={`InputPassword_input w-100per padding-8px brs-5px ${\r\n                        touched[name] && !errors[name]\r\n                            ? 'InputPassword_valid'\r\n                            : ''\r\n                    } ${\r\n                        touched[name] && !!errors[name]\r\n                            ? 'InputPassword_invalid'\r\n                            : ''\r\n                    }`}\r\n                    {...field}\r\n                    maxLength={max_length}\r\n                    placeholder={placeholder}\r\n                    type={type_password ? 'password' : 'text'}\r\n                />\r\n\r\n                <div className=\"InputPassword__eye\">\r\n                    <div onClick={ChangeTypePassword}>\r\n                        <IconsEye x={200} y={200} close_eye={type_password} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {help && (\r\n                <div className=\"help-text\">\r\n                    <IconDiv Icon={IconsAction} x={600}>\r\n                        * {help}\r\n                    </IconDiv>\r\n                </div>\r\n            )}\r\n\r\n            {showError && (\r\n                <div className=\"error-field\">\r\n                    <IconDiv Icon={IconsAction} x={400} y={400}>\r\n                        {errors[name]}\r\n                    </IconDiv>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputPassword;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n//\nimport { makeAutoHeight } from '../../../_some_function/makeAutoHeight';\n//\nimport IconDiv from '../../some_div/icon_div/IconDiv';\nimport IconsAction from '../../../_icons_svg/icons_action/IconsAction';\n//\nimport './InputText.scss';\n\n//\nInputText.propTypes = {\n    // formik\n    field: PropTypes.object,\n    form: PropTypes.object,\n    //\n    is_textarea: PropTypes.bool,\n    type: PropTypes.string,\n    label: PropTypes.string,\n    placeholder: PropTypes.string,\n    dataList: PropTypes.array,\n    help: PropTypes.string,\n    max_length: PropTypes.number,\n};\n\nInputText.defaultProps = {\n    is_textarea: false,\n    dataList: [],\n    type: 'text',\n};\n\n//\nfunction InputText({\n    field,\n    form,\n\n    is_textarea,\n    type,\n    label,\n    placeholder,\n    dataList,\n    help,\n    max_length,\n}) {\n    //\n    const { name, onChange } = field;\n    const { touched, errors } = form;\n    const showError = touched[name] && errors[name];\n    const dataListId = `list_${name}_${label}`;\n\n    //\n    function handleChange(e) {\n        onChange(e);\n        makeAutoHeight(e);\n    }\n\n    //\n    return (\n        <div className=\"InputText\">\n            <div>\n                <label className=\"label-field\">{label}</label>\n            </div>\n\n            <div>\n                {is_textarea ? (\n                    <textarea\n                        className={`InputText_input InputText_textarea scroll-thin brs-5px ${\n                            touched[name] && !errors[name]\n                                ? 'InputText_valid'\n                                : ''\n                        } ${\n                            touched[name] && !!errors[name]\n                                ? 'InputText_invalid'\n                                : ''\n                        }`}\n                        {...field}\n                        onChange={handleChange}\n                        placeholder={placeholder}\n                        type={type}\n                        maxLength={max_length}\n                    />\n                ) : (\n                    <input\n                        className={`InputText_input brs-5px ${\n                            touched[name] && !errors[name]\n                                ? 'InputText_valid'\n                                : ''\n                        } ${\n                            touched[name] && !!errors[name]\n                                ? 'InputText_invalid'\n                                : ''\n                        }`}\n                        {...field}\n                        placeholder={placeholder}\n                        type={type}\n                        list={dataListId}\n                        maxLength={max_length}\n                    />\n                )}\n            </div>\n\n            <datalist id={dataListId}>\n                {dataList.map((item, index) => (\n                    <option key={`InputText_${index}`}>{item}</option>\n                ))}\n            </datalist>\n\n            {help && (\n                <div className=\"InputText_help help-text\">\n                    <IconDiv Icon={IconsAction} x={600}>\n                        *{help}\n                    </IconDiv>\n                </div>\n            )}\n\n            {showError && (\n                <div className=\"InputText_help_error error-field\">\n                    <IconDiv Icon={IconsAction} x={400} y={400}>\n                        {errors[name]}\n                    </IconDiv>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default InputText;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport Registration from '../one_page/Registration';\r\nimport RegisterStep from '../step_by_step/_main/RegisterStep';\r\n\r\n//\r\nRegisterCommon.propTypes = {};\r\n\r\n//\r\nfunction RegisterCommon(props) {\r\n    return (\r\n        <div>\r\n            <div>\r\n                {localStorage.is_mobile == 1 && innerWidth <= 400 ? (\r\n                    <RegisterStep />\r\n                ) : (\r\n                    <Registration />\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterCommon;\r\n","import React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport { Formik, Form, FastField } from 'formik';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { context_api } from '../../../_context/ContextAPI';\r\n//\r\nimport { SignupRequest } from '../../../api/api_django_no_token/signup/Signup';\r\n//\r\nimport { useScreenFetching } from '../../../_hooks/UseScreenFetching';\r\nimport { useInputDate } from '../../../_hooks/useInputDate';\r\n//\r\nimport makeFormData from '../../../_some_function/makeFormData';\r\nimport { handleScrollSmooth } from '../../../_some_function/handleScrollSmooth';\r\n//\r\nimport IconsAction from '../../../_icons_svg/icons_action/IconsAction';\r\n//\r\nimport ButtonRipple from '../../../component/button/button_ripple/ButtonRipple';\r\nimport IconDiv from '../../../component/some_div/icon_div/IconDiv';\r\nimport FetchingDiv from '../../../component/some_div/fetching/FetchingDiv';\r\nimport InputText from '../../../component/input/input_text/InputText';\r\nimport InputPassword from '../../../component/input/input_password/InputPassword';\r\n//\r\nimport {\r\n    fields,\r\n    initialValues,\r\n    validationSchema,\r\n} from '../../../_initial/register/RegistrationInitial';\r\n//\r\nimport InputDate from '../../../component/input/date/_main/InputDate';\r\n//\r\nimport white_person from '../../../../image/white_person.svg';\r\nimport './Registration.scss';\r\n\r\n//\r\nRegistration.propTypes = {};\r\n\r\n//\r\nfunction Registration(props) {\r\n    //\r\n    const { user, setDataUser } = useContext(context_api);\r\n\r\n    //\r\n    const [username_existed, setUserExisted] = useState(false);\r\n    const [email_existed, setEmailExisted] = useState(false);\r\n    const [invalid, setInvalid] = useState(false);\r\n\r\n    //\r\n    const ref_register_elm = useRef(null);\r\n\r\n    //\r\n    const handleScreenFetching = useScreenFetching();\r\n\r\n    const {\r\n        day,\r\n        month,\r\n        year,\r\n\r\n        handleChangeDay,\r\n        handleChangeMonth,\r\n        handleChangeYear,\r\n    } = useInputDate({});\r\n\r\n    //\r\n    useEffect(() => {\r\n        document.title = 'Registration';\r\n        document.documentElement.setAttribute('data-theme', 'light');\r\n\r\n        return () => {\r\n            localStorage.light_mode != 1 &&\r\n                document.documentElement.setAttribute('data-theme', 'dark');\r\n        };\r\n    }, []);\r\n\r\n    //\r\n    function handleErrorBeforeSubmit(e, form_props) {\r\n        if (form_props.dirty) {\r\n            const err_keys = Object.keys(form_props.errors);\r\n\r\n            if (err_keys.length) {\r\n                handleScrollSmooth(() => {\r\n                    ref_register_elm.current\r\n                        .querySelector(`[name=${err_keys[0]}]`)\r\n                        .scrollIntoView(false);\r\n                });\r\n            }\r\n        }\r\n\r\n        //\r\n        const birth = new Date(year, month, day);\r\n\r\n        if (birth > new Date() || birth <= new Date(1960)) {\r\n            setInvalid(true);\r\n\r\n            e.preventDefault();\r\n        }\r\n    }\r\n\r\n    //\r\n    async function onSubmit(values) {\r\n        handleScrollSmooth(() => {\r\n            window.scroll(0, 0);\r\n        });\r\n\r\n        const { username, password, email } = values;\r\n\r\n        const first_name = values.first_name.trim();\r\n        const last_name = values.last_name.trim();\r\n\r\n        const formData = makeFormData({\r\n            username: username,\r\n            password: password,\r\n            email: email,\r\n            first_name: first_name,\r\n            last_name: last_name,\r\n            day: day,\r\n            month: month,\r\n            year: year,\r\n        });\r\n\r\n        try {\r\n            const res = await handleScreenFetching(\r\n                () => SignupRequest(formData),\r\n                <FetchingDiv is_fetching={true} />\r\n            );\r\n            const data = res.data;\r\n\r\n            if (data == 'username_existed') {\r\n                setUserExisted(true);\r\n            } else if (data == 'email_existed') {\r\n                setEmailExisted(true);\r\n            } else {\r\n                sessionStorage.new_member = first_name + ' ' + last_name;\r\n\r\n                setDataUser({\r\n                    id: data.id,\r\n                    first_name: first_name,\r\n                    last_name: last_name,\r\n                    picture: white_person,\r\n                });\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    //\r\n    function closeMoreError() {\r\n        username_existed && setUserExisted(false);\r\n        email_existed && setEmailExisted(false);\r\n        invalid && setInvalid(false);\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div ref={ref_register_elm}>\r\n            <Formik\r\n                initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={(values, actions) => {\r\n                    onSubmit(values);\r\n                }}\r\n            >\r\n                {(form_props) => (\r\n                    <Form\r\n                        autoComplete=\"off\"\r\n                        className=\"Registration_form App_Form brs-5px-md padding-8px\"\r\n                        onClick={closeMoreError}\r\n                    >\r\n                        <h2 className=\"App_title margin-0\">Sign up</h2>{' '}\r\n                        <hr className=\"App_hr-bg\" />\r\n                        <div\r\n                            className={`Registration_error text-red ${\r\n                                username_existed || email_existed\r\n                                    ? ''\r\n                                    : 'display-none'\r\n                            }`}\r\n                        >\r\n                            <IconDiv Icon={IconsAction} x={400} y={400}>\r\n                                {username_existed ? 'Username' : 'Email'} was\r\n                                existed\r\n                            </IconDiv>\r\n                        </div>\r\n                        <div>\r\n                            {fields.map((item, index) => (\r\n                                <div\r\n                                    key={`Registration_${index}`}\r\n                                    className=\"Registration_input\"\r\n                                >\r\n                                    <FastField\r\n                                        name={item.name}\r\n                                        component={\r\n                                            item.name.startsWith('password')\r\n                                                ? InputPassword\r\n                                                : InputText\r\n                                        }\r\n                                        label={item.label}\r\n                                        placeholder={`${item.label}...`}\r\n                                        help={item.help}\r\n                                        max_length={item.max_length}\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n\r\n                            <div>\r\n                                <div>\r\n                                    <div className=\"label-field\">Birth day</div>\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <InputDate\r\n                                        day={day}\r\n                                        month={month}\r\n                                        year={year}\r\n                                        //\r\n                                        min_year={1960}\r\n                                        max_year={2021}\r\n                                        //\r\n                                        invalid={invalid}\r\n                                        title_invalid=\"Birth must be from 1960 to now\"\r\n                                        //\r\n                                        handleChangeDay={handleChangeDay}\r\n                                        handleChangeMonth={handleChangeMonth}\r\n                                        handleChangeYear={handleChangeYear}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <div className=\"App_submit display-flex-center\">\r\n                            <ButtonRipple\r\n                                type=\"submit\"\r\n                                onClick={(e) =>\r\n                                    handleErrorBeforeSubmit(e, form_props)\r\n                                }\r\n                            >\r\n                                Sign up\r\n                            </ButtonRipple>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Registration;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Form, Formik } from 'formik';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { context_api } from '../../../../_context/ContextAPI';\r\n//\r\nimport { SignupRequest } from '../../../../api/api_django_no_token/signup/Signup';\r\n//\r\nimport { useScreenFetching } from '../../../../_hooks/UseScreenFetching';\r\nimport { useInputDate } from '../../../../_hooks/useInputDate';\r\n//\r\nimport makeFormData from '../../../../_some_function/makeFormData';\r\nimport { handleScrollSmooth } from '../../../../_some_function/handleScrollSmooth';\r\n//\r\nimport IconsAction from '../../../../_icons_svg/icons_action/IconsAction';\r\n//\r\nimport IconDiv from '../../../../component/some_div/icon_div/IconDiv';\r\nimport FetchingDiv from '../../../../component/some_div/fetching/FetchingDiv';\r\n//\r\nimport {\r\n    initialValues,\r\n    register_step_count,\r\n    register_step_obj,\r\n    validationSchema,\r\n} from '../../../../_initial/register/RegistrationInitial';\r\n//\r\nimport './RegisterStepCommon.scss';\r\n//\r\nimport RegisterBirth from '../birth/RegisterBirth';\r\nimport RegisterName from '../name/RegisterName';\r\nimport RegisterEmail from '../email/RegisterEmail';\r\nimport RegisterAccount from '../account/RegisterAccount';\r\nimport RegisterNexPrev from '../next_prev/RegisterNexPrev';\r\n//\r\nimport white_person from '../../../../../image/white_person.svg';\r\nimport './RegisterStep.scss';\r\n\r\n//\r\nRegisterStep.propTypes = {};\r\n\r\n//\r\nfunction RegisterStep() {\r\n    //\r\n    const { setDataUser } = useContext(context_api);\r\n\r\n    //\r\n    const [username_existed, setUserExisted] = useState(false);\r\n    const [email_existed, setEmailExisted] = useState(false);\r\n    const [invalid, setInvalid] = useState(false);\r\n    const [c_step, setCStep] = useState(0);\r\n\r\n    //\r\n    const handleScreenFetching = useScreenFetching();\r\n\r\n    const {\r\n        day,\r\n        month,\r\n        year,\r\n\r\n        handleChangeDay,\r\n        handleChangeMonth,\r\n        handleChangeYear,\r\n    } = useInputDate({});\r\n\r\n    //\r\n    useEffect(() => {\r\n        document.title = 'Registration';\r\n        document.documentElement.setAttribute('data-theme', 'light');\r\n\r\n        return () => {\r\n            localStorage.light_mode != 1 &&\r\n                document.documentElement.setAttribute('data-theme', 'dark');\r\n        };\r\n    }, []);\r\n\r\n    /* -------- COMMON -------- */\r\n\r\n    //\r\n    function handleFormValid(form_props) {\r\n        const field_arr = register_step_obj[c_step].fields;\r\n\r\n        for (const field of field_arr) {\r\n            if (form_props.errors[field] || !form_props.touched[field]) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    //\r\n    function handleValidBirth() {\r\n        const birth = new Date(year, month, day);\r\n        const is_invalid = birth > new Date() || birth <= new Date(1960);\r\n\r\n        setInvalid(is_invalid);\r\n        return !is_invalid;\r\n    }\r\n\r\n    //\r\n    function handleOtherValid() {\r\n        if (register_step_obj[c_step].part == 'birth') {\r\n            return handleValidBirth();\r\n        }\r\n    }\r\n\r\n    /* ----------------- */\r\n\r\n    //\r\n    function handleNextPrevStep(form_props, is_next = true) {\r\n        const new_c_step = c_step + (is_next ? 1 : -1);\r\n\r\n        if (new_c_step < 0 || new_c_step >= register_step_count) {\r\n            return;\r\n        }\r\n\r\n        if (!is_next) {\r\n            setCStep(c_step - 1);\r\n\r\n            return;\r\n        }\r\n\r\n        const is_valid = register_step_obj[c_step].form_valid\r\n            ? handleFormValid(form_props)\r\n            : handleOtherValid();\r\n\r\n        is_valid && setCStep(c_step + 1);\r\n    }\r\n\r\n    //\r\n    async function onSubmit(values) {\r\n        handleScrollSmooth(() => {\r\n            window.scroll(0, 0);\r\n        });\r\n\r\n        const { username, password, email } = values;\r\n\r\n        const first_name = values.first_name.trim();\r\n        const last_name = values.last_name.trim();\r\n\r\n        const formData = makeFormData({\r\n            username: username,\r\n            password: password,\r\n            email: email,\r\n            first_name: first_name,\r\n            last_name: last_name,\r\n            day: day,\r\n            month: month,\r\n            year: year,\r\n        });\r\n\r\n        try {\r\n            const res = await handleScreenFetching(\r\n                () => SignupRequest(formData),\r\n                <FetchingDiv is_fetching={true} />\r\n            );\r\n            const data = res.data;\r\n\r\n            if (data == 'username_existed') {\r\n                setUserExisted(true);\r\n            } else if (data == 'email_existed') {\r\n                setEmailExisted(true);\r\n            } else {\r\n                sessionStorage.new_member = first_name + ' ' + last_name;\r\n\r\n                setDataUser({\r\n                    id: data.id,\r\n                    first_name: first_name,\r\n                    last_name: last_name,\r\n                    picture: white_person,\r\n                });\r\n            }\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    //\r\n    function closeMoreError() {\r\n        username_existed && setUserExisted(false);\r\n        email_existed && setEmailExisted(false);\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div>\r\n            <div>\r\n                <Formik\r\n                    initialValues={initialValues}\r\n                    validationSchema={validationSchema}\r\n                    onSubmit={(values, actions) => {\r\n                        onSubmit(values);\r\n                    }}\r\n                >\r\n                    {(form_props) => (\r\n                        <Form\r\n                            autoComplete=\"off\"\r\n                            className=\"RegistrationStep_form App_Form brs-5px-md padding-8px\"\r\n                            onClick={closeMoreError}\r\n                        >\r\n                            <div>\r\n                                <h2 className=\"App_title margin-0\">Sign up</h2>{' '}\r\n                                <hr className=\"App_hr-bg\" />\r\n                                <div\r\n                                    className={`RegistrationStep_error text-red ${\r\n                                        username_existed || email_existed\r\n                                            ? ''\r\n                                            : 'display-none'\r\n                                    }`}\r\n                                >\r\n                                    <IconDiv Icon={IconsAction} x={400} y={400}>\r\n                                        {username_existed\r\n                                            ? 'Username'\r\n                                            : 'Email'}{' '}\r\n                                        was existed\r\n                                    </IconDiv>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div>\r\n                                <div\r\n                                    className=\"RegistrationStep_row display-flex\"\r\n                                    style={{\r\n                                        transform: `translateX(${\r\n                                            (-100 * c_step) / 4\r\n                                        }%)`,\r\n                                    }}\r\n                                >\r\n                                    <div className=\"RegistrationStep_part\">\r\n                                        <div\r\n                                            className={`${\r\n                                                c_step == 0\r\n                                                    ? ''\r\n                                                    : 'display-none'\r\n                                            }`}\r\n                                        >\r\n                                            <RegisterName />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"RegistrationStep_part\">\r\n                                        <div\r\n                                            className={`${\r\n                                                c_step == 1\r\n                                                    ? ''\r\n                                                    : 'display-none'\r\n                                            }`}\r\n                                        >\r\n                                            <RegisterBirth\r\n                                                day={day}\r\n                                                month={month}\r\n                                                year={year}\r\n                                                //\r\n                                                min_year={1960}\r\n                                                max_year={2021}\r\n                                                //\r\n                                                invalid={invalid}\r\n                                                title_invalid=\"Birth must be from 1960 to now\"\r\n                                                //\r\n                                                handleChangeDay={\r\n                                                    handleChangeDay\r\n                                                }\r\n                                                handleChangeMonth={\r\n                                                    handleChangeMonth\r\n                                                }\r\n                                                handleChangeYear={\r\n                                                    handleChangeYear\r\n                                                }\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"RegistrationStep_part\">\r\n                                        <div\r\n                                            className={`${\r\n                                                c_step == 2\r\n                                                    ? ''\r\n                                                    : 'display-none'\r\n                                            }`}\r\n                                        >\r\n                                            <RegisterEmail />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"RegistrationStep_part\">\r\n                                        <div\r\n                                            className={`${\r\n                                                c_step == 3\r\n                                                    ? ''\r\n                                                    : 'display-none'\r\n                                            }`}\r\n                                        >\r\n                                            <RegisterAccount />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <br />\r\n\r\n                            <RegisterNexPrev\r\n                                c_step={c_step}\r\n                                form_props={form_props}\r\n                                handleNextPrevStep={handleNextPrevStep}\r\n                            />\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterStep;\r\n","import React from 'react';\r\nimport { FastField } from 'formik';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport InputText from '../../../../component/input/input_text/InputText';\r\nimport InputPassword from '../../../../component/input/input_password/InputPassword';\r\n\r\n//\r\nRegisterAccount.propTypes = {};\r\n\r\n//\r\nfunction RegisterAccount() {\r\n    //\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2 className=\"register-part-title\">Account to login</h2>\r\n\r\n                <div>\r\n                    <div>\r\n                        Username and password has 5-15 letters, numbers and no\r\n                        spaces. Password has at least a upper letter\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <div className=\"register-part-item\">\r\n                        <FastField\r\n                            name=\"username\"\r\n                            component={InputText}\r\n                            label=\"\"\r\n                            placeholder=\"username\"\r\n                            max_length={15}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"register-part-item\">\r\n                        <FastField\r\n                            name=\"password\"\r\n                            component={InputPassword}\r\n                            label=\"\"\r\n                            placeholder=\"password\"\r\n                            max_length={15}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"register-part-item\">\r\n                        <FastField\r\n                            name=\"password_confirm\"\r\n                            component={InputPassword}\r\n                            label=\"\"\r\n                            placeholder=\"password confirm\"\r\n                            max_length={15}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterAccount;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport InputDate from '../../../../component/input/date/_main/InputDate';\r\n\r\n//\r\nRegisterBirth.propTypes = {};\r\n\r\n//\r\nfunction RegisterBirth({\r\n    day,\r\n    month,\r\n    year,\r\n\r\n    invalid,\r\n\r\n    handleChangeDay,\r\n    handleChangeMonth,\r\n    handleChangeYear,\r\n}) {\r\n    //\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2 className=\"register-part-title\">When were you born?</h2>\r\n\r\n                <div>\r\n                    <div>\r\n                        Birth must be from 1960 to now\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"register-part-item\">\r\n                    <InputDate\r\n                        day={day}\r\n                        month={month}\r\n                        year={year}\r\n                        //\r\n                        min_year={1960}\r\n                        max_year={2021}\r\n                        //\r\n                        invalid={invalid}\r\n                        title_invalid=\"Birth must be from 1960 to now\"\r\n                        //\r\n                        handleChangeDay={handleChangeDay}\r\n                        handleChangeMonth={handleChangeMonth}\r\n                        handleChangeYear={handleChangeYear}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterBirth;\r\n","import React from 'react';\r\nimport { FastField } from 'formik';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport InputText from '../../../../component/input/input_text/InputText';\r\n\r\n//\r\nRegisterEmail.propTypes = {};\r\n\r\n//\r\nfunction RegisterEmail() {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2 className=\"register-part-title\">Your email</h2>\r\n\r\n                <div>\r\n                    <div>Email must like \"**@gmail.com\"</div>\r\n                </div>\r\n\r\n                <div className=\"register-part-item\">\r\n                    <FastField\r\n                        name=\"email\"\r\n                        component={InputText}\r\n                        label=\"\"\r\n                        placeholder=\"email\"\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterEmail;\r\n","import React from 'react';\r\nimport { FastField } from 'formik';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport InputText from '../../../../component/input/input_text/InputText';\r\n\r\n//\r\nRegisterName.propTypes = {};\r\n\r\n//\r\nfunction RegisterName() {\r\n    //\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h2 className=\"register-part-title\">What is your name?</h2>\r\n\r\n                <div>\r\n                    <div>\r\n                        Last name and first name has 1-20 letters, spaces and\r\n                        start with a letter\r\n                    </div>\r\n                </div>\r\n\r\n                <div>\r\n                    <div className=\"register-part-item\">\r\n                        <FastField\r\n                            name=\"first_name\"\r\n                            component={InputText}\r\n                            label=\"\"\r\n                            placeholder=\"first name\"\r\n                            max_length={20}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"register-part-item\">\r\n                        <FastField\r\n                            name=\"last_name\"\r\n                            component={InputText}\r\n                            label=\"\"\r\n                            placeholder=\"last name\"\r\n                            max_length={20}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterName;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport ButtonRipple from '../../../../component/button/button_ripple/ButtonRipple';\r\n// \r\nimport { register_step_count } from '../../../../_initial/register/RegistrationInitial';\r\n//\r\nimport './RegisterNexPrev.scss';\r\n\r\n//\r\nRegisterNexPrev.propTypes = {};\r\n\r\n//\r\nfunction RegisterNexPrev({ c_step, form_props, handleNextPrevStep }) {\r\n    //\r\n    return (\r\n        <div>\r\n            <div className=\"display-flex\">\r\n                <div\r\n                    className={`RegisterNexPrev_btn btn btn-active w-100per text-align-center text-white ${\r\n                        c_step == 0 ? 'display-none' : ''\r\n                    }`}\r\n                    onClick={() => handleNextPrevStep(form_props, false)}\r\n                >\r\n                    <div className=\"padding-8px bg-blue brs-5px\">\r\n                        <strong>Prev</strong>\r\n                    </div>\r\n                </div>\r\n\r\n                {c_step == register_step_count - 1 ? (\r\n                    <div className=\"RegisterNexPrev_btn App_submit w-100per\">\r\n                        <ButtonRipple type=\"submit\">Sign up</ButtonRipple>\r\n                    </div>\r\n                ) : (\r\n                    <div\r\n                        className=\"RegisterNexPrev_btn btn btn-active w-100per text-align-center text-white\"\r\n                        onClick={() => handleNextPrevStep(form_props)}\r\n                    >\r\n                        <div className=\"padding-8px bg-blue brs-5px\">\r\n                            <strong>Next</strong>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterNexPrev;\r\n"],"sourceRoot":""}