{"version":3,"sources":["webpack://my_webpack/./src/component/overlap_pics/_main/OverlapPics.js","webpack://my_webpack/./src/component/overlap_pics/item/OverlapPicsItem.js","webpack://my_webpack/./src/component/separate_line_scroll_toggle/SeparateLineScrollToggle.js","webpack://my_webpack/./src/pages/group/pc/_components/_layout/_main/GroupLayout.js","webpack://my_webpack/./src/pages/group/pc/_components/_layout/left/_main/GroupLayoutLeft.js","webpack://my_webpack/./src/pages/group/pc/pages/discover/_main/GroupDiscover.js","webpack://my_webpack/./src/pages/group/pc/pages/discover/right/_main/GroupDiscoverRight.js","webpack://my_webpack/./src/pages/group/pc/pages/discover/right/more_suggestions/GroupDiscoverMoreSuggestions.js","webpack://my_webpack/./src/pages/group/pc/pages/discover/right/row/GroupDiscoverRow.js"],"names":["OverlapPics","pic_arr","has_more","ItemComponent","item_props","clickMore","className","item","onClick","size_icon","color","slice","map","ix","key","propTypes","PropTypes","array","bool","func","object","defaultProps","OverlapPicsItem","src","picture","alt","SeparateLineScrollToggle","ref_scroll_elm","useBool","is_true","setIsTrue","handleScroll","e","target","scrollTop","useEffect","current","addEventListener","removeEventListener","GroupLayout","children","ref_scroll","useRef","GroupLayoutLeft","ref","GroupDiscover","props","GroupDiscoverRight","title","info","params_api","type","link_all","GroupDiscoverMoreSuggestions","getData_API","is_max","observerShowMore","fake_elm_end","ref_fake_elm","rootMargin","way_scroll","margin","ref_main_elm","useObserverShowMore","handle_API_L","c_count","handle_API_FbGroupSuggested_L","params","size","data_state","data_arr","has_fetched","getData_API_AtFirst","id","name","member_count","post_count","post_unit","friend_arr","friend_count","has_more_friend","BtnElm","GroupDiscoverRow","useState","setHasFetched","Link","to","handleFetched"],"mappings":"sUAAA,U,IACA,U,IAEA,U,IAEA,U,mDAoBA,SAASA,EAAT,GAQG,IAPCC,EAOD,EAPCA,QACAC,EAMD,EANCA,SAEAC,EAID,EAJCA,cACAC,EAGD,EAHCA,WAEAC,EACD,EADCA,UAGA,OACI,+BAAKC,UAAU,wBACVJ,GACG,+BAAKI,UAAU,oBACX,+BAAKA,UAAU,gCACX,wBAACH,EAAD,GAAeI,KAAMN,EAAQ,IAAQG,IAErC,+BACIE,UAAU,0DACVE,QAASH,GAET,wBAAC,UAAD,CACII,UAAU,OACVC,MAAM,yBAOzBT,EAAQU,MAAMT,EAAW,EAAI,GAAGU,KAAI,SAACL,EAAMM,GAAP,OACjC,+BAAKC,IAAKD,EAAIP,UAAU,oBACpB,+BAAKA,UAAU,wBACX,wBAACH,EAAD,GAAeI,KAAMA,GAAUH,UAnDvD,SAGAJ,EAAYe,UAAY,CACpBd,QAASe,UAAUC,MACnBf,SAAUc,UAAUE,KAEpBf,cAAea,UAAUG,KACzBf,WAAYY,UAAUI,OACtBf,UAAWW,UAAUG,MAGzBnB,EAAYqB,aAAe,CACvBlB,cAAemB,UACflB,WAAY,I,UA6CDJ,G,8EClEf,I,IAAA,U,mDAOA,SAASsB,EAAT,GAAmC,IAARf,EAAQ,EAARA,KAEvB,OACI,+BACID,UAAU,iDACViB,IAAKhB,EAAKiB,QACVC,IAAI,K,EAZhB,UAGAH,EAAgBP,UAAY,G,UAcbO,G,8EClBf,e,OAGA,G,EAFA,UAEA,U,mDAMA,SAASI,EAAT,GAAsD,IAAlBC,EAAkB,EAAlBA,eAAkB,GAEnB,IAAAC,WAAvBC,EAF0C,EAE1CA,QAASC,EAFiC,EAEjCA,UAkBjB,SAASC,EAAaC,GAClBF,EAAUE,EAAEC,OAAOC,UAAY,GAInC,OApBA,IAAAC,YAAU,WAGN,OAFAR,EAAeS,QAAQC,iBAAiB,SAAUN,GAE3C,WACHJ,EAAeS,SACXT,EAAeS,QAAQE,oBACnB,SACAP,MAGb,IAWC,+BACIzB,UAAA,2CACIuB,EAAU,GAAK,kBA/B/BH,EAAyBX,UAAY,G,UAqCtBW,G,8EC3Cf,e,YACA,U,EAEA,W,mDAMA,SAASa,EAAT,GAAmC,IAAZC,EAAY,EAAZA,SAEbC,GAAa,IAAAC,QAAO,MAG1B,OACI,+BAAKpC,UAAU,eACX,+BAAKA,UAAU,gBACX,+BAAKA,UAAU,kDACX,wBAAC,UAAD,CAAiBmC,WAAYA,KAGjC,+BAAKnC,UAAU,iCAAiCkC,KAfhED,EAAYxB,UAAY,G,UAqBTwB,G,8EC3Bf,I,IAAA,U,KACA,U,EAEA,W,IACA,S,IACA,U,IACA,U,IACA,U,mDAMA,SAASI,EAAT,GAAyC,IAAdF,EAAc,EAAdA,WAEvB,OACI,+BAAKnC,UAAU,kDACX,mCACI,wBAAC,UAAD,OAGJ,+BAAKA,UAAU,iBACX,wBAAC,UAAD,CAA0BqB,eAAgBc,KAG9C,+BACIG,IAAKH,EACLnC,UAAU,2DAEV,mCACI,wBAAC,UAAD,CAAoBqB,eAAgBc,KAGxC,mCACI,wBAAC,UAAD,CAAiBA,WAAYA,KAGjC,mCACI,wBAAC,UAAD,CAAiBA,WAAYA,OA5BjDE,EAAgB5B,UAAY,G,UAmCb4B,G,8EC7Cf,I,IAAA,U,KACA,U,EAEA,W,IACA,U,mDAQA,SAASE,EAAcC,GAEnB,OACI,+BAAKxC,UAAU,iBACX,wBAAC,UAAD,KACI,+BAAKA,UAAU,wCACX,wBAAC,UAAD,SAZpB,SAGAuC,EAAc9B,UAAY,G,UAgBX8B,G,8ECzBf,I,IAAA,U,KACA,U,EAEA,W,IACA,U,mDAQA,SAASE,EAAmBD,GAExB,OACI,+BAAKxC,UAAU,sBACX,mCACI,wBAAC,UAAD,CACI0C,MAAM,oBACNC,KAAK,qCACLC,WAAY,CAAEC,KAAM,aACpBC,SAAS,sCAIjB,+BAAK9C,UAAU,gCAEf,mCACI,wBAAC,UAAD,CACI0C,MAAM,kBACNC,KAAK,8BACLC,WAAY,CAAEC,KAAM,gBACpBC,SAAS,yCAIjB,+BAAK9C,UAAU,gCAEf,mCACI,wBAAC,UAAD,QAjChB,SAGAyC,EAAmBhC,UAAY,G,UAoChBgC,G,8EC7Cf,e,OAGA,G,EAFA,UAEA,UAEA,U,IAEA,U,mDAQA,SAASM,EAAT,GAA0C,I,EAAA,K,EAAA,yBA4BtC,6GACUC,IADV,OAGSC,EAAOnB,SACRoB,EAAiB,CACbC,aAAcC,EAAatB,QAC3BuB,WAAY,oBACZC,WAAY,YACZC,OAAQ,MARpB,+CA5BsC,E,4QAAA,6C,2EAAA,IAEtC,IAAMC,GAAe,IAAApB,QAAO,MACtBgB,GAAe,IAAAhB,QAAO,MAHU,GAOlC,IAAAqB,qBAAoB,CAChBC,aAAc,SAACC,GAAD,OACV,IAAAC,+BAA8B,CAC1BD,QAASA,EACTE,OAAQ,CACJC,KAAM,EACNjB,KAAM,yBAPlBkB,EAN8B,EAM9BA,WAAYd,EANkB,EAMlBA,OAAQC,EANU,EAMVA,iBAAkBF,EANR,EAMQA,YAYtCgB,EAA0BD,EAA1BC,SAwBR,OAxBkCD,EAAhBE,aAGlB,IAAApC,YAAU,WACNqC,MACD,IAoBC,+BACI5B,IAAKkB,EACLxD,UAAU,wCAEV,8BAAIA,UAAU,0FAAd,oBAIA,8BAAIA,UAAU,oCACTgE,EAAS1D,KAAI,SAACL,EAAMM,GAAP,OACV,8BACIC,IAAKP,EAAKkE,GACVnE,UAAU,uEAEV,wBAAC,UAAD,CACImE,GAAIlE,EAAKkE,GACTC,KAAMnE,EAAKmE,KACXlD,QAASjB,EAAKiB,QAEdmD,aAAcpE,EAAKoE,aACnBC,WAAYrE,EAAKqE,WACjBC,UAAWtE,EAAKsE,UAEhBC,WAAYvE,EAAKuE,WACjBC,aAAcxE,EAAKwE,aACnBC,gBAAiBzE,EAAKyE,gBAEtBC,OACI,+BAAK3E,UAAU,qCAAf,qBAUnBiD,EAAOnB,QAAU,KACd,+BAAK9B,UAAU,6CAGnB,+BAAKsC,IAAKc,EAAcpD,UAAU,iBA3F9C,SAGA+C,EAA6BtC,UAAY,G,UA6F1BsC,G,kFCzGf,W,OACA,W,KACA,U,EAEA,S,mDAQA,SAAS6B,EAAT,GAAiE,IAArClC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,KAAMG,EAAwB,EAAxBA,SAAUF,EAAc,EAAdA,WAAc,E,2YAAA,EAExB,IAAAiC,WAAS,GAFe,GAEtDZ,EAFsD,KAEzCa,EAFyC,KAY7D,OACI,+BAAK9E,UAAU,oBACX,+BAAKA,UAAU,4CACX,+BAAKA,UAAU,uBACX,8BAAIA,UAAU,6CAA6C0C,GAE3D,wBAAC,EAAAqC,KAAD,CAAMC,GAAIlC,GAAV,YAGJ,+BAAK9C,UAAU,kDAAkD2C,IAGrE,+BAAK3C,UAAciE,EAAc,GAAK,gBAClC,wBAAC,UAAD,CACIrB,WAAYA,EACZ+B,OACI,+BAAK3E,UAAU,qCAAf,cAIJiF,cAzBhB,WACIH,GAAc,OA4BTb,EAAc,KACX,+BAAKjE,UAAU,kCA3C/B,SAGA4E,EAAiBnE,UAAY,G,UA8CdmE,G","file":"static/js/1329.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport IconThreeDot from '../../../_icons_svg/icon_three_dot/IconThreeDot';\r\n//\r\nimport OverlapPicsItem from '../item/OverlapPicsItem';\r\n//\r\nimport './OverlapPics.scss';\r\n\r\n//\r\nOverlapPics.propTypes = {\r\n    pic_arr: PropTypes.array,\r\n    has_more: PropTypes.bool,\r\n\r\n    ItemComponent: PropTypes.func,\r\n    item_props: PropTypes.object,\r\n    clickMore: PropTypes.func,\r\n};\r\n\r\nOverlapPics.defaultProps = {\r\n    ItemComponent: OverlapPicsItem,\r\n    item_props: {}\r\n};\r\n\r\n//\r\nfunction OverlapPics({\r\n    pic_arr,\r\n    has_more,\r\n\r\n    ItemComponent,\r\n    item_props,\r\n\r\n    clickMore,\r\n}) {\r\n    //\r\n    return (\r\n        <div className=\"flex-end row-reverse\">\r\n            {has_more && (\r\n                <div className=\"OverlapPics_item\">\r\n                    <div className=\"OverlapPics_item_img pos-rel\">\r\n                        <ItemComponent item={pic_arr[0]} {...item_props} />\r\n\r\n                        <div\r\n                            className=\"pos-abs-0 display-flex-center wh-100 brs-50 bg-shadow-2\"\r\n                            onClick={clickMore}\r\n                        >\r\n                            <IconThreeDot\r\n                                size_icon=\"15px\"\r\n                                color=\"var(--md-bg-blur)\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {pic_arr.slice(has_more ? 1 : 0).map((item, ix) => (\r\n                <div key={ix} className=\"OverlapPics_item\">\r\n                    <div className=\"OverlapPics_item_img\">\r\n                        <ItemComponent item={item} {...item_props} />\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OverlapPics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//\r\nOverlapPicsItem.propTypes = {};\r\n\r\n//\r\nfunction OverlapPicsItem({ item }) {\r\n    //\r\n    return (\r\n        <img\r\n            className=\"OverlapPicsItem wh-100 brs-50 object-fit-cover\"\r\n            src={item.picture}\r\n            alt=\"\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default OverlapPicsItem;\r\n","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { useBool } from '../../_hooks/useBool';\r\n\r\n//\r\nSeparateLineScrollToggle.propTypes = {};\r\n\r\n//\r\nfunction SeparateLineScrollToggle({ ref_scroll_elm }) {\r\n    //\r\n    const { is_true, setIsTrue } = useBool();\r\n\r\n    //\r\n    useEffect(() => {\r\n        ref_scroll_elm.current.addEventListener('scroll', handleScroll);\r\n\r\n        return () => {\r\n            ref_scroll_elm.current &&\r\n                ref_scroll_elm.current.removeEventListener(\r\n                    'scroll',\r\n                    handleScroll\r\n                );\r\n        };\r\n    }, []);\r\n\r\n    // ----\r\n\r\n    //\r\n    function handleScroll(e) {\r\n        setIsTrue(e.target.scrollTop > 0);\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div\r\n            className={`SeparateLineScrollToggle h-1px bg-blur ${\r\n                is_true ? '' : 'display-none'\r\n            }`}\r\n        ></div>\r\n    );\r\n}\r\n\r\nexport default SeparateLineScrollToggle;\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport GroupLayoutLeft from '../left/_main/GroupLayoutLeft';\r\n\r\n//\r\nGroupLayout.propTypes = {};\r\n\r\n//\r\nfunction GroupLayout({ children }) {\r\n    //\r\n    const ref_scroll = useRef(null);\r\n\r\n    //\r\n    return (\r\n        <div className=\"GroupLayout\">\r\n            <div className=\"display-flex\">\r\n                <div className=\"GroupLayout_left flex-shrink-0 left-bar-sticky\">\r\n                    <GroupLayoutLeft ref_scroll={ref_scroll} />\r\n                </div>\r\n\r\n                <div className=\"GroupLayout_right flex-grow-1\">{children}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GroupLayout;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport GroupLayoutLeftHead from '../head/_main/GroupLayoutLeftHead';\r\nimport GroupLayoutLeftNav from '../nav/GroupLayoutLeftNav';\r\nimport GroupLeftJoined from '../joined/_main/GroupLeftJoined';\r\nimport GroupLeftManage from '../manage/_main/GroupLeftManage';\r\nimport SeparateLineScrollToggle from '../../../../../../../component/separate_line_scroll_toggle/SeparateLineScrollToggle';\r\n\r\n//\r\nGroupLayoutLeft.propTypes = {};\r\n\r\n//\r\nfunction GroupLayoutLeft({ ref_scroll }) {\r\n    //\r\n    return (\r\n        <div className=\"GroupLayoutLeft display-flex flex-col h-100per\">\r\n            <div>\r\n                <GroupLayoutLeftHead />\r\n            </div>\r\n\r\n            <div className=\"padding-x-8px\">\r\n                <SeparateLineScrollToggle ref_scroll_elm={ref_scroll} />\r\n            </div>\r\n\r\n            <div\r\n                ref={ref_scroll}\r\n                className=\"flex-grow-1 flex-basis-1rem overflow-y-auto scroll-thin\"\r\n            >\r\n                <div>\r\n                    <GroupLayoutLeftNav ref_scroll_elm={ref_scroll} />\r\n                </div>\r\n\r\n                <div>\r\n                    <GroupLeftManage ref_scroll={ref_scroll} />\r\n                </div>\r\n\r\n                <div>\r\n                    <GroupLeftJoined ref_scroll={ref_scroll} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GroupLayoutLeft;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport GroupLayout from '../../../_components/_layout/_main/GroupLayout';\r\nimport GroupDiscoverRight from '../right/_main/GroupDiscoverRight';\r\n// \r\nimport './GroupDiscover.scss';\r\n\r\n//\r\nGroupDiscover.propTypes = {};\r\n\r\n//\r\nfunction GroupDiscover(props) {\r\n    //\r\n    return (\r\n        <div className=\"GroupDiscover\">\r\n            <GroupLayout>\r\n                <div className=\"GroupDiscover_right padding-top-20px\">\r\n                    <GroupDiscoverRight />\r\n                </div>\r\n            </GroupLayout>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GroupDiscover;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport GroupDiscoverRow from '../row/GroupDiscoverRow';\r\nimport GroupDiscoverMoreSuggestions from '../more_suggestions/GroupDiscoverMoreSuggestions';\r\n//\r\nimport './GroupDiscoverRight.scss';\r\n\r\n//\r\nGroupDiscoverRight.propTypes = {};\r\n\r\n//\r\nfunction GroupDiscoverRight(props) {\r\n    //\r\n    return (\r\n        <div className=\"GroupDiscoverRight\">\r\n            <div>\r\n                <GroupDiscoverRow\r\n                    title=\"Suggested for you\"\r\n                    info=\"Groups you might be interested in.\"\r\n                    params_api={{ type: 'suggested' }}\r\n                    link_all=\"/group/categories?type=suggested\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"GroupDiscoverRight_separate\"></div>\r\n\r\n            <div>\r\n                <GroupDiscoverRow\r\n                    title=\"Friend's groups\"\r\n                    info=\"Groups your friends are in.\"\r\n                    params_api={{ type: 'friend_group' }}\r\n                    link_all=\"/group/categories?type=friend_group\"\r\n                />\r\n            </div>\r\n\r\n            <div className=\"GroupDiscoverRight_separate\"></div>\r\n\r\n            <div>\r\n                <GroupDiscoverMoreSuggestions />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GroupDiscoverRight;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { handle_API_FbGroupSuggested_L } from '../../../../../../../_handle_api/fb_group/suggested';\r\n//\r\nimport { useObserverShowMore } from '../../../../../../../_hooks/useObserverShowMore';\r\n//\r\nimport GroupCard from '../../../../../_components/group_card/_main/GroupCard';\r\n//\r\nimport './GroupDiscoverMoreSuggestions.scss';\r\n\r\n//\r\nGroupDiscoverMoreSuggestions.propTypes = {};\r\n\r\n//\r\nfunction GroupDiscoverMoreSuggestions({}) {\r\n    //\r\n    const ref_main_elm = useRef(null);\r\n    const ref_fake_elm = useRef(null);\r\n\r\n    //\r\n    const { data_state, is_max, observerShowMore, getData_API } =\r\n        useObserverShowMore({\r\n            handle_API_L: (c_count) =>\r\n                handle_API_FbGroupSuggested_L({\r\n                    c_count: c_count,\r\n                    params: {\r\n                        size: 5,\r\n                        type: 'more_suggestions',\r\n                    },\r\n                }),\r\n        });\r\n\r\n    const { data_arr, has_fetched } = data_state;\r\n\r\n    //\r\n    useEffect(() => {\r\n        getData_API_AtFirst();\r\n    }, []);\r\n\r\n    // ----\r\n\r\n    //\r\n    async function getData_API_AtFirst() {\r\n        await getData_API();\r\n\r\n        if (!is_max.current) {\r\n            observerShowMore({\r\n                fake_elm_end: ref_fake_elm.current,\r\n                rootMargin: '0px 0px 500px 0px',\r\n                way_scroll: 'to_bottom',\r\n                margin: 500,\r\n            });\r\n        }\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div\r\n            ref={ref_main_elm}\r\n            className=\"GroupDiscoverMoreSuggestions pos-rel\"\r\n        >\r\n            <h2 className=\"GroupDiscoverMoreSuggestions_title margin-bottom-16px padding-x-3px font-20px font-700\">\r\n                More suggestions\r\n            </h2>\r\n\r\n            <ul className=\"display-flex flex-wrap list-none\">\r\n                {data_arr.map((item, ix) => (\r\n                    <li\r\n                        key={item.id}\r\n                        className=\"GroupDiscoverMoreSuggestions_item w-50per padding-3px flex-shrink-0\"\r\n                    >\r\n                        <GroupCard\r\n                            id={item.id}\r\n                            name={item.name}\r\n                            picture={item.picture}\r\n                            //\r\n                            member_count={item.member_count}\r\n                            post_count={item.post_count}\r\n                            post_unit={item.post_unit}\r\n                            //\r\n                            friend_arr={item.friend_arr}\r\n                            friend_count={item.friend_count}\r\n                            has_more_friend={item.has_more_friend}\r\n                            //\r\n                            BtnElm={\r\n                                <div className=\"display-flex-center wh-100 bg-ccc\">\r\n                                    Join Group\r\n                                </div>\r\n                            }\r\n                            // removeGroupCard\r\n                        />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            {is_max.current ? null : (\r\n                <div className=\"GroupDiscoverMoreSuggestions_not_fetched\"></div>\r\n            )}\r\n\r\n            <div ref={ref_fake_elm} className=\"padding-1px\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GroupDiscoverMoreSuggestions;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport GroupRowCardsFit from '../../../../../_components/row_cards/fit/GroupRowCardsFit';\r\n//\r\nimport './GroupDiscoverRow.scss';\r\n\r\n//\r\nGroupDiscoverRow.propTypes = {};\r\n\r\n//\r\nfunction GroupDiscoverRow({ title, info, link_all, params_api }) {\r\n    //\r\n    const [has_fetched, setHasFetched] = useState(false);\r\n\r\n    // ----\r\n\r\n    //\r\n    function handleFetched() {\r\n        setHasFetched(true);\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div className=\"GroupDiscoverRow\">\r\n            <div className=\"GroupDiscoverRow_head margin-bottom-16px\">\r\n                <div className=\"flex-between-center\">\r\n                    <h2 className=\"GroupDiscoverRow_title font-20px font-700\">{title}</h2>\r\n\r\n                    <Link to={link_all}>See all</Link>\r\n                </div>\r\n\r\n                <div className=\"GroupDiscoverRow_info text-secondary font-17px\">{info}</div>\r\n            </div>\r\n\r\n            <div className={`${has_fetched ? '' : 'display-none'}`}>\r\n                <GroupRowCardsFit\r\n                    params_api={params_api}\r\n                    BtnElm={\r\n                        <div className=\"display-flex-center wh-100 bg-ccc\">\r\n                            Join Group\r\n                        </div>\r\n                    }\r\n                    handleFetched={handleFetched}\r\n                />\r\n            </div>\r\n\r\n            {has_fetched ? null : (\r\n                <div className=\"GroupDiscoverRow_not_fetched\"></div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GroupDiscoverRow;\r\n"],"sourceRoot":""}