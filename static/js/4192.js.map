{"version":3,"sources":["webpack://my_webpack/./src/_some_function/detectPasswordIsOk.js","webpack://my_webpack/./src/component/_screen_once/notice/ScreenNotice.js","webpack://my_webpack/./src/component/some_div/notice_div/NoticeDiv.js","webpack://my_webpack/./src/pages/fashion/pages/personal/_component/btn_confirm/FsPerBtnConfirm.js","webpack://my_webpack/./src/pages/fashion/pages/personal/_component/update_input/FsPerUpdateInput.js","webpack://my_webpack/./src/pages/fashion/pages/personal/right/account/change_password/_main/FsPersonalChangePass.js","webpack://my_webpack/./src/pages/fashion/pages/personal/right/account/change_password/form/FsPChangePassForm.js","webpack://my_webpack/./src/pages/fashion/pages/personal/right/account/change_password/head/FsPChangePassHead.js","webpack://my_webpack/./src/pages/fashion/pages/personal/right/account/change_password/notice/success/FsPChangePassSuccess.js"],"names":["handle_API_ProfileUser_R","password","pattern","PATTERN_PASSWORD","detectPasswordPattern","detectPasswordIsReal","is_ok","test","openScreenOnce","ComponentNotice","ScreenOneComponent","ScreenNotice","propTypes","NoticeDiv","children","className","PropTypes","element","FsPerBtnConfirm","title","type","handleConfirm","onClick","string","func","defaultProps","FsPerUpdateInput","label","value","error_message","input_props","handleChange","onChange","object","FsPersonalChangePass","props","new_pass_error","confirm_pass_error","new_pass","handleScreenFetching","old_pass","setStateObj","state_obj","old_pass_error","confirm_pass","openScreenNotice","setTimeout","closeScreenOnce","useContext","context_api","useState","useScreenFetching","key","other_state","handleChangeOldPass","e","target","handleChangeNewPass","handleChangeConfirmPass","handleForgetPass","console","log","FsPChangePassForm","FsPChangePassHead","FsPChangePassSuccess"],"mappings":"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","file":"static/js/4192.js","sourcesContent":["import { handle_API_ProfileUser_R } from '../_handle_api/profile/ProfileHandleAPI';\r\n\r\n//\r\nexport const PATTERN_PASSWORD = /^\\w{5,}$/;\r\n\r\n//\r\nexport function detectPasswordPattern(\r\n    password = '',\r\n    pattern = PATTERN_PASSWORD\r\n) {\r\n    if (pattern.test(password)) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n//\r\nexport async function detectPasswordIsReal(password = '') {\r\n    await handle_API_ProfileUser_R({});\r\n    return true;\r\n}\r\n\r\n//\r\nexport async function detectPasswordIsOk(\r\n    password = '',\r\n    pattern = PATTERN_PASSWORD\r\n) {\r\n    if (detectPasswordPattern(password, pattern)) {\r\n        const is_ok = await detectPasswordIsReal(password);\r\n\r\n        return is_ok;\r\n    }\r\n\r\n    return false;\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// \r\nimport NoticeDiv from '../../some_div/notice_div/NoticeDiv';\r\n\r\n//\r\nexport function openScreenNotice({ openScreenOnce, ComponentNotice }) {\r\n    openScreenOnce({\r\n        ScreenOneComponent: <ScreenNotice ComponentNotice={ComponentNotice} />,\r\n    });\r\n}\r\n\r\n//\r\nScreenNotice.propTypes = {};\r\n\r\n//\r\nfunction ScreenNotice({ ComponentNotice }) {\r\n    //\r\n    return <NoticeDiv>{ComponentNotice}</NoticeDiv>;\r\n}\r\n\r\nexport default ScreenNotice;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport './NoticeDiv.scss';\r\n\r\n//\r\nNoticeDiv.propTypes = {\r\n    children: PropTypes.element,\r\n};\r\n\r\n//\r\nfunction NoticeDiv({ children }) {\r\n    return <div className=\"NoticeDiv\">{children}</div>;\r\n}\r\n\r\nexport default NoticeDiv;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//\r\nFsPerBtnConfirm.propTypes = {\r\n    title: PropTypes.string,\r\n    type: PropTypes.string,\r\n    handleConfirm: PropTypes.func,\r\n};\r\n\r\nFsPerBtnConfirm.defaultProps = {\r\n    title: 'Xác nhận',\r\n    type: 'button',\r\n};\r\n\r\n//\r\nfunction FsPerBtnConfirm({ title, type, handleConfirm }) {\r\n    //\r\n    return (\r\n        <button\r\n            className=\"btn btn-hv btn-active padding-y-8px padding-x-20px brs-2px bg-fashion-red text-white text-cap cursor-pointer\"\r\n            type={type}\r\n            onClick={handleConfirm}\r\n        >\r\n            {title}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default FsPerBtnConfirm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//\r\nFsPerUpdateInput.propTypes = {\r\n    label: PropTypes.string,\r\n    value: PropTypes.string,\r\n    type: PropTypes.string,\r\n    error_message: PropTypes.string,\r\n    input_props: PropTypes.object,\r\n\r\n    handleChange: PropTypes.func,\r\n};\r\n\r\nFsPerUpdateInput.defaultProps = {\r\n    type: 'text',\r\n    input_props: {},\r\n};\r\n\r\n//\r\nfunction FsPerUpdateInput({\r\n    label,\r\n    value,\r\n    type,\r\n    error_message,\r\n    input_props,\r\n\r\n    handleChange,\r\n}) {\r\n    //\r\n    return (\r\n        <div className=\"FsPerUpdateInput\">\r\n            <div className=\"display-flex align-items-center\">\r\n                <div className=\"fs-personal-input-label\">{label}</div>\r\n\r\n                <input\r\n                    className={`fs-personal-update-input padding-8px outline-none ${\r\n                        error_message ? 'border-danger text-red' : 'border-blur'\r\n                    }`}\r\n                    type={type}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    {...input_props}\r\n                />\r\n            </div>\r\n\r\n            {error_message ? (\r\n                <div className=\"fs-personal-update-error margin-top-10px text-red\">\r\n                    {error_message}\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FsPerUpdateInput;\r\n","import React, { useContext, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { context_api } from '../../../../../../../../_context/ContextAPI';\r\n//\r\nimport {\r\n    detectPasswordIsReal,\r\n    detectPasswordPattern,\r\n} from '../../../../../../../../_some_function/detectPasswordIsOk';\r\n//\r\nimport { useScreenFetching } from '../../../../../../../../_hooks/UseScreenFetching';\r\n// \r\nimport { openScreenNotice } from '../../../../../../../../component/_screen_once/notice/ScreenNotice';\r\n//\r\nimport FsPChangePassHead from '../head/FsPChangePassHead';\r\nimport FsPChangePassForm from '../form/FsPChangePassForm';\r\nimport FsPChangePassSuccess from '../notice/success/FsPChangePassSuccess';\r\n//\r\nimport './FsPersonalChangePass.scss';\r\n\r\n//\r\nconst FsPer_initial_change_pass_state_obj = () => {\r\n    return {\r\n        old_pass: '',\r\n        new_pass: '',\r\n        confirm_pass: '',\r\n\r\n        old_pass_error: '',\r\n        new_pass_error: '',\r\n        confirm_pass_error: '',\r\n    };\r\n};\r\n\r\n//\r\nFsPersonalChangePass.propTypes = {};\r\n\r\n//\r\nfunction FsPersonalChangePass(props) {\r\n    //\r\n    const { openScreenOnce, closeScreenOnce } = useContext(context_api);\r\n\r\n    //\r\n    const [state_obj, setStateObj] = useState({\r\n        ...FsPer_initial_change_pass_state_obj(),\r\n    });\r\n\r\n    const {\r\n        old_pass,\r\n        new_pass,\r\n        confirm_pass,\r\n\r\n        old_pass_error,\r\n        new_pass_error,\r\n        confirm_pass_error,\r\n    } = state_obj;\r\n\r\n    //\r\n    const handleScreenFetching = useScreenFetching();\r\n\r\n    // ------\r\n\r\n    //\r\n    function handleChange({ key, value, other_state = {} }) {\r\n        setStateObj({\r\n            ...state_obj,\r\n            [key]: value,\r\n            ...other_state,\r\n        });\r\n    }\r\n\r\n    // ------\r\n\r\n    //\r\n    function handleChangeOldPass(e) {\r\n        handleChange({\r\n            key: 'old_pass',\r\n            value: e.target.value,\r\n        });\r\n    }\r\n\r\n    //\r\n    function handleChangeNewPass(e) {\r\n        const value = e.target.value;\r\n        const pattern_pass_is_ok = detectPasswordPattern(value);\r\n        const confirm_pass_is_ok = value == confirm_pass_error;\r\n\r\n        handleChange({\r\n            key: 'new_pass',\r\n            value: value,\r\n            other_state: {\r\n                new_pass_error: pattern_pass_is_ok\r\n                    ? ''\r\n                    : 'Mật khẩu cần ít nhất 5 kí tự chữ hoặc số',\r\n                confirm_pass_error: confirm_pass_is_ok\r\n                    ? ''\r\n                    : 'Mật khẩu không chính xác',\r\n            },\r\n        });\r\n    }\r\n\r\n    //\r\n    function handleChangeConfirmPass(e) {\r\n        const value = e.target.value;\r\n        const pattern_pass_is_ok = value == new_pass;\r\n\r\n        handleChange({\r\n            key: 'confirm_pass',\r\n            value: value,\r\n            other_state: {\r\n                confirm_pass_error: pattern_pass_is_ok\r\n                    ? ''\r\n                    : 'Mật khẩu không chính xác',\r\n            },\r\n        });\r\n    }\r\n\r\n    // --------\r\n\r\n    //\r\n    function handleForgetPass() {\r\n        console.log('forget');\r\n    }\r\n\r\n    //\r\n    async function handleConfirm() {\r\n        if (new_pass_error || confirm_pass_error || new_pass == '') {\r\n            return;\r\n        }\r\n\r\n        const pass_is_real = await handleScreenFetching(() =>\r\n            detectPasswordIsReal(old_pass)\r\n        );\r\n\r\n        if (!pass_is_real) {\r\n            setStateObj({\r\n                ...state_obj,\r\n                old_pass_error: 'Mật khẩu không chính xác!',\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        setStateObj({\r\n            ...FsPer_initial_change_pass_state_obj(),\r\n        });\r\n\r\n        openScreenNotice({\r\n            openScreenOnce: openScreenOnce,\r\n            ComponentNotice: <FsPChangePassSuccess />,\r\n        });\r\n\r\n        setTimeout(() => {\r\n            closeScreenOnce();\r\n        }, 1500);\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div className=\"FsPersonalChangePass bg-primary\">\r\n            <div>\r\n                <FsPChangePassHead />\r\n            </div>\r\n\r\n            <div className=\"FsPersonalChangePass_form\">\r\n                <FsPChangePassForm\r\n                    old_pass={old_pass}\r\n                    new_pass={new_pass}\r\n                    confirm_pass={confirm_pass}\r\n                    //\r\n                    old_pass_error={old_pass_error}\r\n                    new_pass_error={new_pass_error}\r\n                    confirm_pass_error={confirm_pass_error}\r\n                    //\r\n                    handleChangeOldPass={handleChangeOldPass}\r\n                    handleChangeNewPass={handleChangeNewPass}\r\n                    handleChangeConfirmPass={handleChangeConfirmPass}\r\n                    //\r\n                    handleForgetPass={handleForgetPass}\r\n                    handleConfirm={handleConfirm}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FsPersonalChangePass;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport FsPerBtnConfirm from '../../../../_component/btn_confirm/FsPerBtnConfirm';\r\nimport FsPerUpdateInput from '../../../../_component/update_input/FsPerUpdateInput';\r\n//\r\nimport './FsPChangePassForm.scss';\r\n\r\n//\r\nFsPChangePassForm.propTypes = {};\r\n\r\n//\r\nfunction FsPChangePassForm({\r\n    old_pass,\r\n    new_pass,\r\n    confirm_pass,\r\n\r\n    old_pass_error,\r\n    new_pass_error,\r\n    confirm_pass_error,\r\n\r\n    handleChangeOldPass,\r\n    handleChangeNewPass,\r\n    handleChangeConfirmPass,\r\n\r\n    handleForgetPass,\r\n    handleConfirm,\r\n}) {\r\n    //\r\n    return (\r\n        <div className=\"FsPChangePassForm\">\r\n            <div className=\"margin-bottom-15px display-flex align-items-center\">\r\n                <div>\r\n                    <FsPerUpdateInput\r\n                        label=\"Mật khẩu hiện tại\"\r\n                        value={old_pass}\r\n                        type=\"password\"\r\n                        error_message={old_pass_error}\r\n                        handleChange={handleChangeOldPass}\r\n                    />\r\n                </div>\r\n\r\n                <button\r\n                    className=\"margin-left-15px border-none bg-transparent text-third cursor-pointer\"\r\n                    type=\"button\"\r\n                    onClick={handleForgetPass}\r\n                >\r\n                    Quên mật khẩu?\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"margin-bottom-15px\">\r\n                <FsPerUpdateInput\r\n                    label=\"Mật khẩu mới\"\r\n                    value={new_pass}\r\n                    type=\"password\"\r\n                    error_message={new_pass_error}\r\n                    handleChange={handleChangeNewPass}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"margin-bottom-15px\">\r\n                <FsPerUpdateInput\r\n                    label=\"Xác nhận mật khẩu\"\r\n                    value={confirm_pass}\r\n                    type=\"password\"\r\n                    error_message={confirm_pass_error}\r\n                    handleChange={handleChangeConfirmPass}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"fs-personal-update-confirms padding-top-10px\">\r\n                <FsPerBtnConfirm handleConfirm={handleConfirm} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FsPChangePassForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// \r\nimport './FsPChangePassHead.scss';\r\n\r\n//\r\nFsPChangePassHead.propTypes = {};\r\n\r\n//\r\nfunction FsPChangePassHead(props) {\r\n    //\r\n    return (\r\n        <div className=\"FsPChangePassHead padding-y-18px\">\r\n            <h1 className=\"text-333 font-18px font-500 text-cap\">\r\n                Đổi mật khẩu\r\n            </h1>\r\n\r\n            <div className=\"text-555\">\r\n                Để bảo mật tài khoản, vui lòng không chia sẻ mật khẩu cho người\r\n                khác\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FsPChangePassHead;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport './FsPChangePassSuccess.scss';\r\n\r\n//\r\nFsPChangePassSuccess.propTypes = {};\r\n\r\n//\r\nfunction FsPChangePassSuccess(props) {\r\n    //\r\n    return (\r\n        <div className=\"FsPChangePassSuccess display-flex-center brs-5px bg-shadow-8 text-white font-16px\">\r\n            Mật khẩu đã được thay đổi\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FsPChangePassSuccess;\r\n"],"sourceRoot":""}