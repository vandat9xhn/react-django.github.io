{"version":3,"sources":["webpack://my_webpack/./src/component/button/button_ripple/ButtonRipple.js","webpack://my_webpack/./src/pages/city_street/pages/_add_new_city/_main/AddNewCity.js"],"names":["ButtonRipple","children","onClick","type","disabled","ripple_type","title","className","propTypes","PropTypes","string","bool","any","func","defaultProps","data","city","street","file","bg_color","formData","image","profile_model","handleScreenFetching","API_City_C","use_history","push","console","log","useHistory","useScreenFetching","useEffect","document","initialValues","handleSubmit"],"mappings":"yJAAA,I,IAAA,U,IACA,U,mDAyBA,SAASA,EAAT,GAOG,IANCC,EAMD,EANCA,SACAC,EAKD,EALCA,QACAC,EAID,EAJCA,KACAC,EAGD,EAHCA,SACAC,EAED,EAFCA,YACAC,EACD,EADCA,MAGA,OACI,kCACIC,UAAA,iCACIH,EAAW,iCAAmC,kBAElDD,KAAMA,EACNG,MAAOA,EACPF,SAAUA,EACVF,QAASA,GAET,+BACIK,UAAA,oCAA+CF,EAA/C,KACID,EAAW,eAAiB,MAGnCH,GA/Cb,SAGAD,EAAaQ,UAAY,CACrBL,KAAMM,UAAUC,OAChBJ,MAAOG,UAAUC,OACjBN,SAAUK,UAAUE,KACpBN,YAAaI,UAAUC,OAEvBT,SAAUQ,UAAUG,IACpBV,QAASO,UAAUI,MAGvBb,EAAac,aAAe,CACxBR,MAAO,GACPH,KAAM,OACNE,YAAa,QACbD,UAAU,G,UAmCCJ,G,8ECvDf,e,OACA,WAEA,WAEA,W,IAEA,UAEA,W,IAEA,U,mDAEA,S,UAGA,WAAsB,I,EAAA,K,EAAA,yBAYlB,WAA4Be,GAA5B,8GAEeC,EAAgCD,EAAhCC,KAAMC,EAA0BF,EAA1BE,OAAQC,EAAkBH,EAAlBG,KAAMC,EAAYJ,EAAZI,SAErBC,GAAW,aAAa,CAC1BJ,KAAMA,EACNC,OAAQA,EACRI,MAAOH,EACPC,SAAUA,EACVG,cAAe,IAT3B,SAYcC,GAAqB,kBAAM,IAAAC,YAAWJ,MAZpD,OAcQK,EAAYC,KAAK,gBAdzB,gDAgBQC,QAAQC,IAAR,MAhBR,wDAZkB,E,4QAAA,6CAEZH,GAAc,IAAAI,cAEdN,GAAuB,IAAAO,qBA6B7B,OA1BA,IAAAC,YAAU,WACNC,SAAS1B,MAAQ,iBAClB,IAyBC,+BAAKC,UAAU,cACX,8BAAIA,UAAU,iCAAd,4CAGA,mCAEA,mCACI,wBAAC,UAAD,CACI0B,cAAeA,gBACfC,aAAcA,Q","file":"static/js/6153.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport './ButtonRipple.scss';\r\n\r\n//\r\nButtonRipple.propTypes = {\r\n    type: PropTypes.string,\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    ripple_type: PropTypes.string,\r\n\r\n    children: PropTypes.any,\r\n    onClick: PropTypes.func,\r\n};\r\n\r\nButtonRipple.defaultProps = {\r\n    title: '',\r\n    type: 'text',\r\n    ripple_type: 'right',\r\n    disabled: false,\r\n};\r\n\r\n/**\r\n * ripple_type is one of ['right', 'left', 'center']\r\n */\r\nfunction ButtonRipple({\r\n    children,\r\n    onClick,\r\n    type,\r\n    disabled,\r\n    ripple_type,\r\n    title,\r\n}) {\r\n    //\r\n    return (\r\n        <button\r\n            className={`ButtonRipple btn label-field ${\r\n                disabled ? 'opacity-05 pointer-events-none' : 'cursor-pointer'\r\n            }`}\r\n            type={type}\r\n            title={title}\r\n            disabled={disabled}\r\n            onClick={onClick}\r\n        >\r\n            <div\r\n                className={`ButtonRipple_common ButtonRipple_${ripple_type} ${\r\n                    disabled ? 'display-none' : ''\r\n                }`}\r\n            />\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default ButtonRipple;\r\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n//\nimport { API_City_C } from '../../../../../api/api_django/api01/API01';\n// \nimport { useScreenFetching } from '../../../../../_hooks/UseScreenFetching';\n// \nimport makeFormData from '../../../../../_some_function/makeFormData';\n//\nimport { initialValues } from '../../../../../_initial/city/CityInitial';\n// \nimport MainForm from '../../../component/form_yup/_main/CityForm';\n//\nimport './AddNewCity.scss';\n\n//\nfunction AddNewCity() {\n    // \n    const use_history = useHistory()\n\n    const handleScreenFetching = useScreenFetching()\n\n    //\n    useEffect(() => {\n        document.title = 'Add new city';\n    }, []);\n\n    // \n    async function handleSubmit(data) {\n        try {\n            const {city, street, file, bg_color} = data;\n            \n            const formData = makeFormData({\n                city: city,\n                street: street,\n                image: file,\n                bg_color: bg_color,\n                profile_model: 1,\n            });\n            \n            await handleScreenFetching(() => API_City_C(formData))\n\n            use_history.push('/city-street')\n        } catch (e) {\n            console.log(e);\n        } \n    }\n\n    //\n    return (\n        <div className=\"AddNewCity\">\n            <h3 className=\"label-field text-align-center\">\n                Let's create a post about your city now!\n            </h3>\n            <br />\n\n            <div>\n                <MainForm\n                    initialValues={initialValues}\n                    handleSubmit={handleSubmit}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default AddNewCity;\n"],"sourceRoot":""}