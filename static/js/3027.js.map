{"version":3,"sources":["webpack://my_webpack/./src/_hooks/useHold.js","webpack://my_webpack/./src/_hooks/useMouseEnterLeave.js","webpack://my_webpack/./src/component/posts/common/mouse_enter_leave_info/_main/MouseEnterLeaveInfo.js","webpack://my_webpack/./src/component/posts/common/mouse_enter_leave_info/contain/MouseEnterLeaveInfoContain.js","webpack://my_webpack/./src/component/posts/common/mouse_enter_leave_info/list_people/ListPeople.js","webpack://my_webpack/./src/component/some_div/loader_div/LoaderDiv.js"],"names":["time","use_holding","time_holding_start","useState","holding","setHolding","timeout","useRef","timeout_holding","handleHolding","callback","current","setTimeout","clearTimeout","StartHold","StopHold","startMouseenter","is_mouse_enter","ref_fetched","handleOpen","ref_fetching","handleLoading","handle_API_L","data","new_count","count","ref_arr","ref_count","use_closing","time_closing","handleClose","ref_closing","useHold","forceUpdate","useForceUpdate","handleMouseenter","handleMouseleave","MouseEnterLeaveInfo","title","total_people","title_people","div_fix_width","has_list_people_component","list_people_props","ListPeopleComponent","handleOpenScreen","LoadingComponent","PeopleComponent","useBool","is_true","setIsTrue","ref_btn_elm","useMouseEnterLeave","className","ref","onClick","onMouseEnter","IS_MOBILE","undefined","onMouseLeave","data_arr","is_closing","propTypes","PropTypes","number","oneOfType","string","element","bool","object","func","defaultProps","CircleLoading","MouseEnterLeaveInfoContain","ref_contain","usePosFollowBodyOrElm","getScrollElms","window","closest","ref_base_elm","getChildWidth","getBoundingClientRect","width","is_at_body","use_scroll","use_resize","ref_is_open","ref_starting","ref_pos","calculatePos","top_or_bottom","position_y","transform_y","left_or_right","position_x","transform_x","mounted","useMounted","useEffect","callbackOpen","style","is_fetching","list_people","count_people","ListPeople","max_size","map","item","ix","key","array","first_name","last_name","LoaderDiv"],"mappings":"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","file":"static/js/3027.js","sourcesContent":["import { useRef, useState } from 'react';\r\n\r\n//\r\nexport function useHold({\r\n    time = 500,\r\n    use_holding = false,\r\n    time_holding_start = 100,\r\n}) {\r\n    //\r\n    const [holding, setHolding] = useState(false);\r\n\r\n    //\r\n    const timeout = useRef(null);\r\n    const timeout_holding = useRef(null);\r\n\r\n    //\r\n    function StartHold(callback = function () {}) {\r\n        timeout_holding.current = setTimeout(() => {\r\n            use_holding && setHolding(true);\r\n            handleHolding(callback);\r\n        }, time_holding_start);\r\n    }\r\n\r\n    //\r\n    function handleHolding(callback = function () {}) {\r\n        timeout.current = setTimeout(() => {\r\n            use_holding && setHolding(false);\r\n            timeout_holding.current && clearTimeout(timeout_holding.current);\r\n            callback();\r\n        }, time);\r\n    }\r\n\r\n    function StopHold() {\r\n        use_holding && setHolding(false);\r\n        timeout_holding.current && clearTimeout(timeout_holding.current);\r\n        timeout.current && clearTimeout(timeout.current);\r\n    }\r\n\r\n    return { holding, StartHold, StopHold };\r\n}\r\n","import { useRef } from 'react';\r\n//\r\nimport { useForceUpdate } from './UseForceUpdate';\r\nimport { useHold } from './useHold';\r\n\r\n//\r\nexport function useMouseEnterLeave({\r\n    use_closing = true,\r\n    time_closing = 200,\r\n\r\n    handle_API_L,\r\n    handleLoading,\r\n    handleOpen,\r\n    handleClose,\r\n}) {\r\n    //\r\n    const is_mouse_enter = useRef(false);\r\n\r\n    const ref_arr = useRef([]);\r\n    const ref_count = useRef(0);\r\n    const ref_fetched = useRef(false);\r\n    const ref_fetching = useRef(false);\r\n    const ref_closing = useRef(false);\r\n\r\n    //\r\n    const { StartHold, StopHold } = useHold({\r\n        time: 100,\r\n        time_holding_start: 200,\r\n    });\r\n    const forceUpdate = useForceUpdate();\r\n\r\n    // -----\r\n\r\n    //\r\n    async function handleMouseenter() {\r\n        StartHold(() => {\r\n            startMouseenter();\r\n        });\r\n    }\r\n\r\n    //\r\n    async function startMouseenter() {\r\n        is_mouse_enter.current = true;\r\n\r\n        if (ref_fetched.current) {\r\n            handleOpen();\r\n\r\n            return;\r\n        }\r\n\r\n        ref_fetching.current = true;\r\n        handleLoading();\r\n\r\n        const { data, count: new_count } = await handle_API_L();\r\n\r\n        if (is_mouse_enter.current) {\r\n            ref_arr.current = data;\r\n            ref_count.current = new_count;\r\n            ref_fetched.current = true;\r\n            ref_fetching.current = false;\r\n            handleOpen();\r\n\r\n            return;\r\n        }\r\n    }\r\n\r\n    //\r\n    function handleMouseleave() {\r\n        StopHold();\r\n\r\n        if (!ref_fetched) {\r\n            return;\r\n        }\r\n\r\n        ref_closing.current = true;\r\n        is_mouse_enter.current = false;\r\n        ref_fetching.current = false;\r\n\r\n        if (use_closing) {\r\n            forceUpdate();\r\n\r\n            setTimeout(() => {\r\n                ref_closing.current = false;\r\n                handleClose();\r\n            }, time_closing);\r\n        } else {\r\n            handleClose();\r\n        }\r\n    }\r\n\r\n    //\r\n    return {\r\n        ref_arr,\r\n        ref_count,\r\n        ref_fetching,\r\n        ref_closing,\r\n\r\n        handleMouseenter,\r\n        handleMouseleave,\r\n    };\r\n}\r\n","import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { IS_MOBILE } from '../../../../../_constant/Constant';\r\n//\r\nimport { useMouseEnterLeave } from '../../../../../_hooks/useMouseEnterLeave';\r\nimport { useForceUpdate } from '../../../../../_hooks/UseForceUpdate';\r\nimport { useBool } from '../../../../../_hooks/useBool';\r\n//\r\nimport PortalAtBody from '../../../../portal/at_body/PortalAtBody';\r\nimport CircleLoading from '../../../../waiting/circle_loading/CircleLoading';\r\n//\r\nimport MouseEnterLeaveInfoContain from '../contain/MouseEnterLeaveInfoContain';\r\n//\r\nimport './MouseEnterLeaveInfo.scss';\r\n\r\n//\r\nMouseEnterLeaveInfo.propTypes = {\r\n    count: PropTypes.number,\r\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n    total_people: PropTypes.number,\r\n    title_people: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n\r\n    has_list_people_component: PropTypes.bool,\r\n    list_people_props: PropTypes.object,\r\n    ListPeopleComponent: PropTypes.func,\r\n\r\n    handle_API_L: PropTypes.func,\r\n    handleOpenScreen: PropTypes.func,\r\n\r\n    LoadingComponent: PropTypes.func,\r\n    PeopleComponent: PropTypes.func,\r\n};\r\n\r\nMouseEnterLeaveInfo.defaultProps = {\r\n    has_list_people_component: false,\r\n    list_people_props: {},\r\n\r\n    LoadingComponent: CircleLoading,\r\n};\r\n\r\n//\r\nfunction MouseEnterLeaveInfo({\r\n    title,\r\n    count,\r\n    total_people,\r\n    title_people,\r\n\r\n    // scroll_elm,\r\n    // getChildWidth,\r\n    div_fix_width,\r\n    time_closing = 200,\r\n\r\n    has_list_people_component,\r\n    list_people_props,\r\n    ListPeopleComponent,\r\n\r\n    handle_API_L,\r\n    handleOpenScreen,\r\n    LoadingComponent,\r\n    PeopleComponent,\r\n}) {\r\n    //\r\n    const { is_true, setIsTrue } = useBool();\r\n\r\n    //\r\n    const ref_btn_elm = useRef(null);\r\n\r\n    //\r\n    const {\r\n        ref_arr,\r\n        ref_count,\r\n        ref_fetching,\r\n        ref_closing,\r\n\r\n        handleMouseenter,\r\n        handleMouseleave,\r\n    } = useMouseEnterLeave({\r\n        time_closing: time_closing,\r\n        handle_API_L: handle_API_L,\r\n\r\n        handleLoading: handleLoadingInfo,\r\n        handleOpen: handleOpenInfo,\r\n        handleClose: handleCloseInfo,\r\n    });\r\n\r\n    //\r\n    const forceUpdate = useForceUpdate();\r\n\r\n    // -----\r\n\r\n    //\r\n    function handleLoadingInfo() {\r\n        setIsTrue(true);\r\n    }\r\n\r\n    //\r\n    function handleOpenInfo() {\r\n        !is_true && setIsTrue(true);\r\n        forceUpdate();\r\n    }\r\n\r\n    //\r\n    function handleCloseInfo() {\r\n        setIsTrue(false);\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div className=\"MouseEnterLeaveInfo cursor-pointer\">\r\n            <div\r\n                ref={ref_btn_elm}\r\n                className=\"display-flex-center hv-underline\"\r\n                onClick={handleOpenScreen}\r\n                onMouseEnter={IS_MOBILE ? undefined : handleMouseenter}\r\n                onMouseLeave={IS_MOBILE ? undefined : handleMouseleave}\r\n            >\r\n                {title || count}\r\n            </div>\r\n\r\n            {is_true ? (\r\n                <PortalAtBody>\r\n                    <MouseEnterLeaveInfoContain\r\n                        // scroll_elm={scroll_elm}\r\n                        ref_btn_elm={ref_btn_elm}\r\n                        // getChildWidth={getChildWidth}\r\n                        div_fix_width={div_fix_width}\r\n                        // \r\n                        title_people={title_people}\r\n                        has_list_people_component={has_list_people_component}\r\n                        list_people_props={list_people_props}\r\n                        //\r\n                        data_arr={ref_arr.current}\r\n                        count={total_people || ref_count.current}\r\n                        ref_fetching={ref_fetching}\r\n                        is_closing={ref_closing.current}\r\n                        //\r\n                        ListPeopleComponent={ListPeopleComponent}\r\n                        LoadingComponent={LoadingComponent}\r\n                        PeopleComponent={PeopleComponent}\r\n                    />\r\n                </PortalAtBody>\r\n            ) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MouseEnterLeaveInfo;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport { useMounted } from '../../../../../_hooks/useMounted';\r\nimport { useForceUpdate } from '../../../../../_hooks/UseForceUpdate';\r\nimport { usePosFollowBodyOrElm } from '../../../../../_hooks/usePosFollowBodyOrElm';\r\n//\r\nimport LoaderDiv from '../../../../some_div/loader_div/LoaderDiv';\r\nimport ListPeople from '../list_people/ListPeople';\r\n//\r\nimport './MouseEnterLeaveInfoContain.scss';\r\n\r\n//\r\nMouseEnterLeaveInfoContain.propTypes = {};\r\n\r\n//\r\nfunction MouseEnterLeaveInfoContain({\r\n    // scroll_elm,\r\n    ref_btn_elm,\r\n    // getChildWidth,\r\n    div_fix_width,\r\n\r\n    title_people,\r\n    has_list_people_component,\r\n    list_people_props,\r\n\r\n    data_arr,\r\n    count,\r\n    ref_fetching,\r\n    is_closing,\r\n\r\n    LoadingComponent,\r\n    PeopleComponent,\r\n    ListPeopleComponent,\r\n}) {\r\n    //\r\n    const ref_contain = useRef(null);\r\n\r\n    //\r\n    const {\r\n        ref_is_open,\r\n        ref_starting,\r\n        ref_pos,\r\n\r\n        handleOpen,\r\n        handleClose,\r\n        calculatePos,\r\n    } = usePosFollowBodyOrElm({\r\n        getScrollElms: getScrollElms,\r\n        ref_base_elm: ref_btn_elm,\r\n        getChildWidth: getChildWidth,\r\n\r\n        is_at_body: true,\r\n        use_scroll: true,\r\n        use_resize: false,\r\n    });\r\n\r\n    //\r\n    const {\r\n        top_or_bottom,\r\n        position_y,\r\n        transform_y,\r\n\r\n        left_or_right,\r\n        position_x,\r\n        transform_x,\r\n    } = ref_pos.current;\r\n\r\n    //\r\n    const forceUpdate = useForceUpdate();\r\n    const mounted = useMounted();\r\n\r\n    //\r\n    useEffect(() => {\r\n        handleOpen({\r\n            callbackOpen: () => {\r\n                mounted && forceUpdate();\r\n            },\r\n        });\r\n    }, []);\r\n\r\n    // ----\r\n\r\n    //\r\n    function getScrollElms() {\r\n        return [window, ref_btn_elm.current.closest('[class~=div_fix_scroll]')];\r\n    }\r\n\r\n    //\r\n    function getChildWidth() {\r\n        return ref_contain.current\r\n            ? ref_contain.current.getBoundingClientRect().width\r\n            : 0;\r\n    }\r\n\r\n    //\r\n    return (\r\n        ref_is_open.current && (\r\n            <div\r\n                ref={ref_contain}\r\n                className={`MouseEnterLeaveInfo_contain pos-abs z-index-1 ${\r\n                    ref_starting.current ? 'opacity-0' : ''\r\n                } ${\r\n                    is_closing\r\n                        ? 'MouseEnterLeaveInfo_contain-closing opacity-0'\r\n                        : ''\r\n                }`}\r\n                style={{\r\n                    [top_or_bottom]: position_y,\r\n                    [left_or_right]: position_x,\r\n                    transform: `translate(${transform_x}, ${transform_y})`,\r\n                }}\r\n            >\r\n                {ref_fetching.current ? (\r\n                    <LoaderDiv\r\n                        LoadingComponent={LoadingComponent}\r\n                        is_fetching={true}\r\n                    />\r\n                ) : has_list_people_component ? (\r\n                    <ListPeopleComponent\r\n                        {...list_people_props}\r\n                        list_people={data_arr}\r\n                        count_people={count}\r\n                    />\r\n                ) : (\r\n                    <ListPeople\r\n                        title={title_people}\r\n                        list_people={data_arr}\r\n                        count_people={count}\r\n                        PeopleComponent={PeopleComponent}\r\n                    />\r\n                )}\r\n            </div>\r\n        )\r\n    );\r\n}\r\n\r\nexport default MouseEnterLeaveInfoContain;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport './ListPeople.scss';\r\n\r\n//\r\nListPeople.propTypes = {\r\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n    list_people: PropTypes.array,\r\n    count_people: PropTypes.number,\r\n    max_size: PropTypes.number,\r\n\r\n    PeopleComponent: PropTypes.func,\r\n};\r\n\r\nListPeople.defaultProps = {\r\n    title: '',\r\n    list_people: [],\r\n    count_people: 0,\r\n    max_size: 1,\r\n\r\n    PeopleComponent: ({ item }) => {\r\n        return (\r\n            <div className=\"text-white font-12px\">\r\n                {item.first_name} {item.last_name}\r\n            </div>\r\n        );\r\n    },\r\n};\r\n\r\n//\r\nfunction ListPeople({\r\n    title,\r\n    list_people,\r\n    count_people,\r\n    max_size,\r\n\r\n    PeopleComponent,\r\n}) {\r\n    //\r\n    return (\r\n        <div className=\"ListPeople padding-10px bg-shadow-8 brs-8px\">\r\n            {title ? (\r\n                <div className=\"padding-bottom-5px font-400 text-white text-cap\">\r\n                    {title}\r\n                </div>\r\n            ) : null}\r\n\r\n            <ul className=\"list-none\">\r\n                {list_people.map((item, ix) => (\r\n                    <li key={ix} className=\"ListPeople_item\">\r\n                        <PeopleComponent item={item} />\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            {count_people > max_size && (\r\n                <div className=\"padding-top-5px font-13px font-500 text-white\">\r\n                    {`And ${count_people - max_size} others...`}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ListPeople;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport './LoaderDiv.scss';\r\n\r\n//\r\nLoaderDiv.propTypes = {\r\n    LoadingComponent: PropTypes.func,\r\n    is_fetching: PropTypes.bool,\r\n};\r\n\r\n//\r\nfunction LoaderDiv({ LoadingComponent, is_fetching }) {\r\n    //\r\n    return (\r\n        <div\r\n            className={\r\n                is_fetching ? 'LoaderDiv bg-shadow-9 brs-5px' : 'display-none'\r\n            }\r\n        >\r\n            <div className=\"LoaderDiv_row display-flex-center\">\r\n                <LoadingComponent is_fetching={is_fetching} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoaderDiv;\r\n"],"sourceRoot":""}