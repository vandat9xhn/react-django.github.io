{"version":3,"sources":["webpack://my_webpack/./src/api/api_django/api01/API01.js","webpack://my_webpack/./src/component/button/button_ripple/ButtonRipple.js","webpack://my_webpack/./src/component/input/color/color_bg/_main/SelectColorBg.js","webpack://my_webpack/./src/component/input/color/color_bg/item/SelectColorBgItem.js","webpack://my_webpack/./src/component/input/input_text/InputText.js","webpack://my_webpack/./src/pages/city_street/__initial/CityInitial.js","webpack://my_webpack/./src/pages/city_street/component/form_yup/_main/CityForm.js","webpack://my_webpack/./src/pages/city_street/component/form_yup/input_image/InputImage.js"],"names":["API_City_C","data","API_FakeReal","url","method","API_City_UD","pk","ButtonRipple","children","onClick","type","disabled","ripple_type","title","className","propTypes","PropTypes","string","bool","any","func","defaultProps","SelectColorBg","active_ix","color_bg_arr","handleChangeColorBg","useState","is_open","setIsOpen","closeSelectColorBg","makeDivHidden","bg","color","map","item","ix","key","number","array","SelectColorBgItem","InputText","field","form","is_textarea","label","placeholder","dataList","help","max_length","name","onChange","touched","errors","showError","dataListId","e","makeAutoHeight","maxLength","list","id","index","Icon","IconsAction","x","y","object","Yup","validationSchema","shape","city","required","min","max","street","quote","image","mixed","initialValues","bg_color","city_color_bg_arr","CityForm","rest_initialValues","title_submit","handleSubmit","file","setFile","findIndex","active_color_ix","setActiveColorIx","ref_city_elm","useRef","handleImageChange","new_file","new_color_ix","Formik","onSubmit","values","action","props","Form","autoComplete","ref","FastField","component","InputImage","dirty","err","Object","keys","length","arr_err","current","querySelector","scrollIntoView","handleError","value","urls","setUrls","htmlFor","width","event","files","target","reader","FileReader","onload","result","setFieldValue","readAsDataURL","accept","deleteAnItem","delete_in_pic","onImageChange"],"mappings":"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","file":"static/js/8190.js","sourcesContent":["import { API_FakeReal } from '../../_ConstAPI';\nimport axiosDjangoClient from '../_axios/AxiosDjango';\n\n// Create\nexport const API_City_C = (data) =>\n    API_FakeReal({}, () =>\n        axiosDjangoClient({\n            url: '/api01/c-city/',\n            method: 'POST',\n            data: data,\n        })\n    );\n\n// Retrieve Update Delete\nexport const API_City_UD = (pk, method, data = {}) =>\n    API_FakeReal({}, () =>\n        axiosDjangoClient({\n            url: '/api01/ud-city/' + pk + '/',\n            method: method,\n            data: data,\n        })\n    );\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport './ButtonRipple.scss';\r\n\r\n//\r\nButtonRipple.propTypes = {\r\n    type: PropTypes.string,\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    ripple_type: PropTypes.string,\r\n\r\n    children: PropTypes.any,\r\n    onClick: PropTypes.func,\r\n};\r\n\r\nButtonRipple.defaultProps = {\r\n    title: '',\r\n    type: 'text',\r\n    ripple_type: 'right',\r\n    disabled: false,\r\n};\r\n\r\n/**\r\n * ripple_type is one of ['right', 'left', 'center']\r\n */\r\nfunction ButtonRipple({\r\n    children,\r\n    onClick,\r\n    type,\r\n    disabled,\r\n    ripple_type,\r\n    title,\r\n}) {\r\n    //\r\n    return (\r\n        <button\r\n            className={`ButtonRipple btn label-field ${\r\n                disabled ? 'opacity-05 pointer-events-none' : 'cursor-pointer'\r\n            }`}\r\n            type={type}\r\n            title={title}\r\n            disabled={disabled}\r\n            onClick={onClick}\r\n        >\r\n            <div\r\n                className={`ButtonRipple_common ButtonRipple_${ripple_type} ${\r\n                    disabled ? 'display-none' : ''\r\n                }`}\r\n            />\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default ButtonRipple;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport CloseDiv from '../../../../some_div/close_div/CloseDiv';\r\n//\r\nimport SelectColorBgItem from '../item/SelectColorBgItem';\r\n//\r\nimport './SelectColorBg.scss';\r\n\r\n//\r\nSelectColorBg.propTypes = {\r\n    active_ix: PropTypes.number,\r\n    color_bg_arr: PropTypes.array,\r\n    handleChangeColorBg: PropTypes.func,\r\n};\r\n\r\nSelectColorBg.defaultProps = {};\r\n\r\n//\r\nfunction SelectColorBg({ active_ix, color_bg_arr, handleChangeColorBg }) {\r\n    //\r\n    const [is_open, setIsOpen] = useState(false);\r\n\r\n    //\r\n    function toggleSelectColorBg() {\r\n        setIsOpen(!is_open);\r\n    }\r\n\r\n    //\r\n    function closeSelectColorBg() {\r\n        is_open && setIsOpen(false);\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div className=\"SelectColorBg position-rel\">\r\n            <CloseDiv makeDivHidden={closeSelectColorBg}>\r\n                <div>\r\n                    <div>\r\n                        <div\r\n                            className={`SelectColorBg_btn-item padding-4px text-align-center label-field cursor-pointer ${color_bg_arr[active_ix].bg} ${color_bg_arr[active_ix].color}`}\r\n                            onClick={toggleSelectColorBg}\r\n                            type=\"text\"\r\n                        >\r\n                            Color\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div\r\n                        className={`SelectColorBg_list ${\r\n                            is_open ? '' : 'display-none'\r\n                        }`}\r\n                    >\r\n                        <div onClick={closeSelectColorBg}>\r\n                            {color_bg_arr.map((item, ix) => (\r\n                                <div\r\n                                    className=\"SelectColorBg_item\"\r\n                                    key={`${ix}`}\r\n                                >\r\n                                    <SelectColorBgItem\r\n                                        ix={ix}\r\n                                        bg={item.bg}\r\n                                        color={item.color}\r\n                                        handleChangeColorBg={\r\n                                            handleChangeColorBg\r\n                                        }\r\n                                    />\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </CloseDiv>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectColorBg;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport './SelectColorBgItem.scss';\r\n\r\n//\r\nSelectColorBgItem.propTypes = {};\r\n\r\n//\r\nfunction SelectColorBgItem({ ix, color, bg, handleChangeColorBg }) {\r\n    //\r\n    function onChangeColorBg() {\r\n        handleChangeColorBg(ix);\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div\r\n            className={`SelectColorBgItem padding-4px text-align-center cursor-pointer ${bg} ${color}`}\r\n            onClick={onChangeColorBg}\r\n        >\r\n            Color\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectColorBgItem;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n//\nimport IconDiv from '../../some_div/icon_div/IconDiv';\nimport IconsAction from '../../../_icons_svg/icons_action/IconsAction';\n//\nimport TextareaNotSend from '../textarea/TextareaNotSend';\n//\nimport './InputText.scss';\nimport { makeAutoHeight } from '../../../_some_function/makeAutoHeight';\n\n//\nInputText.propTypes = {\n    // formik\n    field: PropTypes.object,\n    form: PropTypes.object,\n    //\n    is_textarea: PropTypes.bool,\n    type: PropTypes.string,\n    label: PropTypes.string,\n    placeholder: PropTypes.string,\n    dataList: PropTypes.array,\n    help: PropTypes.string,\n    max_length: PropTypes.number,\n};\n\nInputText.defaultProps = {\n    is_textarea: false,\n    dataList: [],\n    type: 'text',\n};\n\n//\nfunction InputText({\n    field,\n    form,\n\n    is_textarea,\n    type,\n    label,\n    placeholder,\n    dataList,\n    help,\n    max_length,\n}) {\n    //\n    const { name, onChange } = field;\n    const { touched, errors } = form;\n    const showError = touched[name] && errors[name];\n    const dataListId = `list_${name}_${label}`;\n\n    //\n    function handleChange(e) {\n        onChange(e);\n        makeAutoHeight(e);\n    }\n\n    //\n    return (\n        <div className=\"InputText\">\n            <div>\n                <label className=\"label-field\">{label}</label>\n            </div>\n\n            <div>\n                {is_textarea ? (\n                    <textarea\n                        className={`InputText_input InputText_textarea scroll-thin brs-5px ${\n                            touched[name] && !errors[name]\n                                ? 'InputText_valid'\n                                : ''\n                        } ${\n                            touched[name] && !!errors[name]\n                                ? 'InputText_invalid'\n                                : ''\n                        }`}\n                        {...field}\n                        onChange={handleChange}\n                        placeholder={placeholder}\n                        type={type}\n                        maxLength={max_length}\n                    />\n                ) : (\n                    <input\n                        className={`InputText_input brs-5px ${\n                            touched[name] && !errors[name]\n                                ? 'InputText_valid'\n                                : ''\n                        } ${\n                            touched[name] && !!errors[name]\n                                ? 'InputText_invalid'\n                                : ''\n                        }`}\n                        {...field}\n                        placeholder={placeholder}\n                        type={type}\n                        list={dataListId}\n                        maxLength={max_length}\n                    />\n                )}\n            </div>\n\n            <datalist id={dataListId}>\n                {dataList.map((item, index) => (\n                    <option key={`InputText_${index}`}>{item}</option>\n                ))}\n            </datalist>\n\n            {help && (\n                <div className=\"help-text\">\n                    <IconDiv Icon={IconsAction} x={600}>\n                        * {help}\n                    </IconDiv>\n                </div>\n            )}\n\n            {showError && (\n                <div className=\"error-field\">\n                    <IconDiv Icon={IconsAction} x={400} y={400}>\n                        {errors[name]}\n                    </IconDiv>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default InputText;\n","import * as Yup from 'yup';\r\n\r\n/* ------------------ FORMIK YUP--------------- */\r\n\r\n//\r\nexport const validationSchema = Yup.object().shape({\r\n    city: Yup.string()\r\n        .required('City is required')\r\n        .min(3, 'At least 3 letters')\r\n        .max(50, 'max 50 letters'),\r\n\r\n    street: Yup.string()\r\n        .required('City is required')\r\n        .min(3, 'At least 3 letters')\r\n        .max(50, 'max 50 letters'),\r\n    quote: Yup.string()\r\n        .required('Quote is required')\r\n        .min(5, 'At least 5 letters'),\r\n    // bg_color: Yup.string(),\r\n    image: Yup.mixed().required('Image is required'),\r\n});\r\n\r\n//\r\nexport const initialValues = {\r\n    city: '',\r\n    street: '',\r\n    bg_color: 'bg-primary.text-primary',\r\n    quote: '',\r\n    image: '',\r\n};\r\n","import React, { useRef, useState } from 'react';\nimport { FastField, Form, Formik } from 'formik';\nimport PropTypes from 'prop-types';\n//\nimport InputText from '../../../../../component/input/input_text/InputText';\nimport ButtonRipple from '../../../../../component/button/button_ripple/ButtonRipple';\nimport SelectColorBg from '../../../../../component/input/color/color_bg/_main/SelectColorBg';\n//\nimport { validationSchema } from '../../../__initial/CityInitial';\n//\nimport InputImage from '../input_image/InputImage';\n//\nimport './CityForm.scss';\n\n//\nconst city_color_bg_arr = [\n    {\n        color: 'text-primary',\n        bg: 'bg-primary',\n    },\n    {\n        color: 'color-react',\n        bg: 'bg-green',\n    },\n    {\n        color: 'text-secondary',\n        bg: 'bg-active-fb',\n    },\n    {\n        color: 'text-white',\n        bg: 'bg-linear-45-success-tear',\n    },\n];\n\n//\nCityForm.propTypes = {\n    initialValues: PropTypes.object,\n    title_submit: PropTypes.string,\n    handleSubmit: PropTypes.func,\n};\n\nCityForm.defaultProps = {\n    title_submit: 'Upload',\n};\n\n//\nfunction CityForm({\n    initialValues: { bg_color, ...rest_initialValues },\n    title_submit,\n    handleSubmit,\n}) {\n    //\n    const [file, setFile] = useState('');\n    const [active_color_ix, setActiveColorIx] = useState(\n        city_color_bg_arr.findIndex(\n            (item) => `${item.bg}.${item.color}` == bg_color\n        )\n    );\n\n    const color = city_color_bg_arr[active_color_ix].color;\n    const bg = city_color_bg_arr[active_color_ix].bg;\n\n    //\n    const ref_city_elm = useRef(null);\n\n    //\n    function handleImageChange(new_file) {\n        setFile(new_file);\n    }\n\n    //\n    function handleChangeColorBg(new_color_ix) {\n        new_color_ix != active_color_ix && setActiveColorIx(new_color_ix);\n    }\n\n    //\n    function handleError(err) {\n        if (Object.keys(err).length) {\n            const arr_err = Object.keys(err);\n\n            ref_city_elm.current\n                .querySelector(`[name=${arr_err[0]}]`)\n                .scrollIntoView(false);\n        }\n    }\n\n    //\n    function onSubmit(values, action) {\n        handleSubmit({\n            ...values,\n            bg_color: `${bg}.${color}`,\n            file: file,\n        });\n    }\n\n    //\n    return (\n        <Formik\n            initialValues={rest_initialValues}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n        >\n            {(props) => {\n                return (\n                    <div className={`CityForm`}>\n                        <Form\n                            className={`CityForm_contain App_Form brs-5px-md box-shadow-1 scroll-thin ${color} ${bg}`}\n                            autoComplete=\"off\"\n                        >\n                            <div ref={ref_city_elm}>\n                                <div className=\"CityForm_field\">\n                                    <FastField\n                                        name=\"city\"\n                                        component={InputText}\n                                        label=\"City\"\n                                        placeholder=\"City...\"\n                                        dataList={[\n                                            'Ha Noi',\n                                            'Ho Chi Minh',\n                                            'Da Nang',\n                                        ]}\n                                        help=\"5-50 letters\"\n                                    />\n                                </div>\n\n                                <div className=\"CityForm_field\">\n                                    <FastField\n                                        name=\"street\"\n                                        component={InputText}\n                                        label=\"Street\"\n                                        placeholder=\"Street...\"\n                                        dataList={[\n                                            'Nguyen Trai',\n                                            'Nguyen Hue',\n                                            'Quang Trung',\n                                            'Tran Phu',\n                                        ]}\n                                        help=\"5-50 letters\"\n                                    />\n                                </div>\n\n                                <div className=\"CityForm_field\">\n                                    <FastField\n                                        name=\"quote\"\n                                        component={InputText}\n                                        label=\"Quote\"\n                                        placeholder=\"Quote...\"\n                                        is_textarea={true}\n                                    />\n                                </div>\n\n                                <div className=\"CityForm_field\">\n                                    <SelectColorBg\n                                        active_ix={active_color_ix}\n                                        color_bg_arr={city_color_bg_arr}\n                                        handleChangeColorBg={\n                                            handleChangeColorBg\n                                        }\n                                    />\n                                </div>\n\n                                <div className=\"CityForm_field\">\n                                    <FastField\n                                        name=\"image\"\n                                        component={InputImage}\n                                        label=\"Image\"\n                                        handleImageChange={handleImageChange}\n                                    />\n                                </div>\n                                <br />\n\n                                <div\n                                    className={`App_submit display-flex-center  ${\n                                        props.dirty ||\n                                        `${bg}.${color}` != bg_color\n                                            ? ''\n                                            : 'pointer-events-none opacity-05'\n                                    }`}\n                                    onClick={() => handleError(props.errors)}\n                                >\n                                    <ButtonRipple\n                                        type=\"submit\"\n                                        title=\"Create new city\"\n                                    >\n                                        {title_submit}\n                                    </ButtonRipple>\n                                </div>\n                            </div>\n                        </Form>\n                    </div>\n                );\n            }}\n        </Formik>\n    );\n}\n\nexport default CityForm;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n//\nimport IconsInput from '../../../../../_icons_svg/Icons_input/IconsInput';\n// \nimport InputFile from '../../../../../component/input/input_file/InputFile';\nimport ImgVidPreview from '../../../../../component/input_img_vid_preview/img_vid_preview/ImgVidPreview';\n//\nimport './InputImage.scss';\n\n//\nInputImage.propTypes = {\n    form: PropTypes.object,\n    field: PropTypes.object,\n\n    type: PropTypes.string,\n    label: PropTypes.string,\n\n    onImageChange: PropTypes.func,\n};\n\nInputImage.defaultProps = {\n    type: 'file',\n};\n\n//\nfunction InputImage({ form, field, type, label, handleImageChange }) {\n    //\n    const { name, value } = field;\n    const { touched, errors } = form;\n    const showError = touched[name] && errors[name];\n\n    //\n    const [urls, setUrls] = useState(value ? [{ url: value, type: name }] : []);\n\n    /* -------------- IMAGE -------------*/\n\n    //\n    function onImageChange(event) {\n        const files = event.target.files;\n        //\n        if (files.length) {\n            const reader = new FileReader();\n            reader.onload = () => {\n                setUrls([{ url: reader.result, type: files[0].type }]);\n                form.setFieldValue('image', reader.result);\n            };\n            reader.readAsDataURL(files[0]);\n            handleImageChange(files[0]);\n        }\n    }\n\n    //\n    function handleDeleteAnItem() {\n        setUrls([]);\n        handleImageChange('');\n        form.setFieldValue('image', '');\n    }\n\n    //\n    return (\n        <div className=\"InputImage\">\n            <div>\n                <label className=\"label-field\" htmlFor={name}>\n                    {label}\n                </label>\n            </div>\n\n            <div className=\"InputImage_file\">\n                <InputFile\n                    width=\"2rem\"\n                    type={type}\n                    {...field}\n                    onChange={onImageChange}\n                    accept=\"image/*\"\n                >\n                    <IconsInput />\n                </InputFile>\n            </div>\n\n            {showError && <div className=\"error-field\">{showError}</div>}\n\n            <div className=\"InputImage_preview\">\n                <ImgVidPreview\n                    deleteAnItem={handleDeleteAnItem}\n                    delete_in_pic={true}\n                    urls={urls}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default InputImage;\n"],"sourceRoot":""}