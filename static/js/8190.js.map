{"version":3,"sources":["webpack://my_webpack/./src/api/api_django/api01/API01.js","webpack://my_webpack/./src/component/button/button_ripple/ButtonRipple.js","webpack://my_webpack/./src/component/input/color/InputColor.js","webpack://my_webpack/./src/component/input/input_text/InputText.js","webpack://my_webpack/./src/pages/city_street/__initial/CityInitial.js","webpack://my_webpack/./src/pages/city_street/component/form_yup/_main/CityForm.js","webpack://my_webpack/./src/pages/city_street/component/form_yup/input_image/InputImage.js"],"names":["API_City_C","data","API_FakeReal","url","method","API_City_UD","pk","ButtonRipple","children","onClick","type","disabled","ripple_type","title","className","propTypes","PropTypes","string","bool","any","func","defaultProps","InputColor","label","color","handlePickColor","value","onChange","InputText","field","form","is_textarea","placeholder","dataList","help","max_length","name","touched","errors","showError","dataListId","e","makeAutoHeight","maxLength","list","id","map","item","index","key","Icon","IconsAction","x","y","object","array","number","Yup","validationSchema","shape","city","required","min","max","street","quote","image","mixed","initialValues","bg_color","CityForm","rest_initialValues","title_submit","handleSubmit","useState","file","setFile","new_bg_color","setNewBgColor","ref_city_elm","useRef","handleImageChange","new_file","target","Formik","onSubmit","values","action","props","Form","style","backgroundColor","autoComplete","ref","FastField","component","InputImage","dirty","err","Object","keys","length","arr_err","current","querySelector","scrollIntoView","handleError","urls","setUrls","htmlFor","width","event","files","reader","FileReader","onload","result","setFieldValue","readAsDataURL","accept","deleteAnItem","delete_in_pic","onImageChange"],"mappings":"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","file":"static/js/8190.js","sourcesContent":["import { API_FakeReal } from '../../_ConstAPI';\nimport axiosDjangoClient from '../_axios/AxiosDjango';\n\n// Create\nexport const API_City_C = (data) =>\n    API_FakeReal({}, () =>\n        axiosDjangoClient({\n            url: '/api01/c-city/',\n            method: 'POST',\n            data: data,\n        })\n    );\n\n// Retrieve Update Delete\nexport const API_City_UD = (pk, method, data = {}) =>\n    API_FakeReal({}, () =>\n        axiosDjangoClient({\n            url: '/api01/ud-city/' + pk + '/',\n            method: method,\n            data: data,\n        })\n    );\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport './ButtonRipple.scss';\r\n\r\n//\r\nButtonRipple.propTypes = {\r\n    type: PropTypes.string,\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    ripple_type: PropTypes.string,\r\n\r\n    children: PropTypes.any,\r\n    onClick: PropTypes.func,\r\n};\r\n\r\nButtonRipple.defaultProps = {\r\n    title: '',\r\n    type: 'text',\r\n    ripple_type: 'right',\r\n    disabled: false,\r\n};\r\n\r\n/**\r\n * ripple_type is one of ['right', 'left', 'center']\r\n */\r\nfunction ButtonRipple({\r\n    children,\r\n    onClick,\r\n    type,\r\n    disabled,\r\n    ripple_type,\r\n    title,\r\n}) {\r\n    //\r\n    return (\r\n        <button\r\n            className={`ButtonRipple btn label-field ${\r\n                disabled ? 'opacity-05 pointer-events-none' : 'cursor-pointer'\r\n            }`}\r\n            type={type}\r\n            title={title}\r\n            disabled={disabled}\r\n            onClick={onClick}\r\n        >\r\n            <div\r\n                className={`ButtonRipple_common ButtonRipple_${ripple_type} ${\r\n                    disabled ? 'display-none' : ''\r\n                }`}\r\n            />\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default ButtonRipple;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//\r\nInputColor.propTypes = {\r\n    label: PropTypes.string,\r\n    color: PropTypes.string,\r\n    handlePickColor: PropTypes.func,\r\n};\r\n\r\nInputColor.defaultProps = {\r\n    label: 'Color',\r\n};\r\n\r\n//\r\nfunction InputColor({ label, color, handlePickColor }) {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <label className=\"label-field\">{label}</label>\r\n            </div>\r\n\r\n            <div>\r\n                <input type=\"color\" value={color} onChange={handlePickColor} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputColor;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n//\nimport IconDiv from '../../some_div/icon_div/IconDiv';\nimport IconsAction from '../../../_icons_svg/icons_action/IconsAction';\n//\nimport TextareaNotSend from '../textarea/TextareaNotSend';\n//\nimport './InputText.scss';\nimport { makeAutoHeight } from '../../../_some_function/makeAutoHeight';\n\n//\nInputText.propTypes = {\n    // formik\n    field: PropTypes.object,\n    form: PropTypes.object,\n    //\n    is_textarea: PropTypes.bool,\n    type: PropTypes.string,\n    label: PropTypes.string,\n    placeholder: PropTypes.string,\n    dataList: PropTypes.array,\n    help: PropTypes.string,\n    max_length: PropTypes.number,\n};\n\nInputText.defaultProps = {\n    is_textarea: false,\n    dataList: [],\n    type: 'text',\n};\n\n//\nfunction InputText({\n    field,\n    form,\n\n    is_textarea,\n    type,\n    label,\n    placeholder,\n    dataList,\n    help,\n    max_length,\n}) {\n    //\n    const { name, onChange } = field;\n    const { touched, errors } = form;\n    const showError = touched[name] && errors[name];\n    const dataListId = `list_${name}_${label}`;\n\n    //\n    function handleChange(e) {\n        onChange(e);\n        makeAutoHeight(e);\n    }\n\n    //\n    return (\n        <div className=\"InputText\">\n            <div>\n                <label className=\"label-field\">{label}</label>\n            </div>\n\n            <div>\n                {is_textarea ? (\n                    <textarea\n                        className={`InputText_input InputText_textarea scroll-thin brs-5px ${\n                            touched[name] && !errors[name]\n                                ? 'InputText_valid'\n                                : ''\n                        } ${\n                            touched[name] && !!errors[name]\n                                ? 'InputText_invalid'\n                                : ''\n                        }`}\n                        {...field}\n                        onChange={handleChange}\n                        placeholder={placeholder}\n                        type={type}\n                        maxLength={max_length}\n                    />\n                ) : (\n                    <input\n                        className={`InputText_input brs-5px ${\n                            touched[name] && !errors[name]\n                                ? 'InputText_valid'\n                                : ''\n                        } ${\n                            touched[name] && !!errors[name]\n                                ? 'InputText_invalid'\n                                : ''\n                        }`}\n                        {...field}\n                        placeholder={placeholder}\n                        type={type}\n                        list={dataListId}\n                        maxLength={max_length}\n                    />\n                )}\n            </div>\n\n            <datalist id={dataListId}>\n                {dataList.map((item, index) => (\n                    <option key={`InputText_${index}`}>{item}</option>\n                ))}\n            </datalist>\n\n            {help && (\n                <div className=\"help-text\">\n                    <IconDiv Icon={IconsAction} x={600}>\n                        * {help}\n                    </IconDiv>\n                </div>\n            )}\n\n            {showError && (\n                <div className=\"error-field\">\n                    <IconDiv Icon={IconsAction} x={400} y={400}>\n                        {errors[name]}\n                    </IconDiv>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default InputText;\n","import * as Yup from 'yup';\r\n\r\n/* ------------------ FORMIK YUP--------------- */\r\n\r\n//\r\nexport const validationSchema = Yup.object().shape({\r\n    city: Yup.string()\r\n        .required('City is required')\r\n        .min(3, 'At least 3 letters')\r\n        .max(50, 'max 50 letters'),\r\n\r\n    street: Yup.string()\r\n        .required('City is required')\r\n        .min(3, 'At least 3 letters')\r\n        .max(50, 'max 50 letters'),\r\n    quote: Yup.string()\r\n        .required('Quote is required')\r\n        .min(5, 'At least 5 letters'),\r\n    // bg_color: Yup.string(),\r\n    image: Yup.mixed().required('Image is required'),\r\n});\r\n\r\n//\r\nexport const initialValues = {\r\n    city: '',\r\n    street: '',\r\n    bg_color: '#ffffff',\r\n    quote: '',\r\n    image: '',\r\n};\r\n","import React, { useRef, useState } from 'react';\nimport { FastField, Form, Formik } from 'formik';\nimport PropTypes from 'prop-types';\n//\nimport InputText from '../../../../../component/input/input_text/InputText';\nimport InputColor from '../../../../../component/input/color/InputColor';\nimport ButtonRipple from '../../../../../component/button/button_ripple/ButtonRipple';\n//\nimport { validationSchema } from '../../../__initial/CityInitial';\n\nimport InputImage from '../input_image/InputImage';\n//\nimport './CityForm.scss';\n\n//\nCityForm.propTypes = {\n    initialValues: PropTypes.object,\n    title_submit: PropTypes.string,\n    handleSubmit: PropTypes.func,\n};\n\nCityForm.defaultProps = {\n    title_submit: 'Upload',\n};\n\n//\nfunction CityForm({\n    initialValues: { bg_color, ...rest_initialValues },\n    title_submit,\n    handleSubmit,\n}) {\n    //\n    const [file, setFile] = useState('');\n    const [new_bg_color, setNewBgColor] = useState(bg_color);\n\n    //\n    const ref_city_elm = useRef(null);\n\n    //\n    function handleImageChange(new_file) {\n        setFile(new_file);\n    }\n\n    //\n    function handlePickColor(e) {\n        setNewBgColor(e.target.value);\n    }\n\n    //\n    function handleError(err) {\n        if (Object.keys(err).length) {\n            const arr_err = Object.keys(err);\n\n            ref_city_elm.current\n                .querySelector(`[name=${arr_err[0]}]`)\n                .scrollIntoView(false);\n        }\n    }\n\n    //\n    function onSubmit(values, action) {\n        handleSubmit({\n            ...values,\n            bg_color: new_bg_color,\n            file: file,\n        });\n    }\n\n    //\n    return (\n        <Formik\n            initialValues={rest_initialValues}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n        >\n            {(props) => {\n                return (\n                    <Form\n                        className=\"CityForm App_Form brs-5px-md box-shadow-1 scroll-thin\"\n                        style={{ backgroundColor: new_bg_color }}\n                        autoComplete=\"off\"\n                    >\n                        <div ref={ref_city_elm}>\n                            <div className=\"CityForm_field\">\n                                <FastField\n                                    name=\"city\"\n                                    component={InputText}\n                                    label=\"City\"\n                                    placeholder=\"City...\"\n                                    dataList={[\n                                        'Ha Noi',\n                                        'Ho Chi Minh',\n                                        'Da Nang',\n                                    ]}\n                                    help=\"5-50 letters\"\n                                />\n                            </div>\n\n                            <div className=\"CityForm_field\">\n                                <FastField\n                                    name=\"street\"\n                                    component={InputText}\n                                    label=\"Street\"\n                                    placeholder=\"Street...\"\n                                    dataList={[\n                                        'Nguyen Trai',\n                                        'Nguyen Hue',\n                                        'Quang Trung',\n                                        'Tran Phu',\n                                    ]}\n                                    help=\"5-50 letters\"\n                                />\n                            </div>\n\n                            <div className=\"CityForm_field\">\n                                <FastField\n                                    name=\"quote\"\n                                    component={InputText}\n                                    label=\"Quote\"\n                                    placeholder=\"Quote...\"\n                                    is_textarea={true}\n                                />\n                            </div>\n\n                            <div className=\"CityForm_field\">\n                                <InputColor\n                                    label=\"Background color\"\n                                    color={new_bg_color}\n                                    handlePickColor={handlePickColor}\n                                />\n                            </div>\n\n                            <div className=\"CityForm_field\">\n                                <FastField\n                                    name=\"image\"\n                                    component={InputImage}\n                                    label=\"Image\"\n                                    handleImageChange={handleImageChange}\n                                />\n                            </div>\n                            <br />\n\n                            <div\n                                className={`App_submit display-flex-center  ${\n                                    props.dirty || new_bg_color != bg_color\n                                        ? ''\n                                        : 'pointer-events-none opacity-05'\n                                }`}\n                                onClick={() => handleError(props.errors)}\n                            >\n                                <ButtonRipple\n                                    type=\"submit\"\n                                    title=\"Create new city\"\n                                >\n                                    {title_submit}\n                                </ButtonRipple>\n                            </div>\n                        </div>\n                    </Form>\n                );\n            }}\n        </Formik>\n    );\n}\n\nexport default CityForm;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// \nimport ImgVidPreview from '../../../../../component/input_img_vid_preview/img_vid_preview/ImgVidPreview';\nimport InputFile from '../../../../../component/input/input_file/InputFile';\nimport IconsInput from '../../../../../_icons_svg/Icons_input/IconsInput';\n// \nimport './InputImage.scss';\n\n// \nInputImage.propTypes = {\n    // from formik\n    form: PropTypes.object,\n    field: PropTypes.object,\n    // type label\n    type: PropTypes.string,\n    label: PropTypes.string,\n    // func image change\n    onImageChange: PropTypes.func,\n};\n\nInputImage.defaultProps = {\n    type: 'file',\n};\n\n//\nfunction InputImage(props) {\n    const { form, field, type, label, handleImageChange } = props;\n\n    const { name, value } = field;\n    const { touched, errors } = form;\n    const showError = touched[name] && errors[name];\n    \n    //\n    const [urls, setUrls] = useState(value ? [{ url: value, type: name}] : []);\n\n/* ------------------- IMAGE ----------------------*/\n\n    // on image change\n    function onImageChange(event) {\n        const files = event.target.files;\n        // \n        if (files.length) {\n            const reader = new FileReader();\n            reader.onload = () => {\n                setUrls([{ url: reader.result, type: files[0].type }]);\n                form.setFieldValue('image', reader.result);\n            };\n            reader.readAsDataURL(files[0]);\n            handleImageChange(files[0]);\n        }\n    }\n\n    // delete image\n    function handleDeleteAnItem(){\n        setUrls([]);\n        handleImageChange('');\n        form.setFieldValue('image', '');\n    };\n\n    // \n    return (\n        <div className=\"InputImage\">\n            <div>\n                <label className=\"label-field\" htmlFor={name}>\n                    {label}\n                </label>\n            </div>\n\n            <div className=\"InputImage_file\">\n                <InputFile\n                    width=\"2rem\"\n                    type={type}\n                    {...field}\n                    onChange={onImageChange}\n                    accept=\"image/*\"\n                >\n                    <IconsInput />\n                </InputFile>\n            </div>\n\n            {/* error */}\n            {showError && <div className=\"error-field\">{showError}</div>}\n\n            {/* image preview */}\n            <div className=\"InputImage_preview\">\n                <ImgVidPreview\n                    deleteAnItem={handleDeleteAnItem}\n                    delete_in_pic={true}\n                    urls={urls}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default InputImage;\n"],"sourceRoot":""}