{"version":3,"sources":["webpack://my_webpack/./src/_initial/city/CityInitial.js","webpack://my_webpack/./src/api/api_django/api01/API01.js","webpack://my_webpack/./src/component/button/button_ripple/ButtonRipple.js","webpack://my_webpack/./src/component/input/color/color_bg/_main/SelectColorBg.js","webpack://my_webpack/./src/component/input/color/color_bg/item/SelectColorBgItem.js","webpack://my_webpack/./src/component/input/input_text/InputText.js","webpack://my_webpack/./src/pages/city_street/_data/bg_color.js","webpack://my_webpack/./src/pages/city_street/component/form_yup/_main/CityForm.js","webpack://my_webpack/./src/pages/city_street/component/form_yup/input_image/InputImage.js"],"names":["Yup","validationSchema","object","shape","city","string","required","min","max","street","quote","image","mixed","initialValues","bg_color","API_City_C","data","API_FakeReal","url","method","API_City_UD","pk","ButtonRipple","children","onClick","type","disabled","ripple_type","title","className","propTypes","PropTypes","bool","any","func","defaultProps","SelectColorBg","active_ix","color_bg_arr","handleChangeColorBg","useState","is_open","setIsOpen","closeSelectColorBg","makeDivHidden","bg","color","map","item","ix","key","number","array","SelectColorBgItem","InputText","field","form","is_textarea","label","placeholder","dataList","help","max_length","name","onChange","touched","errors","showError","dataListId","e","makeAutoHeight","maxLength","list","id","index","Icon","IconsAction","x","y","city_bg_color_arr","CityForm","rest_initialValues","title_submit","handleSubmit","use_has_change","detectHasChange","file","setFile","active_color_ix","setActiveColorIx","ref_city_elm","useRef","handleImageChange","new_file","new_color_ix","Formik","onSubmit","values","action","props","new_city","new_street","new_quote","Form","autoComplete","ref","FastField","component","InputImage","dirty","err","Object","keys","length","arr_err","current","querySelector","scrollIntoView","handleError","value","urls","setUrls","htmlFor","width","accept","vid_pic_key","handleChange","data_files","files","vid_pics","setFieldValue","deleteAnItem","delete_in_pic","onImageChange"],"mappings":"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","file":"static/js/8190.js","sourcesContent":["import * as Yup from 'yup';\r\n\r\n/* ------------------ FORMIK YUP--------------- */\r\n\r\n//\r\nexport const validationSchema = Yup.object().shape({\r\n    city: Yup.string()\r\n        .required('City is required')\r\n        .min(3, 'At least 3 letters')\r\n        .max(50, 'max 50 letters'),\r\n\r\n    street: Yup.string()\r\n        .required('City is required')\r\n        .min(3, 'At least 3 letters')\r\n        .max(50, 'max 50 letters'),\r\n    quote: Yup.string()\r\n        .required('Quote is required')\r\n        .min(5, 'At least 5 letters'),\r\n    // bg_color: Yup.string(),\r\n    image: Yup.mixed().required('Image is required'),\r\n});\r\n\r\n//\r\nexport const initialValues = {\r\n    city: '',\r\n    street: '',\r\n    bg_color: 0,\r\n    quote: '',\r\n    image: '',\r\n};\r\n","import { API_FakeReal } from '../../_ConstAPI';\nimport axiosDjangoClient from '../_axios/AxiosDjango';\n\n// Create\nexport const API_City_C = (data) =>\n    API_FakeReal({}, () =>\n        axiosDjangoClient({\n            url: '/api01/c-city/',\n            method: 'POST',\n            data: data,\n        })\n    );\n\n// Retrieve Update Delete\nexport const API_City_UD = (pk, method, data = {}) =>\n    API_FakeReal({}, () =>\n        axiosDjangoClient({\n            url: '/api01/ud-city/' + pk + '/',\n            method: method,\n            data: data,\n        })\n    );\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport './ButtonRipple.scss';\r\n\r\n//\r\nButtonRipple.propTypes = {\r\n    type: PropTypes.string,\r\n    title: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n    ripple_type: PropTypes.string,\r\n\r\n    children: PropTypes.any,\r\n    onClick: PropTypes.func,\r\n};\r\n\r\nButtonRipple.defaultProps = {\r\n    title: '',\r\n    type: 'text',\r\n    ripple_type: 'right',\r\n    disabled: false,\r\n};\r\n\r\n/**\r\n * ripple_type is one of ['right', 'left', 'center']\r\n */\r\nfunction ButtonRipple({\r\n    children,\r\n    onClick,\r\n    type,\r\n    disabled,\r\n    ripple_type,\r\n    title,\r\n}) {\r\n    //\r\n    return (\r\n        <button\r\n            className={`ButtonRipple btn font-500 ${\r\n                disabled ? 'opacity-05 pointer-events-none' : 'cursor-pointer'\r\n            }`}\r\n            type={type}\r\n            title={title}\r\n            disabled={disabled}\r\n            onClick={onClick}\r\n        >\r\n            <div\r\n                className={`ButtonRipple_common ButtonRipple_${ripple_type} ${\r\n                    disabled ? 'display-none' : ''\r\n                }`}\r\n            />\r\n            {children}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default ButtonRipple;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport CloseDiv from '../../../../some_div/close_div/CloseDiv';\r\n//\r\nimport SelectColorBgItem from '../item/SelectColorBgItem';\r\n//\r\nimport './SelectColorBg.scss';\r\n\r\n//\r\nSelectColorBg.propTypes = {\r\n    active_ix: PropTypes.number,\r\n    color_bg_arr: PropTypes.array,\r\n    handleChangeColorBg: PropTypes.func,\r\n};\r\n\r\nSelectColorBg.defaultProps = {};\r\n\r\n//\r\nfunction SelectColorBg({ active_ix, color_bg_arr, handleChangeColorBg }) {\r\n    //\r\n    const [is_open, setIsOpen] = useState(false);\r\n\r\n    //\r\n    function toggleSelectColorBg() {\r\n        setIsOpen(!is_open);\r\n    }\r\n\r\n    //\r\n    function closeSelectColorBg() {\r\n        is_open && setIsOpen(false);\r\n    }\r\n\r\n    //\r\n    return (\r\n        <CloseDiv makeDivHidden={closeSelectColorBg}>\r\n            <div className=\"SelectColorBg pos-rel\">\r\n                <div>\r\n                    <div\r\n                        className={`SelectColorBg_btn-item padding-4px text-align-center font-500 cursor-pointer ${color_bg_arr[active_ix].bg} ${color_bg_arr[active_ix].color}`}\r\n                        onClick={toggleSelectColorBg}\r\n                        type=\"text\"\r\n                    >\r\n                        Color\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    className={`SelectColorBg_list ${\r\n                        is_open ? '' : 'display-none'\r\n                    }`}\r\n                >\r\n                    <div onClick={closeSelectColorBg}>\r\n                        {color_bg_arr.map((item, ix) => (\r\n                            <div\r\n                                className={`SelectColorBg_item ${\r\n                                    active_ix == ix ? 'display-none' : ''\r\n                                }`}\r\n                                key={`${ix}`}\r\n                            >\r\n                                <SelectColorBgItem\r\n                                    ix={ix}\r\n                                    bg={item.bg}\r\n                                    color={item.color}\r\n                                    handleChangeColorBg={handleChangeColorBg}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </CloseDiv>\r\n    );\r\n}\r\n\r\nexport default SelectColorBg;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//\r\nimport './SelectColorBgItem.scss';\r\n\r\n//\r\nSelectColorBgItem.propTypes = {};\r\n\r\n//\r\nfunction SelectColorBgItem({ ix, color, bg, handleChangeColorBg }) {\r\n    //\r\n    function onChangeColorBg() {\r\n        handleChangeColorBg(ix);\r\n    }\r\n\r\n    //\r\n    return (\r\n        <div\r\n            className={`SelectColorBgItem padding-4px text-align-center cursor-pointer ${bg} ${color}`}\r\n            onClick={onChangeColorBg}\r\n        >\r\n            Color\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SelectColorBgItem;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n//\nimport { makeAutoHeight } from '../../../_some_function/makeAutoHeight';\n//\nimport IconDiv from '../../some_div/icon_div/IconDiv';\nimport IconsAction from '../../../_icons_svg/icons_action/IconsAction';\n//\nimport './InputText.scss';\n\n//\nInputText.propTypes = {\n    // formik\n    field: PropTypes.object,\n    form: PropTypes.object,\n    //\n    is_textarea: PropTypes.bool,\n    type: PropTypes.string,\n    label: PropTypes.string,\n    placeholder: PropTypes.string,\n    dataList: PropTypes.array,\n    help: PropTypes.string,\n    max_length: PropTypes.number,\n};\n\nInputText.defaultProps = {\n    is_textarea: false,\n    dataList: [],\n    type: 'text',\n};\n\n//\nfunction InputText({\n    field,\n    form,\n\n    is_textarea,\n    type,\n    label,\n    placeholder,\n    dataList,\n    help,\n    max_length,\n}) {\n    //\n    const { name, onChange } = field;\n    const { touched, errors } = form;\n    const showError = touched[name] && errors[name];\n    const dataListId = `list_${name}_${label}`;\n\n    //\n    function handleChange(e) {\n        onChange(e);\n        makeAutoHeight(e);\n    }\n\n    //\n    return (\n        <div className=\"InputText\">\n            <div>\n                <label className=\"font-500\">{label}</label>\n            </div>\n\n            <div>\n                {is_textarea ? (\n                    <textarea\n                        className={`InputText_input InputText_textarea scroll-thin brs-5px ${\n                            touched[name] && !errors[name]\n                                ? 'InputText_valid'\n                                : ''\n                        } ${\n                            touched[name] && !!errors[name]\n                                ? 'InputText_invalid'\n                                : ''\n                        }`}\n                        {...field}\n                        onChange={handleChange}\n                        placeholder={placeholder}\n                        type={type}\n                        maxLength={max_length}\n                    />\n                ) : (\n                    <input\n                        className={`InputText_input brs-5px ${\n                            touched[name] && !errors[name]\n                                ? 'InputText_valid'\n                                : ''\n                        } ${\n                            touched[name] && !!errors[name]\n                                ? 'InputText_invalid'\n                                : ''\n                        }`}\n                        {...field}\n                        placeholder={placeholder}\n                        type={type}\n                        list={dataListId}\n                        maxLength={max_length}\n                    />\n                )}\n            </div>\n\n            <datalist id={dataListId}>\n                {dataList.map((item, index) => (\n                    <option key={`InputText_${index}`}>{item}</option>\n                ))}\n            </datalist>\n\n            {help && (\n                <div className=\"InputText_help help-text\">\n                    <IconDiv Icon={IconsAction} x={600}>\n                        *{help}\n                    </IconDiv>\n                </div>\n            )}\n\n            {showError && (\n                <div className=\"InputText_help_error error-field\">\n                    <IconDiv Icon={IconsAction} x={400} y={400}>\n                        {errors[name]}\n                    </IconDiv>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default InputText;\n","//\r\nexport const city_bg_color_arr = [\r\n    {\r\n        bg: 'bg-primary',\r\n        color: 'text-primary',\r\n    },\r\n    {\r\n        bg: 'bg-green',\r\n        color: 'color-react',\r\n    },\r\n    {\r\n        bg: 'bg-fb-active',\r\n        color: 'text-secondary',\r\n    },\r\n    {\r\n        bg: 'bg-linear-45-success-tear',\r\n        color: 'text-white',\r\n    },\r\n];\r\n","import React, { useRef, useState } from 'react';\nimport { FastField, Form, Formik } from 'formik';\nimport PropTypes from 'prop-types';\n//\nimport InputText from '../../../../../component/input/input_text/InputText';\nimport ButtonRipple from '../../../../../component/button/button_ripple/ButtonRipple';\nimport SelectColorBg from '../../../../../component/input/color/color_bg/_main/SelectColorBg';\n//\nimport { validationSchema } from '../../../../../_initial/city/CityInitial';\nimport { city_bg_color_arr } from '../../../_data/bg_color';\n//\nimport InputImage from '../input_image/InputImage';\n//\nimport './CityForm.scss';\n\n//\nCityForm.propTypes = {\n    initialValues: PropTypes.object,\n    title_submit: PropTypes.string,\n    handleSubmit: PropTypes.func,\n    use_has_change: PropTypes.bool,\n    detectHasChange: PropTypes.func,\n};\n\nCityForm.defaultProps = {\n    title_submit: 'Upload',\n    use_has_change: false,\n};\n\n//\nfunction CityForm({\n    initialValues: { bg_color, ...rest_initialValues },\n    title_submit,\n    handleSubmit,\n    use_has_change,\n    detectHasChange,\n}) {\n    //\n    const [file, setFile] = useState('');\n    const [active_color_ix, setActiveColorIx] = useState(bg_color);\n\n    const color = city_bg_color_arr[active_color_ix].color;\n    const bg = city_bg_color_arr[active_color_ix].bg;\n\n    //\n    const ref_city_elm = useRef(null);\n\n    //\n    function handleHasChange(new_city, new_street, new_quote) {\n        if (!use_has_change) {\n            return false;\n        }\n\n        if (\n            new_city != rest_initialValues.city ||\n            new_street != rest_initialValues.street ||\n            new_quote != rest_initialValues.quote ||\n            file ||\n            active_color_ix != bg_color\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    //\n    function handleImageChange(new_file) {\n        setFile(new_file);\n    }\n\n    //\n    function handleChangeColorBg(new_color_ix) {\n        new_color_ix != active_color_ix && setActiveColorIx(new_color_ix);\n    }\n\n    //\n    function handleError(err) {\n        if (Object.keys(err).length) {\n            const arr_err = Object.keys(err);\n\n            ref_city_elm.current\n                .querySelector(`[name=${arr_err[0]}]`)\n                .scrollIntoView(false);\n        }\n    }\n\n    //\n    function onSubmit(values, action) {\n        handleSubmit({\n            ...values,\n            bg_color: active_color_ix,\n            file: file,\n        });\n    }\n\n    //\n    return (\n        <Formik\n            initialValues={rest_initialValues}\n            validationSchema={validationSchema}\n            onSubmit={onSubmit}\n        >\n            {(props) => {\n                //\n                use_has_change &&\n                    detectHasChange(\n                        handleHasChange(\n                            props.values.city,\n                            props.values.street,\n                            props.values.quote\n                        )\n                    );\n\n                //\n                return (\n                    <div className={`CityForm`}>\n                        <Form\n                            className={`CityForm_contain App_Form brs-5px-md box-shadow-1 scroll-thin ${color} ${bg}`}\n                            autoComplete=\"off\"\n                        >\n                            <div ref={ref_city_elm}>\n                                <div className=\"CityForm_field\">\n                                    <FastField\n                                        name=\"city\"\n                                        component={InputText}\n                                        label=\"City\"\n                                        placeholder=\"City...\"\n                                        dataList={[\n                                            'Ha Noi',\n                                            'Ho Chi Minh',\n                                            'Da Nang',\n                                        ]}\n                                        help=\"5-50 letters\"\n                                    />\n                                </div>\n\n                                <div className=\"CityForm_field\">\n                                    <FastField\n                                        name=\"street\"\n                                        component={InputText}\n                                        label=\"Street\"\n                                        placeholder=\"Street...\"\n                                        dataList={[\n                                            'Nguyen Trai',\n                                            'Nguyen Hue',\n                                            'Quang Trung',\n                                            'Tran Phu',\n                                        ]}\n                                        help=\"5-50 letters\"\n                                    />\n                                </div>\n\n                                <div className=\"CityForm_field\">\n                                    <FastField\n                                        name=\"quote\"\n                                        component={InputText}\n                                        label=\"Quote\"\n                                        placeholder=\"Quote...\"\n                                        is_textarea={true}\n                                    />\n                                </div>\n\n                                <div className=\"CityForm_field\">\n                                    <SelectColorBg\n                                        active_ix={active_color_ix}\n                                        color_bg_arr={city_bg_color_arr}\n                                        handleChangeColorBg={\n                                            handleChangeColorBg\n                                        }\n                                    />\n                                </div>\n\n                                <div className=\"CityForm_field\">\n                                    <FastField\n                                        name=\"image\"\n                                        component={InputImage}\n                                        label=\"Image\"\n                                        handleImageChange={handleImageChange}\n                                    />\n                                </div>\n                                <br />\n\n                                <div\n                                    className={`App_submit display-flex-center  ${\n                                        props.dirty ||\n                                        active_color_ix != bg_color\n                                            ? ''\n                                            : 'pointer-events-none opacity-05'\n                                    }`}\n                                    onClick={() => handleError(props.errors)}\n                                >\n                                    <ButtonRipple\n                                        type=\"submit\"\n                                        title=\"Create new city\"\n                                    >\n                                        {title_submit}\n                                    </ButtonRipple>\n                                </div>\n                            </div>\n                        </Form>\n                    </div>\n                );\n            }}\n        </Formik>\n    );\n}\n\nexport default CityForm;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n//\nimport IconsInput from '../../../../../_icons_svg/Icons_input/IconsInput';\n//\nimport InputFile from '../../../../../component/input/input_file/InputFile';\nimport ImgVidPreview from '../../../../../component/input_img_vid_preview/img_vid_preview/ImgVidPreview';\n//\nimport './InputImage.scss';\n\n//\nInputImage.propTypes = {\n    form: PropTypes.object,\n    field: PropTypes.object,\n\n    type: PropTypes.string,\n    label: PropTypes.string,\n\n    onImageChange: PropTypes.func,\n};\n\nInputImage.defaultProps = {\n    type: 'file',\n};\n\n//\nfunction InputImage({ form, field, type, label, handleImageChange }) {\n    //\n    const { name, value } = field;\n    const { touched, errors } = form;\n    const showError = touched[name] && errors[name];\n\n    //\n    const [urls, setUrls] = useState(value ? [{ url: value, type: name }] : []);\n\n    /* -------------- IMAGE -------------*/\n\n    //\n    function onImageChange(data_files) {\n        const { files, vid_pics } = data_files;\n\n        setUrls(vid_pics);\n        form.setFieldValue('image', vid_pics[0].url);\n\n        handleImageChange(files[0]);\n    }\n\n    //\n    function handleDeleteAnItem() {\n        setUrls([]);\n        handleImageChange('');\n        form.setFieldValue('image', '');\n    }\n\n    //\n    return (\n        <div className=\"InputImage\">\n            <div>\n                <label className=\"font-500\" htmlFor={name}>\n                    {label}\n                </label>\n            </div>\n\n            <div className=\"InputImage_file\">\n                <InputFile\n                    width=\"2rem\"\n                    type={type}\n                    {...field}\n                    accept=\"image/*\"\n                    vid_pic_key=\"url\"\n                    handleChange={onImageChange}\n                >\n                    <IconsInput />\n                </InputFile>\n            </div>\n\n            {showError && <div className=\"error-field\">{showError}</div>}\n\n            <div className=\"InputImage_preview\">\n                <ImgVidPreview\n                    deleteAnItem={handleDeleteAnItem}\n                    delete_in_pic={true}\n                    urls={urls}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default InputImage;\n"],"sourceRoot":""}